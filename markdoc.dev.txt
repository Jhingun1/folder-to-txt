

--- docs/config.html ---

Markdoc | Config objects.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsConfig objectsWhen you customize Markdoc, you must pass your customization into the rendering pipeline. The most common way to do this is to provide a config object to the transform phase of rendering.For instance, create a config object that specifies the variable $version has a value of "1.0". Then, pass it to the transform function./** @type {import('@markdoc/markdoc').Config} */
const config = { variables: { version: "1.0" }};
const ast = Markdoc.parse("This is version {% $version %}");
const content = Markdoc.transform(ast, config);
const html = Markdoc.renderers.html(content);
CopyOptionsThis table outlines the various options you can pass in a config object.KeyTypeDescriptionnodes{ [nodeType: NodeType]: Schema }Register custom nodes in your schematags{ [tagName: string]: Schema }Register custom tags in your schemavariables{ [variableName: string]: any }Register variables to use in your documentfunctions{ [functionName: string]: ConfigFunction }Register custom functions to use in your documentpartials{ [partialPath: string]: Ast.Node }Register reusable pieces of content to used by the partial tagFull exampleHere's an example of what a Markdoc config would look like:/** @type {import('@markdoc/markdoc').Config} */
const config = {
  nodes: {
    heading: {
      render: 'Heading',
      attributes: {
        id: { type: String },
        level: { type: Number }
      }
    }
  },
  tags: {
    callout: {
      render: 'Callout',
      attributes: {
        title: {
          type: String
        }
      }
    }
  },
  variables: {
    name: 'Dr. Mark',
    frontmatter: {
      title: 'Configuration options'
    }
  },
  functions: {
    includes: {
      transform(parameters, config) {
        const [array, value] = Object.values(parameters);

        return Array.isArray(array) ? array.includes(value) : false;
      }
    }
  },
  partials: {
    'header.md': Markdoc.parse(`# My header`)
  }
};

const content = Markdoc.transform(ast, config);
CopyCMD + J / EscOptionsFull exampleThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Config objects\ndescription: Pass customizations into the rendering pipeline using a config object\n---\n\n# {% $markdoc.frontmatter.title %}\n\nWhen you customize Markdoc, you must pass your customization into the rendering pipeline. The most common way to do this is to provide a config object to the [transform](/docs/render#transform) phase of rendering. \n\nFor instance, create a config object that specifies the variable `$version` has a value of `\"1.0\"`. Then, pass it to the `transform` function.\n\n{% example %}\n```js\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = { variables: { version: \"1.0\" }};\nconst ast = Markdoc.parse(\"This is version {% $version %}\");\nconst content = Markdoc.transform(ast, config);\nconst html = Markdoc.renderers.html(content);\n```\n{% /example %}\n\n## Options\n\nThis table outlines the various options you can pass in a config object.\n\n{% table %}\n\n- Key\n- Type\n- Description\n\n---\n\n- [`nodes`](/docs/nodes)\n- {% code %}{ [nodeType: [NodeType](/docs/nodes#built-in-nodes)]: [Schema](https://github.com/markdoc/markdoc/blob/60a2c831bd7ac8f2f24aabfde0b36e56e5d0dbe1/src/types.ts#L101-L109) }{% /code%}\n- Register [custom nodes](/docs/nodes) in your schema\n\n---\n\n- [`tags`](/docs/tags)\n- {% code %}{ [tagName: string]: [Schema](https://github.com/markdoc/markdoc/blob/60a2c831bd7ac8f2f24aabfde0b36e56e5d0dbe1/src/types.ts#L101-L109) }{% /code%}\n- Register [custom tags](/docs/tags) in your schema\n\n---\n\n- [`variables`](/docs/variables)\n- `{ [variableName: string]: any }`\n- Register [variables](/docs/variables) to use in your document\n\n---\n\n- [`functions`](/docs/functions)\n- {% code %}{ [functionName: string]: [ConfigFunction](https://github.com/markdoc/markdoc/blob/6bcb8a0c48a181ca9df577534d841280646cea09/src/types.ts#L31-L36) }{% /code %}\n- Register [custom functions](/docs/functions) to use in your document\n\n---\n\n- [`partials`](/docs/partials)\n- `{ [partialPath: string]: Ast.Node }`\n- Register reusable pieces of content to used by the [`partial` tag](/docs/partials)\n\n{% /table %}\n\n## Full example\n\nHere's an example of what a Markdoc config would look like:\n\n```js\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  nodes: {\n    heading: {\n      render: 'Heading',\n      attributes: {\n        id: { type: String },\n        level: { type: Number }\n      }\n    }\n  },\n  tags: {\n    callout: {\n      render: 'Callout',\n      attributes: {\n        title: {\n          type: String\n        }\n      }\n    }\n  },\n  variables: {\n    name: 'Dr. Mark',\n    frontmatter: {\n      title: 'Configuration options'\n    }\n  },\n  functions: {\n    includes: {\n      transform(parameters, config) {\n        const [array, value] = Object.values(parameters);\n\n        return Array.isArray(array) ? array.includes(value) : false;\n      }\n    }\n  },\n  partials: {\n    'header.md': Markdoc.parse(`# My header`)\n  }\n};\n\nconst content = Markdoc.transform(ast, config);\n```\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"config-objects"},"children":["Config objects"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["When you customize Markdoc, you must pass your customization into the rendering pipeline. The most common way to do this is to provide a config object to the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render#transform","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["transform"]}," phase of rendering."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["For instance, create a config object that specifies the variable ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["$version"]}," has a value of ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["\"1.0\""]},". Then, pass it to the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]}," function."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["/** @type {import('@markdoc/markdoc').Config} */\nconst config = { variables: { version: \"1.0\" }};\nconst ast = Markdoc.parse(\"This is version {% $version %}\");\nconst content = Markdoc.transform(ast, config);\nconst html = Markdoc.renderers.html(content);\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"options"},"children":["Options"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This table outlines the various options you can pass in a config object."]},{"$$mdtype":"Tag","name":"table","attributes":{},"children":[{"$$mdtype":"Tag","name":"thead","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Key"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Type"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Description"]}]}]},{"$$mdtype":"Tag","name":"tbody","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["nodes"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Code","attributes":{},"children":["{ [nodeType: ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes#built-in-nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["NodeType"]},"]: ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/markdoc/blob/60a2c831bd7ac8f2f24aabfde0b36e56e5d0dbe1/src/types.ts#L101-L109","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Schema"]}," }"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Register ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["custom nodes"]}," in your schema"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["tags"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Code","attributes":{},"children":["{ [tagName: string]: ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/markdoc/blob/60a2c831bd7ac8f2f24aabfde0b36e56e5d0dbe1/src/types.ts#L101-L109","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Schema"]}," }"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Register ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["custom tags"]}," in your schema"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["variables"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{ [variableName: string]: any }"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Register ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["variables"]}," to use in your document"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/functions","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["functions"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Code","attributes":{},"children":["{ [functionName: string]: ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/markdoc/blob/6bcb8a0c48a181ca9df577534d841280646cea09/src/types.ts#L31-L36","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["ConfigFunction"]}," }"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Register ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/functions","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["custom functions"]}," to use in your document"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/partials","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["partials"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{ [partialPath: string]: Ast.Node }"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Register reusable pieces of content to used by the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/partials","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["partial"]}," tag"]}]}]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"full-example"},"children":["Full example"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Here's an example of what a Markdoc config would look like:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  nodes: {\n    heading: {\n      render: 'Heading',\n      attributes: {\n        id: { type: String },\n        level: { type: Number }\n      }\n    }\n  },\n  tags: {\n    callout: {\n      render: 'Callout',\n      attributes: {\n        title: {\n          type: String\n        }\n      }\n    }\n  },\n  variables: {\n    name: 'Dr. Mark',\n    frontmatter: {\n      title: 'Configuration options'\n    }\n  },\n  functions: {\n    includes: {\n      transform(parameters, config) {\n        const [array, value] = Object.values(parameters);\n\n        return Array.isArray(array) ? array.includes(value) : false;\n      }\n    }\n  },\n  partials: {\n    'header.md': Markdoc.parse(`# My header`)\n  }\n};\n\nconst content = Markdoc.transform(ast, config);\n"]}]},"frontmatter":{"title":"Config objects","description":"Pass customizations into the rendering pipeline using a config object"},"file":{"path":"/docs/config.md"}}},"__N_SSG":true},"page":"/docs/config","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/functions.html ---

Markdoc | Functions.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-905881538{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:#d97917}.icon.jsx-905881538 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.callout.jsx-f5942a5fa6301fb4{padding:.5rem 0 2rem}.content.jsx-f5942a5fa6301fb4{color:var(--dark);background:var(--code-background);border:1px solid var(--code-border);line-height:20px;padding:12px 20px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.icon.jsx-f5942a5fa6301fb4{padding-right:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.callout.jsx-f5942a5fa6301fb4 p:first-of-type{padding:0}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsFunctionsFunctions enable you extend Markdoc with custom utilities, which let you transform your content and variables at runtime.Built-in functionsMarkdoc comes out-of-the-box with six built-in functions: equals, and, or, not, default, and debug.FunctionReturnsExampleDescriptionequalsbooleanequals($myString, 'test')Performs common boolean operationandbooleanand($boolean1, $boolean2)Performs common boolean operationorbooleanor($boolean1, $boolean2)Performs common boolean operationnotbooleannot(or($boolean1, $boolean2))Performs common boolean operationdefaultmixeddefault($variable, true)Returns the second parameter if the first parameter is undefineddebugstringdebug($anyVariable)Serializes the value as JSON, for debuggingAnd/Or/NotUse these functions with the if tag to perform boolean operations and render the content when the condition is met.WarningUnlike JavaScript, Markdoc only considers undefined, null, and false to be falsey.This is always shown
{% if and(not($a), or($b, $c)) %}
This is shown only if $a is falsy and either $b or $c is true.
{% /if %}
CopyEqualsUse the equals function to compare a variable against a given value. This function uses JavaScript's strict equality semantics, and is only used for primitive types.{% if equals($myVar, "test") %}
The variable $myVar is equal to the string "test".
{% /if %}
CopyDefaultThis function is useful to set a value for a variable that might not exist.{% if default($showPrompt, true) %}
Hey there!
{% /if %}
CopyDebugThis function simply renders the value as a serialized JSON value in the document. This can be useful for determining what value is in a variable.{% debug($myVar) %}
CopyCreating a custom functionTo extend Markdoc with your own functions, first create custom function definitions:const includes = {
  transform(parameters) {
    const [array, value] = Object.values(parameters);

    return Array.isArray(array) ? array.includes(value) : false;
  }
};

const uppercase = {
  transform(parameters) {
    const string = parameters[0];

    return typeof string === 'string' ? string.toUpperCase() : string;
  }
};
CopyThen, pass the functions to your config object./** @type {import('@markdoc/markdoc').Config} */
const config = {
  functions: {
    includes,
    uppercase
  }
};

const content = Markdoc.transform(ast, config);
CopyFinally, call the functions within your Markdoc content{% if includes($countries, "AR") %} 🇦🇷 {% /if %}
{% if includes($countries, "AU") %} 🇦🇺 {% /if %}
{% if includes($countries, "ES") %} 🇪🇸 {% /if %}
{% if includes($countries, "JP") %} 🇯🇵 {% /if %}
{% if includes($countries, "NG") %} 🇳🇬 {% /if %}
{% if includes($countries, "US") %} 🇺🇸 {% /if %}
CopyNext stepsValidate your contentRender as HTML or ReactCMD + J / EscBuilt-in functionsAnd/Or/NotEqualsDefaultDebugCreating a custom functionThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Functions\ndescription: Functions let you extend Markdoc to run custom code.\n---\n\n# {% $markdoc.frontmatter.title %}\n\nFunctions enable you extend Markdoc with custom utilities, which let you transform your content and [variables](/docs/syntax#variables) at runtime.\n\n\n## Built-in functions\n\nMarkdoc comes out-of-the-box with six built-in functions: `equals`, `and`, `or`, `not`, `default`, and `debug`.\n\n{% table %}\n\n- Function\n- Returns\n- Example\n- Description\n\n---\n\n- `equals`\n- `boolean`\n- `equals($myString, 'test')`\n- Performs common boolean operation\n\n---\n\n- `and`\n- `boolean`\n- `and($boolean1, $boolean2)`\n- Performs common boolean operation\n\n---\n\n- `or`\n- `boolean`\n- `or($boolean1, $boolean2)`\n- Performs common boolean operation\n\n---\n\n- `not`\n- `boolean`\n- `not(or($boolean1, $boolean2))`\n- Performs common boolean operation\n\n---\n\n- `default`\n- `mixed`\n- `default($variable, true)`\n- Returns the second parameter if the first parameter is `undefined`\n\n---\n\n- `debug`\n- `string`\n- `debug($anyVariable)`\n- Serializes the value as JSON, for debugging\n\n{% /table %}\n\n### And/Or/Not\n\nUse these functions with the `if` [tag](/docs/tags) to perform boolean operations and render the content when the condition is met.\n\n{% callout type=\"warning\" %}\nUnlike JavaScript, Markdoc only considers `undefined`, `null`, and `false` to be falsey.\n{% /callout %}\n\n{% example %}\n\n```\nThis is always shown\n{% if and(not($a), or($b, $c)) %}\nThis is shown only if $a is falsy and either $b or $c is true.\n{% /if %}\n```\n\n{% /example %}\n\n### Equals\n\nUse the `equals` function to compare a variable against a given value. This function uses JavaScript's strict equality semantics, and is only used for primitive types.\n\n{% example %}\n\n```\n{% if equals($myVar, \"test\") %}\nThe variable $myVar is equal to the string \"test\".\n{% /if %}\n```\n\n{% /example %}\n\n### Default\n\nThis function is useful to set a value for a variable that might not exist.\n\n{% example %}\n\n```\n{% if default($showPrompt, true) %}\nHey there!\n{% /if %}\n```\n\n{% /example %}\n\n### Debug\n\nThis function simply renders the value as a serialized JSON value in the document. This can be useful for determining what value is in a [variable](/docs/syntax#variables).\n\n{% example %}\n\n```\n{% debug($myVar) %}\n```\n\n{% /example %}\n\n\n## Creating a custom function\n\nTo extend Markdoc with your own functions, first create custom function definitions:\n\n```js\nconst includes = {\n  transform(parameters) {\n    const [array, value] = Object.values(parameters);\n\n    return Array.isArray(array) ? array.includes(value) : false;\n  }\n};\n\nconst uppercase = {\n  transform(parameters) {\n    const string = parameters[0];\n\n    return typeof string === 'string' ? string.toUpperCase() : string;\n  }\n};\n```\n\nThen, pass the functions to your [`config` object](/docs/config).\n\n```js\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  functions: {\n    includes,\n    uppercase\n  }\n};\n\nconst content = Markdoc.transform(ast, config);\n```\n\nFinally, call the functions within your Markdoc content\n\n{% example %}\n\n```md\n{% if includes($countries, \"AR\") %} 🇦🇷 {% /if %}\n{% if includes($countries, \"AU\") %} 🇦🇺 {% /if %}\n{% if includes($countries, \"ES\") %} 🇪🇸 {% /if %}\n{% if includes($countries, \"JP\") %} 🇯🇵 {% /if %}\n{% if includes($countries, \"NG\") %} 🇳🇬 {% /if %}\n{% if includes($countries, \"US\") %} 🇺🇸 {% /if %}\n```\n\n{% /example %}\n\n## Next steps\n\n- [Validate your content](/docs/validation)\n- [Render as HTML or React](/docs/render)\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"functions"},"children":["Functions"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Functions enable you extend Markdoc with custom utilities, which let you transform your content and ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/syntax#variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["variables"]}," at runtime."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"built-in-functions"},"children":["Built-in functions"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc comes out-of-the-box with six built-in functions: ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["equals"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["and"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["or"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["not"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["default"]},", and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["debug"]},"."]},{"$$mdtype":"Tag","name":"table","attributes":{},"children":[{"$$mdtype":"Tag","name":"thead","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Function"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Returns"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Example"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Description"]}]}]},{"$$mdtype":"Tag","name":"tbody","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["equals"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["boolean"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["equals($myString, 'test')"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Performs common boolean operation"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["and"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["boolean"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["and($boolean1, $boolean2)"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Performs common boolean operation"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["or"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["boolean"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["or($boolean1, $boolean2)"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Performs common boolean operation"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["not"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["boolean"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["not(or($boolean1, $boolean2))"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Performs common boolean operation"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["default"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["mixed"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["default($variable, true)"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Returns the second parameter if the first parameter is ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["undefined"]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["debug"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["string"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["debug($anyVariable)"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Serializes the value as JSON, for debugging"]}]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"and/or/not"},"children":["And/Or/Not"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Use these functions with the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["if"]}," ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["tag"]}," to perform boolean operations and render the content when the condition is met."]},{"$$mdtype":"Tag","name":"Callout","attributes":{"type":"warning"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Unlike JavaScript, Markdoc only considers ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["undefined"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["null"]},", and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["false"]}," to be falsey."]}]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["This is always shown\n{% if and(not($a), or($b, $c)) %}\nThis is shown only if $a is falsy and either $b or $c is true.\n{% /if %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"equals"},"children":["Equals"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Use the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["equals"]}," function to compare a variable against a given value. This function uses JavaScript's strict equality semantics, and is only used for primitive types."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% if equals($myVar, \"test\") %}\nThe variable $myVar is equal to the string \"test\".\n{% /if %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"default"},"children":["Default"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This function is useful to set a value for a variable that might not exist."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% if default($showPrompt, true) %}\nHey there!\n{% /if %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"debug"},"children":["Debug"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This function simply renders the value as a serialized JSON value in the document. This can be useful for determining what value is in a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/syntax#variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["variable"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% debug($myVar) %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"creating-a-custom-function"},"children":["Creating a custom function"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To extend Markdoc with your own functions, first create custom function definitions:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["const includes = {\n  transform(parameters) {\n    const [array, value] = Object.values(parameters);\n\n    return Array.isArray(array) ? array.includes(value) : false;\n  }\n};\n\nconst uppercase = {\n  transform(parameters) {\n    const string = parameters[0];\n\n    return typeof string === 'string' ? string.toUpperCase() : string;\n  }\n};\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Then, pass the functions to your ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/config","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["config"]}," object"]},"."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  functions: {\n    includes,\n    uppercase\n  }\n};\n\nconst content = Markdoc.transform(ast, config);\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Finally, call the functions within your Markdoc content"]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["{% if includes($countries, \"AR\") %} 🇦🇷 {% /if %}\n{% if includes($countries, \"AU\") %} 🇦🇺 {% /if %}\n{% if includes($countries, \"ES\") %} 🇪🇸 {% /if %}\n{% if includes($countries, \"JP\") %} 🇯🇵 {% /if %}\n{% if includes($countries, \"NG\") %} 🇳🇬 {% /if %}\n{% if includes($countries, \"US\") %} 🇺🇸 {% /if %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/validation","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Validate your content"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Render as HTML or React"]}]}]}]},"frontmatter":{"title":"Functions","description":"Functions let you extend Markdoc to run custom code."},"file":{"path":"/docs/functions.md"}}},"__N_SSG":true},"page":"/docs/functions","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/index.html ---

Markdoc | Get started with Markdoc.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsGet started with MarkdocFollow the instructions below to install Markdoc in your app. Or check out our integration guide to help you build a documentation site.Install MarkdocInstall the Markdoc library:npm install @markdoc/markdoc
Copyoryarn add @markdoc/markdoc
CopyImport MarkdocImport the Markdoc library in your app:const Markdoc = require('@markdoc/markdoc');
CopyIf you're using ESM:import Markdoc from '@markdoc/markdoc';
CopyUse MarkdocCall the parse, transform and render Markdoc functions to render your content.const source = '# Markdoc';

const ast = Markdoc.parse(source);
const content = Markdoc.transform(ast, /* [config](/docs/config) */);

const html = Markdoc.renderers.html(content);
CopyNext stepsLearn Markdoc syntaxCMD + J / EscInstall MarkdocImport MarkdocUse MarkdocThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Get started with Markdoc\ndescription: How to get started with Markdoc\n---\n\n# {% $markdoc.frontmatter.title %}\n\nFollow the instructions below to install Markdoc in your app. Or check out our [integration guide](/docs/nextjs) to help you build a documentation site. \n\n## Install Markdoc\n\nInstall the Markdoc library:\n\n```shell\nnpm install @markdoc/markdoc\n```\n\nor\n\n```shell\nyarn add @markdoc/markdoc\n```\n\n## Import Markdoc\n\nImport the Markdoc library in your app:\n\n```js\nconst Markdoc = require('@markdoc/markdoc');\n```\n\nIf you're using ESM:\n\n```js\nimport Markdoc from '@markdoc/markdoc';\n```\n\n## Use Markdoc\n\nCall the `parse`, `transform` and `render` Markdoc functions to render your content.\n\n```js\nconst source = '# Markdoc';\n\nconst ast = Markdoc.parse(source);\n{% comment %}\n// prettier-ignore\n{% /comment %}\nconst content = Markdoc.transform(ast, /* [config](/docs/config) */);\n\nconst html = Markdoc.renderers.html(content);\n```\n\n## Next steps\n\n- [Learn Markdoc syntax](/docs/syntax)\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"get-started-with-markdoc"},"children":["Get started with Markdoc"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Follow the instructions below to install Markdoc in your app. Or check out our ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nextjs","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["integration guide"]}," to help you build a documentation site."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"install-markdoc"},"children":["Install Markdoc"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Install the Markdoc library:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"shell"},"children":["npm install @markdoc/markdoc\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["or"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"shell"},"children":["yarn add @markdoc/markdoc\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"import-markdoc"},"children":["Import Markdoc"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Import the Markdoc library in your app:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["const Markdoc = require('@markdoc/markdoc');\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you're using ESM:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["import Markdoc from '@markdoc/markdoc';\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"use-markdoc"},"children":["Use Markdoc"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Call the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["parse"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["render"]}," Markdoc functions to render your content."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["const source = '# Markdoc';\n\nconst ast = Markdoc.parse(source);","\nconst content = Markdoc.transform(ast, /* [config](/docs/config) */);\n\nconst html = Markdoc.renderers.html(content);\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/syntax","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Learn Markdoc syntax"]}]}]}]},"frontmatter":{"title":"Get started with Markdoc","description":"How to get started with Markdoc"},"file":{"path":"/docs/getting-started.md"}}},"__N_SSG":true},"page":"/docs/getting-started","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/overview.html ---

Markdoc | What is Markdoc?.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}iframe.jsx-859891d82054713f{aspect-ratio:16/9;margin:var(--default-vertical-spacing)0;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:1px solid var(--code-border)}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsWhat is Markdoc?Markdoc is a Markdown-based document format and a framework for content publishing. It was designed internally at Stripe to meet the needs of our user-facing product documentation. Markdoc extends Markdown with a custom syntax for tags and annotations, providing a way to tailor content to individual users and introduce interactive elements.How Markdoc worksBy design, Markdoc is not a full-blown templating language and does not allow mixing arbitrary code and content. It is, however, a fully declarative format that is machine-readable from top to bottom: it parses to a data structure that can be traversed to support powerful static analysis, validation, and programmatic content transformation.The Markdoc renderer interprets custom tag and node definitions, transforming the document data structure into a tree of renderable nodes, which is finally converted into the desired output format. The Markdoc framework currently includes three renderers: an HTML string renderer, a static React renderer that transpiles a document to JavaScript code, and a dynamic React renderer that converts renderable tree nodes directly into a React elements.Markdoc's React renderer makes it possible to use React components within Markdown content, supporting interactive features like tab switchers and collapsible sections. It is possible to implement custom renderers that introduce support for additional output formats and client frameworks.Why add markup to Markdown?We chose Markdown as a starting point because it is easy to read and reason about, already familiar to many engineers and technical writers, and widely supported by a large ecosystem of existing tools. Markdown by itself, however, isn't ideally suited for writing complex, highly-structured content like documentation.Markdoc provides an extensible system for defining custom tags that can be used seamlessly in Markdown content. Using the custom tag syntax, we're able to express more elaborate document hierarchy, insert interactive components, and support features like conditional content, content inclusion, and variable interpolation. Markdoc's extensions to the Markdown syntax are designed to be composable and minimally intrusive, providing crucial functionality without compromising the readability of prose.Under the hoodMarkdoc's parser is built on top of a popular open-source Markdown library called markdown-it. Markdoc uses markdown-it as a tokenizer, building an Abstract Syntax Tree (AST) from the array of tokens emitted by markdown-it. Markdoc's custom tag syntax is implemented inside of a markdown-it plugin. The logic that parses the tag syntax is generated from a peg.js grammar.Markdoc has its own dedicated rendering architecture rather than relying on markdown-it to generate its output. Developing an independent rendering system was necessary in order to handle Markdoc's custom tags and support multiple output formats.Next stepsInstall MarkdocTry it out onlineCMD + J / EscHow Markdoc worksWhy add markup to Markdown?Under the hoodThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: What is Markdoc?\ndescription:\n---\n\n# {% $markdoc.frontmatter.title %}\n\nMarkdoc is a Markdown-based document format and a framework for content publishing. It was designed internally at Stripe to meet the needs of our user-facing [product documentation](https://docs.stripe.com). Markdoc extends Markdown with a [custom syntax](/docs/syntax) for tags and annotations, providing a way to tailor content to individual users and introduce interactive elements.\n\n{% youtube\n  src=\"https://www.youtube-nocookie.com/embed/MAWK_VmjU1Y?controls=0\"\n  title=\"Introducing Markdoc\"\n  width=\"50%\" /%}\n\n## How Markdoc works\n\nBy design, Markdoc is not a full-blown templating language and does not allow mixing arbitrary code and content. It is, however, a fully declarative format that is machine-readable from top to bottom: it parses to a data structure that can be traversed to support powerful static analysis, validation, and programmatic content transformation.\n\nThe Markdoc [renderer](/docs/render) interprets custom [tag](/docs/tags) and [node](/docs/nodes) definitions, transforming the document data structure into a tree of renderable nodes, which is finally converted into the desired output format. The Markdoc framework currently includes three renderers: an HTML string renderer, a static React renderer that transpiles a document to JavaScript code, and a dynamic React renderer that converts renderable tree nodes directly into a React elements.\n\nMarkdoc's React renderer makes it possible to use React components within Markdown content, supporting interactive features like tab switchers and collapsible sections. It is possible to implement custom renderers that introduce support for additional output formats and client frameworks.\n## Why add markup to Markdown?\n\nWe chose Markdown as a starting point because it is easy to read and reason about, already familiar to many engineers and technical writers, and widely supported by a large ecosystem of existing tools. Markdown by itself, however, isn't ideally suited for writing complex, highly-structured content like documentation.\n\nMarkdoc provides an extensible system for defining custom tags that can be used seamlessly in Markdown content. Using the custom tag syntax, we're able to express more elaborate document hierarchy, insert interactive components, and support features like conditional content, content inclusion, and variable interpolation. Markdoc's extensions to the Markdown syntax are designed to be composable and minimally intrusive, providing crucial functionality without compromising the readability of prose. \n## Under the hood\n\nMarkdoc's parser is built on top of a popular open-source Markdown library called [`markdown-it`](https://github.com/markdown-it/markdown-it). Markdoc uses `markdown-it` as a tokenizer, building an Abstract Syntax Tree (AST) from the array of tokens emitted by `markdown-it`. Markdoc's custom tag syntax is implemented inside of a `markdown-it` plugin. The logic that parses the tag syntax is generated from a [peg.js](https://pegjs.org/) grammar.\n\nMarkdoc has its own dedicated rendering architecture rather than relying on markdown-it to generate its output. Developing an independent rendering system was necessary in order to handle Markdoc's custom tags and support multiple output formats.\n\n## Next steps\n\n- [Install Markdoc](/docs/getting-started)\n- [Try it out online](/sandbox)\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"what-is-markdoc"},"children":["What is Markdoc?"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc is a Markdown-based document format and a framework for content publishing. It was designed internally at Stripe to meet the needs of our user-facing ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://docs.stripe.com","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["product documentation"]},". Markdoc extends Markdown with a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/syntax","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["custom syntax"]}," for tags and annotations, providing a way to tailor content to individual users and introduce interactive elements."]},{"$$mdtype":"Tag","name":"Youtube","attributes":{"src":"https://www.youtube-nocookie.com/embed/MAWK_VmjU1Y?controls=0","title":"Introducing Markdoc","width":"50%"},"children":[]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"how-markdoc-works"},"children":["How Markdoc works"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["By design, Markdoc is not a full-blown templating language and does not allow mixing arbitrary code and content. It is, however, a fully declarative format that is machine-readable from top to bottom: it parses to a data structure that can be traversed to support powerful static analysis, validation, and programmatic content transformation."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The Markdoc ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["renderer"]}," interprets custom ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["tag"]}," and ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["node"]}," definitions, transforming the document data structure into a tree of renderable nodes, which is finally converted into the desired output format. The Markdoc framework currently includes three renderers: an HTML string renderer, a static React renderer that transpiles a document to JavaScript code, and a dynamic React renderer that converts renderable tree nodes directly into a React elements."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc's React renderer makes it possible to use React components within Markdown content, supporting interactive features like tab switchers and collapsible sections. It is possible to implement custom renderers that introduce support for additional output formats and client frameworks."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"why-add-markup-to-markdown"},"children":["Why add markup to Markdown?"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["We chose Markdown as a starting point because it is easy to read and reason about, already familiar to many engineers and technical writers, and widely supported by a large ecosystem of existing tools. Markdown by itself, however, isn't ideally suited for writing complex, highly-structured content like documentation."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc provides an extensible system for defining custom tags that can be used seamlessly in Markdown content. Using the custom tag syntax, we're able to express more elaborate document hierarchy, insert interactive components, and support features like conditional content, content inclusion, and variable interpolation. Markdoc's extensions to the Markdown syntax are designed to be composable and minimally intrusive, providing crucial functionality without compromising the readability of prose."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"under-the-hood"},"children":["Under the hood"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc's parser is built on top of a popular open-source Markdown library called ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdown-it/markdown-it","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["markdown-it"]}]},". Markdoc uses ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["markdown-it"]}," as a tokenizer, building an Abstract Syntax Tree (AST) from the array of tokens emitted by ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["markdown-it"]},". Markdoc's custom tag syntax is implemented inside of a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["markdown-it"]}," plugin. The logic that parses the tag syntax is generated from a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://pegjs.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["peg.js"]}," grammar."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc has its own dedicated rendering architecture rather than relying on markdown-it to generate its output. Developing an independent rendering system was necessary in order to handle Markdoc's custom tags and support multiple output formats."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/getting-started","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Install Markdoc"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/sandbox","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Try it out online"]}]}]}]},"frontmatter":{"title":"What is Markdoc?","description":null},"file":{"path":"/docs/overview.md"}}},"__N_SSG":true},"page":"/docs/overview","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/nextjs.html ---

Markdoc | Using Markdoc with Next.js.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.icon.jsx-905881538{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:#d97917}.icon.jsx-905881538 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.callout.jsx-f5942a5fa6301fb4{padding:.5rem 0 2rem}.content.jsx-f5942a5fa6301fb4{color:var(--dark);background:var(--code-background);border:1px solid var(--code-border);line-height:20px;padding:12px 20px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.icon.jsx-f5942a5fa6301fb4{padding-right:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.callout.jsx-f5942a5fa6301fb4 p:first-of-type{padding:0}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsUsing Markdoc with Next.jsUsing the @markdoc/next.js package/plugin allows you to create custom .md and .mdoc pages in your Next.js apps, and automatically render them with Markdoc.To get started right away, check out this starter repo. The quickest way to deploy your own version of the starter is by deploying it with Vercel or Netlify by clicking one of the buttons below. SetupThis guide assumes that you already have Next.js installed. If you're starting from scratch, follow these steps for getting started with Next.js.Follow these steps to get started with @markdoc/next.js.Install @markdoc/next.js and @markdoc/markdoc:npm install @markdoc/next.js @markdoc/markdoc
CopyUpdate your next.config.jsconst withMarkdoc = require('@markdoc/next.js');

module.exports = withMarkdoc(/* [options](#options) */)({
  pageExtensions: ['md', 'mdoc', 'js', 'jsx', 'ts', 'tsx']
});
CopyCreate a new .md file in within /pages/, such as getting-started.mdpages
├── _app.js
├── docs
│   └── getting-started.md
└── index.md
CopyAdd some Markdoc to your file:---
title: Get started with Markdoc
description: How to get started with Markdoc
---

# Get started with Markdoc
CopyOr, clone this starter repo and follow the directions in the README.OptionsYou can pass options to withMarkdoc to adjust how the plugin behaves.OptionTypeDescriptionschemaPathstringPath to your Markdoc schema folder. See schema customization.mode'static' | 'server'Determines whether the generated Markdoc pages use getStaticProps or getServerSideProps.For example, this is how you set the mode to static to pre-render the page at build time using the props returned by getStaticProps:module.exports = withMarkdoc({ mode: 'static' })({
  pageExtensions: // [...](https://nextjs.org/docs/api-reference/next.config.js/custom-page-extensions)
});
CopySchema customizationYou can define your Markdoc schema by creating a /markdoc/ directory at the root of your project. This is where custom nodes, tags, and functions are defined..
├── components
│   ├── ...
│   └── Link.js
├── markdoc
│   ├── functions.js
│   ├── nodes
│   │   ├── ...
│   │   ├── link.markdoc.js
│   │   └── index.js
│   └── tags
│       ├── ...
│       └── index.js
├── pages
│   ├── _app.js
│   └── index.md
└── next.config.js

CopyYou can choose the import location for your schema by passing the schemaPath option to withMarkdoc:module.exports = withMarkdoc({ schemaPath: './path/to/your/markdoc/schema' })({
  pageExtensions: // [...](https://nextjs.org/docs/api-reference/next.config.js/custom-page-extensions)
});
CopyTagsYou register custom tags by exporting an object from /markdoc/tags.js (or /markdoc/tags/index.js). In this example, the tag name is button. The render field tells Markdoc to render a Button React component whenever the {% button %} tag is used.// markdoc/tags.js

import { Button } from '../components/Button';

export const button = {
  render: Button,
  attributes: {
    href: {
      type: String
    }
  }
};
CopyIf you want to use kebab case for your tag names, you can export an object like:// markdoc/tags.js

export default {
  'special-button': {
    render: SpecialButton,
    attributes: {
      href: {
        type: String
      }
    }
  }
};
CopyNodesCustom node registrations are almost identical to tags, except you create a /markdoc/nodes.js file instead, for example:// markdoc/nodes.js

import { Link } from 'next/link';

export const link = {
  render: Link,
  attributes: {
    href: {
      type: String
    }
  }
};
CopyThis example overrides the default link node.FunctionsCustom functions registrations are almost identical to tags and nodes, except you create a /markdoc/functions.js file instead, for example:// markdoc/functions.js

export const upper = {
  transform(parameters) {
    const string = parameters[0];

    return typeof string === 'string' ? string.toUpperCase() : string;
  }
};
CopyAdvancedIf you want more control over your config object, or you are using the Markdoc language server for Visual Studio Code, you can create a /markdoc/config.js file and export the full config object. This allows you to extend your config with more data, like records or utility functions.// markdoc/config.js

import tags from './tags';
import nodes from './nodes';
import functions from './functions';

export default {
  tags,
  nodes,
  functions
  // add other stuff here
};
CopyFrontmatterMarkdoc is frontmatter agnostic, however, @markdoc/next.js uses YAML as its frontmatter language. You can access the frontmatter object within your _app.js under pageProps.markdoc.frontmatter, or in your content using the $markdoc.frontmatter variable.For example:---
title: Using the Next.js plugin
description: Integrate Markdoc into your Next.js app
---

# {% $markdoc.frontmatter.title %}
CopyPartialsPartials automatically load from the /markdoc/partials/ directory. For example:{% partial file="header.md" /%}
Copywould load and render the contents of markdoc/partials/header.mdLayoutsTo create a custom layout for each of your Markdown/Markdoc files, wrap your Component within your _app.js, for example:// pages/_app.js

import Layout from '../components/Layout';

export default function App({ Component, pageProps }) {
  return (
    <Layout frontmatter={pageProps.markdoc.frontmatter}>
      <Component {...pageProps} />
    </Layout>
  );
}
CopyCommentsYou can add comments to your Next.js content by passing allowComments to the Markdoc tokenizer:const withMarkdoc = require('@markdoc/next.js');

withMarkdoc({ tokenizerOptions: { allowComments: true } });
Copyand then using comment syntax:<!-- Your comment here -->
CopyBuilt-in Next.js tagsNext.js Markdoc provides custom tags out-of-the-box that you can add to your schema. To include them, export them by name in your schema directory (for example, /markdoc/). For example:// markdoc/tags/Next.markdoc.js

export { comment, head, link, script } from '@markdoc/next.js/tags';

// or

export * from '@markdoc/next.js/tags';
CopyHeadRenders a Next.js Head component. You can use this to add stuff to the <head> of your page.WarningYou need to create and register your own tags for meta, title, and so on.{% head %}

Add custom `title` and `meta` tags here…

{% /head %}
CopyLinkRenders a Next.js Link component. Requires passing an href attribute.{% link href="/docs/getting-started" %}
Getting started
{% /link %}
CopyScriptRenders a Next.js Script component. Requires passing a src attribute.{% script src="https://js.stripe.com/v3" /%}
CopyCMD + J / EscSetupOptionsSchema customizationTagsNodesFunctionsAdvancedFrontmatterPartialsLayoutsCommentsBuilt-in Next.js tagsHeadLinkScriptThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Using Markdoc with Next.js\ndescription: Learn how to integrate Markdoc into a Next.js project.\n---\n\n# {% $markdoc.frontmatter.title %}\n\nUsing the `@markdoc/next.js` package/plugin allows you to create custom `.md` and `.mdoc` pages in your Next.js apps, and automatically render them with Markdoc.\n\nTo get started right away, check out [this starter repo](https://github.com/markdoc/markdoc-starter). The quickest way to deploy your own version of the starter is by deploying it with [Vercel](https://vercel.com/) or [Netlify](https://www.netlify.com/) by clicking one of the buttons below.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https://github.com/markdoc/markdoc-starter) [![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/markdoc/markdoc-starter)\n\n## Setup\n\nThis guide assumes that you already have Next.js installed. If you're starting from scratch, follow these steps for [getting started with Next.js](https://nextjs.org/docs).\n\n\\\nFollow these steps to get started with `@markdoc/next.js`.\n\n1. Install `@markdoc/next.js` and `@markdoc/markdoc`:\n   ```shell\n   npm install @markdoc/next.js @markdoc/markdoc\n   ```\n2. Update your `next.config.js`\n\n   ```js\n   const withMarkdoc = require('@markdoc/next.js');\n\n   module.exports = withMarkdoc(/* [options](#options) */)({\n     pageExtensions: ['md', 'mdoc', 'js', 'jsx', 'ts', 'tsx']\n   });\n   ```\n\n3. Create a new `.md` file in within `/pages/`, such as `getting-started.md`\n\n   ```\n   pages\n   ├── _app.js\n   ├── docs\n   │   └── getting-started.md\n   └── index.md\n   ```\n\n4. Add some Markdoc to your file:\n\n   ```\n   ---\n   title: Get started with Markdoc\n   description: How to get started with Markdoc\n   ---\n\n   # Get started with Markdoc\n   ```\n\n\\\nOr, clone [this starter repo](https://github.com/markdoc/markdoc-starter) and follow the directions in the [README](https://github.com/markdoc/markdoc-starter/blob/main/README.md).\n\n## Options\n\nYou can pass options to `withMarkdoc` to adjust how the plugin behaves.\n\n{% table %}\n\n- Option\n- Type\n- Description\n\n---\n\n- `schemaPath`\n- `string`\n- Path to your Markdoc schema folder. See [schema customization](#schema-customization).\n\n---\n\n- `mode`\n- `'static' | 'server'`\n- Determines whether the generated Markdoc pages use [`getStaticProps`](https://nextjs.org/docs/basic-features/data-fetching/get-static-props) or [`getServerSideProps`](https://nextjs.org/docs/basic-features/data-fetching/get-server-side-props).\n\n{% /table %}\n\nFor example, this is how you set the `mode` to `static` to pre-render the page at build time using the props returned by `getStaticProps`:\n\n```js\nmodule.exports = withMarkdoc({ mode: 'static' })({\n  pageExtensions: // [...](https://nextjs.org/docs/api-reference/next.config.js/custom-page-extensions)\n});\n```\n\n## Schema customization\n\nYou can define your Markdoc schema by creating a `/markdoc/` directory at the root of your project. This is where custom [nodes](/docs/nodes), [tags](/docs/tags), and [functions](/docs/functions) are defined.\n\n```\n.\n├── components\n│   ├── ...\n│   └── Link.js\n├── markdoc\n│   ├── functions.js\n│   ├── nodes\n│   │   ├── ...\n│   │   ├── link.markdoc.js\n│   │   └── index.js\n│   └── tags\n│       ├── ...\n│       └── index.js\n├── pages\n│   ├── _app.js\n│   └── index.md\n└── next.config.js\n\n```\n\nYou can choose the import location for your schema by passing the `schemaPath` option to `withMarkdoc`:\n\n```js\nmodule.exports = withMarkdoc({ schemaPath: './path/to/your/markdoc/schema' })({\n  pageExtensions: // [...](https://nextjs.org/docs/api-reference/next.config.js/custom-page-extensions)\n});\n```\n\n### Tags\n\nYou register custom tags by exporting an object from `/markdoc/tags.js` (or `/markdoc/tags/index.js`). In this example, the tag name is `button`. The `render` field tells Markdoc to render a `Button` React component whenever the `{% button %}` tag is used.\n\n```js\n// markdoc/tags.js\n\nimport { Button } from '../components/Button';\n\nexport const button = {\n  render: Button,\n  attributes: {\n    href: {\n      type: String\n    }\n  }\n};\n```\n\nIf you want to use kebab case for your tag names, you can export an object like:\n\n```js\n// markdoc/tags.js\n\nexport default {\n  'special-button': {\n    render: SpecialButton,\n    attributes: {\n      href: {\n        type: String\n      }\n    }\n  }\n};\n```\n\n### Nodes\n\nCustom node registrations are almost identical to [tags](#tags), except you create a `/markdoc/nodes.js` file instead, for example:\n\n```js\n// markdoc/nodes.js\n\nimport { Link } from 'next/link';\n\nexport const link = {\n  render: Link,\n  attributes: {\n    href: {\n      type: String\n    }\n  }\n};\n```\n\nThis example overrides the default `link` [node](/docs/nodes).\n\n### Functions\n\nCustom functions registrations are almost identical to tags and nodes, except you create a `/markdoc/functions.js` file instead, for example:\n\n```js\n// markdoc/functions.js\n\nexport const upper = {\n  transform(parameters) {\n    const string = parameters[0];\n\n    return typeof string === 'string' ? string.toUpperCase() : string;\n  }\n};\n```\n\n### Advanced\n\nIf you want more control over your config object, or you are using the [Markdoc language server for Visual Studio Code](https://github.com/markdoc/language-server), you can create a `/markdoc/config.js` file and export the full config object. This allows you to extend your config with more data, like records or utility functions.\n\n```js\n// markdoc/config.js\n\nimport tags from './tags';\nimport nodes from './nodes';\nimport functions from './functions';\n\nexport default {\n  tags,\n  nodes,\n  functions\n  // add other stuff here\n};\n```\n\n## Frontmatter\n\nMarkdoc is frontmatter agnostic, however, `@markdoc/next.js` uses YAML as its frontmatter language. You can access the frontmatter object within your `_app.js` under `pageProps.markdoc.frontmatter`, or in your content using the `$markdoc.frontmatter` variable.\n\nFor example:\n\n{% example %}\n\n```md\n---\ntitle: Using the Next.js plugin\ndescription: Integrate Markdoc into your Next.js app\n---\n\n# {% $markdoc.frontmatter.title %}\n```\n\n{% /example %}\n\n## Partials\n\nPartials automatically load from the `/markdoc/partials/` directory. For example:\n\n{% example %}\n\n```\n{% partial file=\"header.md\" /%}\n```\n\n{% /example %}\n\nwould load and render the contents of `markdoc/partials/header.md`\n\n## Layouts\n\nTo create a custom layout for each of your Markdown/Markdoc files, wrap your `Component` within your `_app.js`, for example:\n\n```js\n// pages/_app.js\n\nimport Layout from '../components/Layout';\n\nexport default function App({ Component, pageProps }) {\n  return (\n    \u003cLayout frontmatter={pageProps.markdoc.frontmatter}\u003e\n      \u003cComponent {...pageProps} /\u003e\n    \u003c/Layout\u003e\n  );\n}\n```\n\n## Comments\n\nYou can add comments to your Next.js content by passing `allowComments` to the Markdoc tokenizer:\n\n```js\nconst withMarkdoc = require('@markdoc/next.js');\n\nwithMarkdoc({ tokenizerOptions: { allowComments: true } });\n```\n\nand then using comment syntax:\n\n{% example %}\n\n```md\n\u003c!-- Your comment here --\u003e\n```\n\n{% /example %}\n\n## Built-in Next.js tags\n\nNext.js Markdoc provides custom tags out-of-the-box that you can add to your schema. To include them, export them by name in your schema directory (for example, `/markdoc/`). For example:\n\n```js\n// markdoc/tags/Next.markdoc.js\n\nexport { comment, head, link, script } from '@markdoc/next.js/tags';\n\n// or\n\nexport * from '@markdoc/next.js/tags';\n```\n\n### Head\n\nRenders a [Next.js `Head` component](https://nextjs.org/docs/api-reference/next/head). You can use this to add stuff to the `\u003chead\u003e` of your page.\n\n{% callout type=\"warning\" %}\nYou need to create and register your own tags for `meta`, `title`, and so on.\n{% /callout %}\n\n{% example %}\n\n```md\n{% head %}\n\nAdd custom `title` and `meta` tags here…\n\n{% /head %}\n```\n\n{% /example %}\n\n### Link\n\nRenders a [Next.js `Link` component](https://nextjs.org/docs/api-reference/next/link). Requires passing an `href` attribute.\n\n{% example %}\n\n```md\n{% link href=\"/docs/getting-started\" %}\nGetting started\n{% /link %}\n```\n\n{% /example %}\n\n### Script\n\nRenders a [Next.js `Script` component](https://nextjs.org/docs/api-reference/next/script). Requires passing a `src` attribute.\n\n{% example %}\n\n```md\n{% script src=\"https://js.stripe.com/v3\" /%}\n```\n\n{% /example %}\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"using-markdoc-with-next.js"},"children":["Using Markdoc with Next.js"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Using the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["@markdoc/next.js"]}," package/plugin allows you to create custom ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":[".md"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":[".mdoc"]}," pages in your Next.js apps, and automatically render them with Markdoc."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To get started right away, check out ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/markdoc-starter","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["this starter repo"]},". The quickest way to deploy your own version of the starter is by deploying it with ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://vercel.com/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Vercel"]}," or ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://www.netlify.com/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Netlify"]}," by clicking one of the buttons below."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://vercel.com/new/clone?repository-url=https://github.com/markdoc/markdoc-starter","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"img","attributes":{"src":"https://vercel.com/button","alt":"Deploy with Vercel"},"children":[]}]}," ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://app.netlify.com/start/deploy?repository=https://github.com/markdoc/markdoc-starter","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"img","attributes":{"src":"https://www.netlify.com/img/deploy/button.svg","alt":"Deploy to Netlify"},"children":[]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"setup"},"children":["Setup"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This guide assumes that you already have Next.js installed. If you're starting from scratch, follow these steps for ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://nextjs.org/docs","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["getting started with Next.js"]},"."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"Follow these steps to get started with ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["@markdoc/next.js"]},"."]},{"$$mdtype":"Tag","name":"ol","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Install ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["@markdoc/next.js"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["@markdoc/markdoc"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"shell"},"children":["npm install @markdoc/next.js @markdoc/markdoc\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Update your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["next.config.js"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["const withMarkdoc = require('@markdoc/next.js');\n\nmodule.exports = withMarkdoc(/* [options](#options) */)({\n  pageExtensions: ['md', 'mdoc', 'js', 'jsx', 'ts', 'tsx']\n});\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Create a new ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":[".md"]}," file in within ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["/pages/"]},", such as ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["getting-started.md"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["pages\n├── _app.js\n├── docs\n│   └── getting-started.md\n└── index.md\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Add some Markdoc to your file:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["---\ntitle: Get started with Markdoc\ndescription: How to get started with Markdoc\n---\n\n# Get started with Markdoc\n"]}]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"Or, clone ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/markdoc-starter","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["this starter repo"]}," and follow the directions in the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/markdoc-starter/blob/main/README.md","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["README"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"options"},"children":["Options"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can pass options to ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["withMarkdoc"]}," to adjust how the plugin behaves."]},{"$$mdtype":"Tag","name":"table","attributes":{},"children":[{"$$mdtype":"Tag","name":"thead","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Option"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Type"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Description"]}]}]},{"$$mdtype":"Tag","name":"tbody","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["schemaPath"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["string"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Path to your Markdoc schema folder. See ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#schema-customization","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["schema customization"]},"."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["mode"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["'static' | 'server'"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Determines whether the generated Markdoc pages use ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://nextjs.org/docs/basic-features/data-fetching/get-static-props","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["getStaticProps"]}]}," or ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://nextjs.org/docs/basic-features/data-fetching/get-server-side-props","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["getServerSideProps"]}]},"."]}]}]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["For example, this is how you set the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["mode"]}," to ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["static"]}," to pre-render the page at build time using the props returned by ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["getStaticProps"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["module.exports = withMarkdoc({ mode: 'static' })({\n  pageExtensions: // [...](https://nextjs.org/docs/api-reference/next.config.js/custom-page-extensions)\n});\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"schema-customization"},"children":["Schema customization"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can define your Markdoc schema by creating a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["/markdoc/"]}," directory at the root of your project. This is where custom ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["nodes"]},", ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["tags"]},", and ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/functions","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["functions"]}," are defined."]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":[".\n├── components\n│   ├── ...\n│   └── Link.js\n├── markdoc\n│   ├── functions.js\n│   ├── nodes\n│   │   ├── ...\n│   │   ├── link.markdoc.js\n│   │   └── index.js\n│   └── tags\n│       ├── ...\n│       └── index.js\n├── pages\n│   ├── _app.js\n│   └── index.md\n└── next.config.js\n\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can choose the import location for your schema by passing the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["schemaPath"]}," option to ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["withMarkdoc"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["module.exports = withMarkdoc({ schemaPath: './path/to/your/markdoc/schema' })({\n  pageExtensions: // [...](https://nextjs.org/docs/api-reference/next.config.js/custom-page-extensions)\n});\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"tags"},"children":["Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You register custom tags by exporting an object from ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["/markdoc/tags.js"]}," (or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["/markdoc/tags/index.js"]},"). In this example, the tag name is ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["button"]},". The ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["render"]}," field tells Markdoc to render a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Button"]}," React component whenever the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{% button %}"]}," tag is used."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// markdoc/tags.js\n\nimport { Button } from '../components/Button';\n\nexport const button = {\n  render: Button,\n  attributes: {\n    href: {\n      type: String\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you want to use kebab case for your tag names, you can export an object like:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// markdoc/tags.js\n\nexport default {\n  'special-button': {\n    render: SpecialButton,\n    attributes: {\n      href: {\n        type: String\n      }\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"nodes"},"children":["Nodes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Custom node registrations are almost identical to ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["tags"]},", except you create a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["/markdoc/nodes.js"]}," file instead, for example:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// markdoc/nodes.js\n\nimport { Link } from 'next/link';\n\nexport const link = {\n  render: Link,\n  attributes: {\n    href: {\n      type: String\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This example overrides the default ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["link"]}," ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["node"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"functions"},"children":["Functions"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Custom functions registrations are almost identical to tags and nodes, except you create a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["/markdoc/functions.js"]}," file instead, for example:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// markdoc/functions.js\n\nexport const upper = {\n  transform(parameters) {\n    const string = parameters[0];\n\n    return typeof string === 'string' ? string.toUpperCase() : string;\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"advanced"},"children":["Advanced"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you want more control over your config object, or you are using the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/language-server","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Markdoc language server for Visual Studio Code"]},", you can create a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["/markdoc/config.js"]}," file and export the full config object. This allows you to extend your config with more data, like records or utility functions."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// markdoc/config.js\n\nimport tags from './tags';\nimport nodes from './nodes';\nimport functions from './functions';\n\nexport default {\n  tags,\n  nodes,\n  functions\n  // add other stuff here\n};\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"frontmatter"},"children":["Frontmatter"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc is frontmatter agnostic, however, ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["@markdoc/next.js"]}," uses YAML as its frontmatter language. You can access the frontmatter object within your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["_app.js"]}," under ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["pageProps.markdoc.frontmatter"]},", or in your content using the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["$markdoc.frontmatter"]}," variable."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["For example:"]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["---\ntitle: Using the Next.js plugin\ndescription: Integrate Markdoc into your Next.js app\n---\n\n# {% $markdoc.frontmatter.title %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"partials"},"children":["Partials"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Partials automatically load from the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["/markdoc/partials/"]}," directory. For example:"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% partial file=\"header.md\" /%}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["would load and render the contents of ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["markdoc/partials/header.md"]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"layouts"},"children":["Layouts"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To create a custom layout for each of your Markdown/Markdoc files, wrap your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Component"]}," within your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["_app.js"]},", for example:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// pages/_app.js\n\nimport Layout from '../components/Layout';\n\nexport default function App({ Component, pageProps }) {\n  return (\n    \u003cLayout frontmatter={pageProps.markdoc.frontmatter}\u003e\n      \u003cComponent {...pageProps} /\u003e\n    \u003c/Layout\u003e\n  );\n}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"comments"},"children":["Comments"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can add comments to your Next.js content by passing ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["allowComments"]}," to the Markdoc tokenizer:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["const withMarkdoc = require('@markdoc/next.js');\n\nwithMarkdoc({ tokenizerOptions: { allowComments: true } });\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["and then using comment syntax:"]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["\u003c!-- Your comment here --\u003e\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"built-in-next.js-tags"},"children":["Built-in Next.js tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Next.js Markdoc provides custom tags out-of-the-box that you can add to your schema. To include them, export them by name in your schema directory (for example, ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["/markdoc/"]},"). For example:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// markdoc/tags/Next.markdoc.js\n\nexport { comment, head, link, script } from '@markdoc/next.js/tags';\n\n// or\n\nexport * from '@markdoc/next.js/tags';\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"head"},"children":["Head"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Renders a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://nextjs.org/docs/api-reference/next/head","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Next.js ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Head"]}," component"]},". You can use this to add stuff to the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["\u003chead\u003e"]}," of your page."]},{"$$mdtype":"Tag","name":"Callout","attributes":{"type":"warning"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You need to create and register your own tags for ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["meta"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["title"]},", and so on."]}]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["{% head %}\n\nAdd custom `title` and `meta` tags here…\n\n{% /head %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"link"},"children":["Link"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Renders a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://nextjs.org/docs/api-reference/next/link","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Next.js ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Link"]}," component"]},". Requires passing an ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["href"]}," attribute."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["{% link href=\"/docs/getting-started\" %}\nGetting started\n{% /link %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"script"},"children":["Script"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Renders a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://nextjs.org/docs/api-reference/next/script","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Next.js ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Script"]}," component"]},". Requires passing a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["src"]}," attribute."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["{% script src=\"https://js.stripe.com/v3\" /%}\n"]}]},"frontmatter":{"title":"Using Markdoc with Next.js","description":"Learn how to integrate Markdoc into a Next.js project."},"file":{"path":"/docs/nextjs.md"}}},"__N_SSG":true},"page":"/docs/nextjs","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/nodes.html ---

Markdoc | Nodes.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.side-by-side.jsx-21d039f5c746a0fb{width:100%;padding:0;margin-top:1rem;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.column.jsx-21d039f5c746a0fb{overflow:auto;padding-top:var(--default-vertical-spacing)}.left.jsx-21d039f5c746a0fb{padding-right:3rem;border-right:1px solid var(--toc-border)}.right.jsx-21d039f5c746a0fb{padding-left:3rem}.side-by-side.jsx-21d039f5c746a0fb .heading{margin:0}@media screen and (max-width:1e3px){.side-by-side.jsx-21d039f5c746a0fb{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.column.jsx-21d039f5c746a0fb{overflow:initial}.left.jsx-21d039f5c746a0fb{padding:0;border:none}.right.jsx-21d039f5c746a0fb{padding-top:1rem;padding-left:0rem}}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsNodesNodes are elements that Markdoc inherits from Markdown, specifically the CommonMark specification. Markdoc nodes enable you to customize how your document renders without using any custom syntax—it consists entirely of Markdown. Customizing nodes lets you extend your implementation incrementally.Built-in nodesMarkdoc comes out of the box with built-in nodes for each of the CommonMark types:Node typeAttributesdocumentfrontmatterheadinglevelparagraph—hr—imagesrcalttitlefencecontentA string containing the plain text inside the fence.languageThe programming language used for syntax highlighting the fence contents.processDetermine whether to parse Markdoc tags within a fence. Set process=false to treat the content within a fence as plain text.blockquote—listordereditem—table—thead—tbody—tr—tdaligncolspanrowspanthalignwidthinline—strong—em—s—linkhreftitlecodecontenttextcontenthardbreak—softbreak—error—Customizing Markdoc nodesYou define custom nodes by passing a custom Node to your config object, like:import { heading } from './schema/Heading.markdoc';
import * as components from './components';

/** @type {import('@markdoc/markdoc').Config} */
const config = {
  nodes: {
    heading
  }
};

const ast = Markdoc.parse(doc);
const content = Markdoc.transform(ast, config);

const children = Markdoc.renderers.react(content, React, { components });
Copywhere heading looks something like:// ./schema/Heading.markdoc.js

import { Tag } from '@markdoc/markdoc';

// Or replace this with your own function
function generateID(children, attributes) {
  if (attributes.id && typeof attributes.id === 'string') {
    return attributes.id;
  }
  return children
    .filter((child) => typeof child === 'string')
    .join(' ')
    .replace(/[?]/g, '')
    .replace(/\s+/g, '-')
    .toLowerCase();
}

export const heading = {
  children: ['inline'],
  attributes: {
    id: { type: String },
    level: { type: Number, required: true, default: 1 }
  },
  transform(node, config) {
    const attributes = node.transformAttributes(config);
    const children = node.transformChildren(config);

    const id = generateID(children, attributes);

    return new Tag(
      `h${node.attributes['level']}`,
      { ...attributes, id },
      children
    );
  }
};
CopyAfter registering this custom node, you can then use it in your Markdoc, like:#### My header
CopyMy headerOptionsThese are the optional fields you can use to customize your Node:OptionTypeDescription renderstringName of the output (for example, HTML tag, React component name) to renderchildrenstring[]Determines which tag or node types can be rendered as children of this node. Used in schema validation.attributes{ [string]: SchemaAttribute }Determines which values (and their types) can be passed to this node.transform(Ast.Node, ?Options) =>
  | RenderableTreeNode
  | RenderableTreeNode[]
  | null
CopyCustomize the Markdoc transform function for this node, returning the custom output you want to eventually render. This is called during the transform step.validate(Node, ?Options) => ValidationError[];
CopyExtend Markdoc validation. This validates that the content meets validation requirements, and is called during the validate stepNext stepsCreate custom tagsCustomize nodes with annotationsCMD + J / EscBuilt-in nodesCustomizing Markdoc nodesOptionsThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Nodes\ndescription:\n---\n\n# {% $markdoc.frontmatter.title %}\n\n\nNodes are elements that Markdoc inherits from Markdown, specifically the [CommonMark specification](https://commonmark.org/). Markdoc nodes enable you to customize how your document renders without using any custom syntax—it consists entirely of Markdown. Customizing nodes lets you extend your implementation incrementally.\n\n\n## Built-in nodes\n\nMarkdoc comes out of the box with built-in nodes for each of the [CommonMark](https://commonmark.org/) types:\n\n{% table %}\n\n- Node type\n- Attributes\n\n---\n\n- `document`\n- [`frontmatter`](/docs/frontmatter)\n\n---\n\n- `heading`\n- `level`\n\n---\n\n- `paragraph`\n- —\n\n---\n\n- `hr`\n- —\n\n---\n\n- `image`\n- `src`\n\n  `alt`\n\n  `title`\n\n---\n\n- `fence`\n- \n  {% table %}\n  ---\n  - `content`\n  - A string containing the plain text inside the fence.\n  ---\n  - `language`\n  - The programming language used for syntax highlighting the fence contents.\n  ---\n  - `process`\n  - Determine whether to parse Markdoc tags within a fence. Set `process=false` to treat the content within a fence as plain text. \n  {% /table %}\n\n---\n\n- `blockquote`\n- —\n\n---\n\n- `list`\n- `ordered`\n\n---\n\n- `item`\n- —\n\n---\n\n- `table`\n- —\n\n---\n\n- `thead`\n- —\n\n---\n\n- `tbody`\n- —\n\n---\n\n- `tr`\n- —\n\n---\n\n- `td`\n- `align`\n\n  `colspan`\n  \n  `rowspan`\n\n---\n\n- `th`\n- `align`\n\n  `width`\n\n---\n\n- `inline`\n- —\n\n---\n\n- `strong`\n- —\n\n---\n\n- `em`\n- —\n\n---\n\n- `s`\n- —\n\n---\n\n- `link`\n- `href`\n\n  `title`\n\n---\n\n- `code`\n- `content`\n\n---\n\n- `text`\n- `content`\n\n---\n\n- `hardbreak`\n- —\n\n---\n\n- `softbreak`\n- —\n\n---\n\n- `error`\n- —\n\n{% /table %}\n\n\n## Customizing Markdoc nodes\n\nYou define custom nodes by passing a custom Node to your [`config` object](/docs/config), like:\n\n```js\nimport { heading } from './schema/Heading.markdoc';\nimport * as components from './components';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  nodes: {\n    heading\n  }\n};\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast, config);\n\nconst children = Markdoc.renderers.react(content, React, { components });\n```\n\nwhere `heading` looks something like:\n\n```js\n// ./schema/Heading.markdoc.js\n\nimport { Tag } from '@markdoc/markdoc';\n\n// Or replace this with your own function\nfunction generateID(children, attributes) {\n  if (attributes.id \u0026\u0026 typeof attributes.id === 'string') {\n    return attributes.id;\n  }\n  return children\n    .filter((child) =\u003e typeof child === 'string')\n    .join(' ')\n    .replace(/[?]/g, '')\n    .replace(/\\s+/g, '-')\n    .toLowerCase();\n}\n\nexport const heading = {\n  children: ['inline'],\n  attributes: {\n    id: { type: String },\n    level: { type: Number, required: true, default: 1 }\n  },\n  transform(node, config) {\n    const attributes = node.transformAttributes(config);\n    const children = node.transformChildren(config);\n\n    const id = generateID(children, attributes);\n\n    return new Tag(\n      `h${node.attributes['level']}`,\n      { ...attributes, id },\n      children\n    );\n  }\n};\n```\n\nAfter registering this custom node, you can then use it in your Markdoc, like:\n\n{% sideBySide %}\n\n{% example %}\n\n```md\n#### My header\n```\n\n{% /example %}\n\n#### My header\n\n{% /sideBySide %}\n\n## Options\n\nThese are the optional fields you can use to customize your `Node`:\n\n{% table %}\n\n- Option\n- Type\n- Description {% width=\"40%\" %}\n\n---\n\n- `render`\n- `string`\n- Name of the output (for example, HTML tag, React component name) to render\n\n---\n\n- `children`\n- `string[]`\n- Determines which tag or node types can be rendered as children of this node. Used in schema validation.\n\n---\n\n- `attributes`\n- `{ [string]: SchemaAttribute }`\n- Determines which [values (and their types)](/docs/attributes) can be passed to this node.\n\n---\n\n- `transform`\n- ```js\n  (Ast.Node, ?Options) =\u003e\n    | RenderableTreeNode\n    | RenderableTreeNode[]\n    | null\n  ```\n- Customize the Markdoc transform function for this node, returning the custom output you want to eventually render. This is called during the [`transform` step](/docs/render#transform).\n\n---\n\n- `validate`\n- ```js\n  (Node, ?Options) =\u003e ValidationError[];\n  ```\n- Extend Markdoc validation. This validates that the content meets validation requirements, and is called during the [`validate` step](/docs/render#validate)\n\n{% /table %}\n\n## Next steps\n\n- [Create custom tags](/docs/tags)\n- [Customize nodes with annotations](/docs/syntax#annotations)\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"nodes"},"children":["Nodes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Nodes are elements that Markdoc inherits from Markdown, specifically the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://commonmark.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["CommonMark specification"]},". Markdoc nodes enable you to customize how your document renders without using any custom syntax—it consists entirely of Markdown. Customizing nodes lets you extend your implementation incrementally."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"built-in-nodes"},"children":["Built-in nodes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc comes out of the box with built-in nodes for each of the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://commonmark.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["CommonMark"]}," types:"]},{"$$mdtype":"Tag","name":"table","attributes":{},"children":[{"$$mdtype":"Tag","name":"thead","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Node type"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Attributes"]}]}]},{"$$mdtype":"Tag","name":"tbody","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["document"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/frontmatter","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["frontmatter"]}]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["heading"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["level"]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["paragraph"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["hr"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["image"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["src"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["alt"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["title"]}]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["fence"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"table","attributes":{},"children":[{"$$mdtype":"Tag","name":"thead","attributes":{},"children":[]},{"$$mdtype":"Tag","name":"tbody","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["content"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["A string containing the plain text inside the fence."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["language"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["The programming language used for syntax highlighting the fence contents."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["process"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Determine whether to parse Markdoc tags within a fence. Set ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["process=false"]}," to treat the content within a fence as plain text."]}]}]}]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["blockquote"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["list"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["ordered"]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["item"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["table"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["thead"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["tbody"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["tr"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["td"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["align"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["colspan"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["rowspan"]}]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["th"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["align"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["width"]}]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["inline"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["strong"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["em"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["s"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["link"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["href"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["title"]}]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["code"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["content"]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["text"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["content"]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["hardbreak"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["softbreak"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["error"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["—"]}]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"customizing-markdoc-nodes"},"children":["Customizing Markdoc nodes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You define custom nodes by passing a custom Node to your ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/config","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["config"]}," object"]},", like:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["import { heading } from './schema/Heading.markdoc';\nimport * as components from './components';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  nodes: {\n    heading\n  }\n};\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast, config);\n\nconst children = Markdoc.renderers.react(content, React, { components });\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["where ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["heading"]}," looks something like:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// ./schema/Heading.markdoc.js\n\nimport { Tag } from '@markdoc/markdoc';\n\n// Or replace this with your own function\nfunction generateID(children, attributes) {\n  if (attributes.id \u0026\u0026 typeof attributes.id === 'string') {\n    return attributes.id;\n  }\n  return children\n    .filter((child) =\u003e typeof child === 'string')\n    .join(' ')\n    .replace(/[?]/g, '')\n    .replace(/\\s+/g, '-')\n    .toLowerCase();\n}\n\nexport const heading = {\n  children: ['inline'],\n  attributes: {\n    id: { type: String },\n    level: { type: Number, required: true, default: 1 }\n  },\n  transform(node, config) {\n    const attributes = node.transformAttributes(config);\n    const children = node.transformChildren(config);\n\n    const id = generateID(children, attributes);\n\n    return new Tag(\n      `h${node.attributes['level']}`,\n      { ...attributes, id },\n      children\n    );\n  }\n};\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["After registering this custom node, you can then use it in your Markdoc, like:"]},{"$$mdtype":"Tag","name":"Sidebyside","attributes":{},"children":[{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["#### My header\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"my-header"},"children":["My header"]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"options"},"children":["Options"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["These are the optional fields you can use to customize your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Node"]},":"]},{"$$mdtype":"Tag","name":"table","attributes":{},"children":[{"$$mdtype":"Tag","name":"thead","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Option"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Type"]},{"$$mdtype":"Tag","name":"th","attributes":{"width":"40%"},"children":["Description "]}]}]},{"$$mdtype":"Tag","name":"tbody","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["render"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["string"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Name of the output (for example, HTML tag, React component name) to render"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["children"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["string[]"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Determines which tag or node types can be rendered as children of this node. Used in schema validation."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["attributes"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{ [string]: SchemaAttribute }"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Determines which ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["values (and their types)"]}," can be passed to this node."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["(Ast.Node, ?Options) =\u003e\n  | RenderableTreeNode\n  | RenderableTreeNode[]\n  | null\n"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Customize the Markdoc transform function for this node, returning the custom output you want to eventually render. This is called during the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render#transform","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]}," step"]},"."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["(Node, ?Options) =\u003e ValidationError[];\n"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Extend Markdoc validation. This validates that the content meets validation requirements, and is called during the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render#validate","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}," step"]}]}]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Create custom tags"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/syntax#annotations","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Customize nodes with annotations"]}]}]}]},"frontmatter":{"title":"Nodes","description":null},"file":{"path":"/docs/nodes.md"}}},"__N_SSG":true},"page":"/docs/nodes","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/render.html ---

Markdoc | Phases of rendering.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}svg.jsx-c561d3544dfbe310{width:100%;min-width:800px}div.jsx-ed4f6c7f38bdb99c{max-width:100%;overflow:auto}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.icon.jsx-565953664{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:#8792a2}.icon.jsx-565953664 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.callout.jsx-f5942a5fa6301fb4{padding:.5rem 0 2rem}.content.jsx-f5942a5fa6301fb4{color:var(--dark);background:var(--code-background);border:1px solid var(--code-border);line-height:20px;padding:12px 20px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.icon.jsx-f5942a5fa6301fb4{padding-right:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.callout.jsx-f5942a5fa6301fb4 p:first-of-type{padding:0}.side-by-side.jsx-21d039f5c746a0fb{width:100%;padding:0;margin-top:1rem;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.column.jsx-21d039f5c746a0fb{overflow:auto;padding-top:var(--default-vertical-spacing)}.left.jsx-21d039f5c746a0fb{padding-right:3rem;border-right:1px solid var(--toc-border)}.right.jsx-21d039f5c746a0fb{padding-left:3rem}.side-by-side.jsx-21d039f5c746a0fb .heading{margin:0}@media screen and (max-width:1e3px){.side-by-side.jsx-21d039f5c746a0fb{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.column.jsx-21d039f5c746a0fb{overflow:initial}.left.jsx-21d039f5c746a0fb{padding:0;border:none}.right.jsx-21d039f5c746a0fb{padding-top:1rem;padding-left:0rem}}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsPhases of renderingMarkdoc has three phases of rendering: parse, transform, and render. Each phase operates on the output of the previous phases.Markdoc also includes a validate function, that you can run separately from the render phases to confirm the Markdoc document is valid.See the validation docs for more info.Parseparse(string) => AstNode
CopyParse transforms a raw string into an abstract syntax tree (AST) representing your Markdoc document. The AST contains information about your content, including where each piece of content exists within the document.An example AST would look like this:{
  "type": "document",
  "attributes": {},
  "children": [
    {
      "type": "paragraph",
        "attributes": {},
        "children": [...],
        "lines": [0, 2],
        "location": {
          "start": {
            "line": 0
          },
          "end": {
            "line": 2
          }
        },
        "errors": [],
        "inline": false,
    }
  ],
  "lines": [],
  "errors": [],
  "inline": false
}
CopyCheck this out for yourself in the developer playground.AST node instances also include helpful functions, like walk, which can be useful for traversing and mutating your AST.const ast = Markdoc.parse(document);

for (const node of ast.walk()) {
  // do something with each node
}
CopyTransformtransform(AstNode | AstNode[], ?Config) => RenderableTreeNode | RenderableTreeNode[]
CopyTransform takes an abstract syntax tree and transforms it into a renderable tree, a serializable intermediate representation of what will eventually be rendered. This object is useful for computing things like a table of contents, or passing over the wire to your client.The transform step is also responsible for resolving variables into static, scalar values (string, boolean, object, and so on.).An example renderable tree will look like this:{
  "name": "article",
  "attributes": {},
  "children": [
    {
      "name": "h1",
      "attributes": {},
      "children": ["Header"],
      "$$mdtag": true
    }
  ],
  "$$mdtag": true
}
CopyYou can see a more advanced renderable tree in the developer playground.RenderRender takes in a renderable tree and converts it into rendered output. For html, that means creating an HTML document as a string. For react, it means creating a React element.You can create your own renderer by creating a function that takes in a renderable tree as a parameter and returns your desired output.An example html output would look like this:<h1>Getting started</h1>

<p>Run this command to install the Markdoc library:</p>
CopyReactrenderers.react(RenderableTreeNode | RenderableTreeNode[]) => React.Node
CopyMarkdoc supports rendering React out-of-the-box. You can see the React renderer in action in the developer playground.To render React, first create a renderable tree from your document calling transform. You can do this from the server or client.const tags = {
  callout: {
    render: 'Callout',
    attributes: {}
  }
};

const doc = `
{% callout %}
Attention, over here!
{% /callout %}
`;

const ast = Markdoc.parse(doc);
const content = Markdoc.transform(ast, { tags });
CopyThen, call Markdoc.renderers.react with the renderable tree from your client application. Along with content and React, you'll need to provide the components object as an argument. The components object specifies a mapping from your tags and nodes to the corresponding React component.import Markdoc from '@markdoc/markdoc';
import React from 'react'; // or 'preact'

function Callout({ children }) {
  return <div className="callout">{children}</div>;
}

function MyApp() {
  return Markdoc.renderers.react(content, React, {
    components: {
      Callout: Callout
    }
  });
}
CopyRendered outputInformation CircleAttention, over here!HTMLrenderers.html(RenderableTreeNode | RenderableTreeNode[]) => string
CopyMarkdoc supports rendering HTML out-of-the-box. Because the HTML renderer outputs your HTML document as a string, you can use Web Components with no extra configuration.To render HTML, first create a renderable tree from your content by calling transform:const doc = `
# Getting started

Run this command to install the Markdoc library:
`;

const ast = Markdoc.parse(doc);
const content = Markdoc.transform(ast);
CopyThen, call Markdoc.renderers.html with your renderable tree, which will create the corresponding HTML document.const express = require('express');
const Markdoc = require('@markdoc/markdoc');

const app = express();

app.get('/docs/getting-started', (req, res) => {
  res.setHeader('Content-Type', 'text/html');
  res.send(`
    <!DOCTYPE html>
    <html>
      <body>
        ${Markdoc.renderers.html(content)}
      </body>
    </html>
  `);
});
Copy<!DOCTYPE html>
<html>
  <body>
    <h1>Getting started</h1>
    <p>Run this command to install the Markdoc library:</p>
  </body>
</html>
CopyCreate your ownBecause Markdoc renderers are regular functions, you can create a custom one for whatever your use case requires.Try creating your own for Vue, Svelte, Spectacle, or anything else you can think of.Next stepsValidate your contentCheck out common examplesBuild a documentation site quicklyCMD + J / EscParseTransformRenderReactHTMLCreate your ownThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Phases of rendering\ndescription:\n---\n\n# {% $markdoc.frontmatter.title %}\n\nMarkdoc has three phases of rendering: `parse`, `transform`, and `render`. Each phase operates on the output of the previous phases.\n\nMarkdoc also includes a `validate` function, that you can run separately from the render phases to confirm the Markdoc document is valid.  \nSee the [validation docs](/docs/validation) for more info.\n\n{% diagram type=\"flowchart\" /%}\n\n## Parse\n\n```ts\nparse(string) =\u003e AstNode\n```\n\nParse transforms a raw string into an [abstract syntax tree (AST)](https://en.wikipedia.org/wiki/Abstract_syntax_tree) representing your Markdoc document. The AST contains information about your content, including where each piece of content exists within the document.\n\nAn example AST would look like this:\n\n```json\n{\n  \"type\": \"document\",\n  \"attributes\": {},\n  \"children\": [\n    {\n      \"type\": \"paragraph\",\n        \"attributes\": {},\n        \"children\": [...],\n        \"lines\": [0, 2],\n        \"location\": {\n          \"start\": {\n            \"line\": 0\n          },\n          \"end\": {\n            \"line\": 2\n          }\n        },\n        \"errors\": [],\n        \"inline\": false,\n    }\n  ],\n  \"lines\": [],\n  \"errors\": [],\n  \"inline\": false\n}\n```\n\nCheck this out for yourself in the [developer playground](/sandbox?mode=ast).\n\nAST node instances also include helpful functions, like `walk`, which can be useful for traversing and mutating your AST.\n\n```js\nconst ast = Markdoc.parse(document);\n\nfor (const node of ast.walk()) {\n  // do something with each node\n}\n```\n\n## Transform\n\n```ts\ntransform(AstNode | AstNode[], ?Config) =\u003e RenderableTreeNode | RenderableTreeNode[]\n```\n\nTransform takes an abstract syntax tree and transforms it into a renderable tree, a serializable intermediate representation of what will eventually be rendered. This object is useful for computing things like a [table of contents](/docs/examples#table-of-contents), or passing over the wire to your client.\n\nThe transform step is also responsible for resolving variables into static, scalar values (string, boolean, object, and so on.).\n\nAn example renderable tree will look like this:\n\n```json\n{\n  \"name\": \"article\",\n  \"attributes\": {},\n  \"children\": [\n    {\n      \"name\": \"h1\",\n      \"attributes\": {},\n      \"children\": [\"Header\"],\n      \"$$mdtag\": true\n    }\n  ],\n  \"$$mdtag\": true\n}\n```\n\nYou can see a more advanced renderable tree in the [developer playground](/sandbox?mode=transform).\n\n## Render\n\nRender takes in a renderable tree and converts it into rendered output. For `html`, that means creating an HTML document as a string. For `react`, it means creating a [React element](https://reactjs.org/docs/render-elements.html).\n\nYou can create your own renderer by creating a function that takes in a renderable tree as a parameter and returns your desired output.\n\nAn example `html` output would look like this:\n\n```html\n\u003ch1\u003eGetting started\u003c/h1\u003e\n\n\u003cp\u003eRun this command to install the Markdoc library:\u003c/p\u003e\n```\n\n### React\n\n```ts\nrenderers.react(RenderableTreeNode | RenderableTreeNode[]) =\u003e React.Node\n```\n\nMarkdoc supports rendering [React](https://reactjs.org/) out-of-the-box. You can see the React renderer in action in the [developer playground](/sandbox?mode=preview).\n\n\\\nTo render React, first create a renderable tree from your document calling `transform`. You can do this from the server or client.\n\n{% example %}\n\n```js\nconst tags = {\n  callout: {\n    render: 'Callout',\n    attributes: {}\n  }\n};\n\nconst doc = `\n{% callout %}\nAttention, over here!\n{% /callout %}\n`;\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast, { tags });\n```\n\n{% /example %}\n\n\\\nThen, call `Markdoc.renderers.react` with the renderable tree from your client application. Along with `content` and `React`, you'll need to provide the `components` object as an argument. The `components` object specifies a mapping from your tags and nodes to the corresponding React component.\n\n{% sideBySide %}\n\n```jsx\nimport Markdoc from '@markdoc/markdoc';\nimport React from 'react'; // or 'preact'\n\nfunction Callout({ children }) {\n  return \u003cdiv className=\"callout\"\u003e{children}\u003c/div\u003e;\n}\n\nfunction MyApp() {\n  return Markdoc.renderers.react(content, React, {\n    components: {\n      Callout: Callout\n    }\n  });\n}\n```\n\n{% item %}\n\n#### Rendered output\n\n{% callout %}\nAttention, over here!\n{% /callout %}\n{% /item %}\n\n{% /sideBySide %}\n\n### HTML\n\n```ts\nrenderers.html(RenderableTreeNode | RenderableTreeNode[]) =\u003e string\n```\n\nMarkdoc supports rendering HTML out-of-the-box. Because the HTML renderer outputs your HTML document as a string, you can use [Web Components](https://developer.mozilla.org/en-US/docs/Web/Web_Components) with no extra configuration.\n\n\\\nTo render HTML, first create a renderable tree from your content by calling `transform`:\n\n{% example %}\n\n```js\nconst doc = `\n# Getting started\n\nRun this command to install the Markdoc library:\n`;\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast);\n```\n\n{% /example %}\n\n\\\nThen, call `Markdoc.renderers.html` with your renderable tree, which will create the corresponding HTML document.\n\n{% sideBySide %}\n\n```js\nconst express = require('express');\nconst Markdoc = require('@markdoc/markdoc');\n\nconst app = express();\n\napp.get('/docs/getting-started', (req, res) =\u003e {\n  res.setHeader('Content-Type', 'text/html');\n  res.send(`\n    \u003c!DOCTYPE html\u003e\n    \u003chtml\u003e\n      \u003cbody\u003e\n        ${Markdoc.renderers.html(content)}\n      \u003c/body\u003e\n    \u003c/html\u003e\n  `);\n});\n```\n\n{% item %}\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n  \u003cbody\u003e\n    \u003ch1\u003eGetting started\u003c/h1\u003e\n    \u003cp\u003eRun this command to install the Markdoc library:\u003c/p\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n```\n\n{% /item %}\n\n{% /sideBySide %}\n\n### Create your own\n\nBecause Markdoc renderers are regular functions, you can create a custom one for whatever your use case requires.  \nTry creating your own for [Vue](https://vuejs.org/), [Svelte](https://svelte.dev/), [Spectacle](https://formidable.com/open-source/spectacle/), or anything else you can think of.\n\n## Next steps\n\n- [Validate your content](/docs/validation)\n- [Check out common examples](/docs/examples)\n- [Build a documentation site quickly](/docs/nextjs)\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"phases-of-rendering"},"children":["Phases of rendering"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc has three phases of rendering: ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["parse"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]},", and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["render"]},". Each phase operates on the output of the previous phases."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc also includes a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}," function, that you can run separately from the render phases to confirm the Markdoc document is valid.",{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"See the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/validation","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["validation docs"]}," for more info."]},{"$$mdtype":"Tag","name":"Diagram","attributes":{"type":"flowchart"},"children":[]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"parse"},"children":["Parse"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"ts"},"children":["parse(string) =\u003e AstNode\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Parse transforms a raw string into an ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://en.wikipedia.org/wiki/Abstract_syntax_tree","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["abstract syntax tree (AST)"]}," representing your Markdoc document. The AST contains information about your content, including where each piece of content exists within the document."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["An example AST would look like this:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"json"},"children":["{\n  \"type\": \"document\",\n  \"attributes\": {},\n  \"children\": [\n    {\n      \"type\": \"paragraph\",\n        \"attributes\": {},\n        \"children\": [...],\n        \"lines\": [0, 2],\n        \"location\": {\n          \"start\": {\n            \"line\": 0\n          },\n          \"end\": {\n            \"line\": 2\n          }\n        },\n        \"errors\": [],\n        \"inline\": false,\n    }\n  ],\n  \"lines\": [],\n  \"errors\": [],\n  \"inline\": false\n}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Check this out for yourself in the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/sandbox?mode=ast","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["developer playground"]},"."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["AST node instances also include helpful functions, like ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["walk"]},", which can be useful for traversing and mutating your AST."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["const ast = Markdoc.parse(document);\n\nfor (const node of ast.walk()) {\n  // do something with each node\n}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"transform"},"children":["Transform"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"ts"},"children":["transform(AstNode | AstNode[], ?Config) =\u003e RenderableTreeNode | RenderableTreeNode[]\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Transform takes an abstract syntax tree and transforms it into a renderable tree, a serializable intermediate representation of what will eventually be rendered. This object is useful for computing things like a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/examples#table-of-contents","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["table of contents"]},", or passing over the wire to your client."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The transform step is also responsible for resolving variables into static, scalar values (string, boolean, object, and so on.)."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["An example renderable tree will look like this:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"json"},"children":["{\n  \"name\": \"article\",\n  \"attributes\": {},\n  \"children\": [\n    {\n      \"name\": \"h1\",\n      \"attributes\": {},\n      \"children\": [\"Header\"],\n      \"$$mdtag\": true\n    }\n  ],\n  \"$$mdtag\": true\n}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can see a more advanced renderable tree in the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/sandbox?mode=transform","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["developer playground"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"render"},"children":["Render"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Render takes in a renderable tree and converts it into rendered output. For ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["html"]},", that means creating an HTML document as a string. For ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["react"]},", it means creating a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://reactjs.org/docs/render-elements.html","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["React element"]},"."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can create your own renderer by creating a function that takes in a renderable tree as a parameter and returns your desired output."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["An example ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["html"]}," output would look like this:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"html"},"children":["\u003ch1\u003eGetting started\u003c/h1\u003e\n\n\u003cp\u003eRun this command to install the Markdoc library:\u003c/p\u003e\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"react"},"children":["React"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"ts"},"children":["renderers.react(RenderableTreeNode | RenderableTreeNode[]) =\u003e React.Node\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc supports rendering ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://reactjs.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["React"]}," out-of-the-box. You can see the React renderer in action in the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/sandbox?mode=preview","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["developer playground"]},"."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"To render React, first create a renderable tree from your document calling ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]},". You can do this from the server or client."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["const tags = {\n  callout: {\n    render: 'Callout',\n    attributes: {}\n  }\n};\n\nconst doc = `\n{% callout %}\nAttention, over here!\n{% /callout %}\n`;\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast, { tags });\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"Then, call ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Markdoc.renderers.react"]}," with the renderable tree from your client application. Along with ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["content"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["React"]},", you'll need to provide the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["components"]}," object as an argument. The ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["components"]}," object specifies a mapping from your tags and nodes to the corresponding React component."]},{"$$mdtype":"Tag","name":"Sidebyside","attributes":{},"children":[{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"jsx"},"children":["import Markdoc from '@markdoc/markdoc';\nimport React from 'react'; // or 'preact'\n\nfunction Callout({ children }) {\n  return \u003cdiv className=\"callout\"\u003e{children}\u003c/div\u003e;\n}\n\nfunction MyApp() {\n  return Markdoc.renderers.react(content, React, {\n    components: {\n      Callout: Callout\n    }\n  });\n}\n"]},{"$$mdtype":"Tag","name":"Item","attributes":{},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"rendered-output"},"children":["Rendered output"]},{"$$mdtype":"Tag","name":"Callout","attributes":{"type":"note"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Attention, over here!"]}]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"html"},"children":["HTML"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"ts"},"children":["renderers.html(RenderableTreeNode | RenderableTreeNode[]) =\u003e string\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc supports rendering HTML out-of-the-box. Because the HTML renderer outputs your HTML document as a string, you can use ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://developer.mozilla.org/en-US/docs/Web/Web_Components","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Web Components"]}," with no extra configuration."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"To render HTML, first create a renderable tree from your content by calling ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]},":"]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["const doc = `\n# Getting started\n\nRun this command to install the Markdoc library:\n`;\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast);\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"Then, call ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Markdoc.renderers.html"]}," with your renderable tree, which will create the corresponding HTML document."]},{"$$mdtype":"Tag","name":"Sidebyside","attributes":{},"children":[{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["const express = require('express');\nconst Markdoc = require('@markdoc/markdoc');\n\nconst app = express();\n\napp.get('/docs/getting-started', (req, res) =\u003e {\n  res.setHeader('Content-Type', 'text/html');\n  res.send(`\n    \u003c!DOCTYPE html\u003e\n    \u003chtml\u003e\n      \u003cbody\u003e\n        ${Markdoc.renderers.html(content)}\n      \u003c/body\u003e\n    \u003c/html\u003e\n  `);\n});\n"]},{"$$mdtype":"Tag","name":"Item","attributes":{},"children":[{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"html"},"children":["\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n  \u003cbody\u003e\n    \u003ch1\u003eGetting started\u003c/h1\u003e\n    \u003cp\u003eRun this command to install the Markdoc library:\u003c/p\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n"]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"create-your-own"},"children":["Create your own"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Because Markdoc renderers are regular functions, you can create a custom one for whatever your use case requires.",{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"Try creating your own for ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://vuejs.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Vue"]},", ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://svelte.dev/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Svelte"]},", ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://formidable.com/open-source/spectacle/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Spectacle"]},", or anything else you can think of."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/validation","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Validate your content"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/examples","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Check out common examples"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nextjs","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Build a documentation site quickly"]}]}]}]},"frontmatter":{"title":"Phases of rendering","description":null},"file":{"path":"/docs/render.md"}}},"__N_SSG":true},"page":"/docs/render","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/syntax.html ---

Markdoc | The Markdoc syntax.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.side-by-side.jsx-21d039f5c746a0fb{width:100%;padding:0;margin-top:1rem;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.column.jsx-21d039f5c746a0fb{overflow:auto;padding-top:var(--default-vertical-spacing)}.left.jsx-21d039f5c746a0fb{padding-right:3rem;border-right:1px solid var(--toc-border)}.right.jsx-21d039f5c746a0fb{padding-left:3rem}.side-by-side.jsx-21d039f5c746a0fb .heading{margin:0}@media screen and (max-width:1e3px){.side-by-side.jsx-21d039f5c746a0fb{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.column.jsx-21d039f5c746a0fb{overflow:initial}.left.jsx-21d039f5c746a0fb{padding:0;border:none}.right.jsx-21d039f5c746a0fb{padding-top:1rem;padding-left:0rem}}.icon.jsx-905881538{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:#d97917}.icon.jsx-905881538 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.callout.jsx-f5942a5fa6301fb4{padding:.5rem 0 2rem}.content.jsx-f5942a5fa6301fb4{color:var(--dark);background:var(--code-background);border:1px solid var(--code-border);line-height:20px;padding:12px 20px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.icon.jsx-f5942a5fa6301fb4{padding-right:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.callout.jsx-f5942a5fa6301fb4 p:first-of-type{padding:0}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsThe Markdoc syntaxMarkdoc syntax is a superset of Markdown, specifically the CommonMark specification. Markdoc adds a few extensions to the syntax, such as tags and annotations, which we describe below. These extensions enable Markdoc's powerful extensibility model.For a formal grammar of the Markdoc tag syntax, refer to the Markdoc syntax spec.NodesNodes are elements that Markdoc inherits from Markdown, which you can customize with annotations.# Headers

**Bold**

_Italic_

[Links](/docs/nodes)

![Images](/logo.svg)

Lists
- Item 1
- Item 1
- Item 1

> Quotes

`Inline code`

```
Code fences
```
CopyHeadersBoldItalicLinksListsItem 1Item 1Item 1QuotesInline codeCode fences
CopyFor more information, check out the Nodes docs.TagsTags are the main syntactic extension that Markdoc adds on top of Markdown. Each tag is enclosed with {% and %}, and includes the tag name, attributes, and the content body.Similar to HTML, you can nest Markdoc tags, and customize them with attributes.{% tag %}
Content
{% /tag %}
CopyFor more information, check out the Tags docs.AttributesPass attributes to nodes and tags to customize their behavior. You can pass values of type: number, string, boolean, JSON array, or JSON object, either directly or using variables.With tags, you can use an HTML-like syntax:{% city
   index=0
   name="San Francisco"
   deleted=false
   coordinates=[1, 4, 9]
   meta={id: "id_123"} 
   color=$color /%}
CopyAnnotationsBecause the HTML-like syntax doesn't work with nodes, we offer another option, called annotations: write the attributes after the tag or node you're passing them to, in a separate set of {% and %}.{% table %}

- Function {% width="25%" %}
- Returns  {% colspan=2 %}
- Example  {% align="right" %}

{% /table %}
CopyFor more information, check out the Attributes docs.VariablesMarkdoc variables let you customize your Markdoc documents at runtime. Variables all have a $ prefix.Here I am rendering a custom {% $variable %}
CopyVariables must contain JSON-serializable content, such as strings, booleans, numbers, arrays, and JSON objects.You can access nested values using dot-notation, similar to JavaScript:Here's a deeply nested variable {% $markdoc.frontmatter.title %}
CopyYou can use variables throughout your document, as content itself:© {% $currentYear %} Stripe
CopyFor more information, check out the Variables docs.FunctionsFunctions look and feel similar to JavaScript functions. They're callable from the body of the document, inside an annotation, or within tag attributes. Function parameters are comma-separated. Trailing commas aren't supported in function calls.# {% titleCase($markdoc.frontmatter.title) %}

{% if equals(1, 2) %}
Show the password
{% /if %}

{% tag title=uppercase($key) /%}
CopyFor more information, check out the Functions docs.CommentsWarningNote: comment support currently requires passing allowComments: true to Markdoc.Tokenizer.This will be on by default in a future version of Markdoc.Markdoc supports Markdown comment syntax adding comments to your documents without having the content show up in the renderable output.<!-- comment goes here -->
CopyNext stepsRender MarkdocValidate your contentCMD + J / EscNodesTagsAttributesAnnotationsVariablesFunctionsCommentsThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: The Markdoc syntax\n---\n\n# {% $markdoc.frontmatter.title %}\n\nMarkdoc syntax is a superset of Markdown, specifically the [CommonMark specification](https://commonmark.org/). Markdoc adds a few extensions to the syntax, such as tags and annotations, which we describe below. These extensions enable Markdoc's powerful extensibility model.\n\nFor a formal grammar of the Markdoc tag syntax, refer to the [Markdoc syntax spec](/spec).\n\n## Nodes\n\nNodes are elements that Markdoc inherits from Markdown, which you can customize with [annotations](#annotations).\n\n{% sideBySide %}\n\n{% example %}\n\n````\n# Headers\n\n**Bold**\n\n_Italic_\n\n[Links](/docs/nodes)\n\n![Images](/logo.svg)\n\nLists\n- Item 1\n- Item 1\n- Item 1\n\n\u003e Quotes\n\n`Inline code`\n\n```\nCode fences\n```\n````\n\n{% /example %}\n\n#### Headers\n\n**Bold**\n\n_Italic_\n\n[Links](/docs/nodes)\n\nLists\n\n- Item 1\n- Item 1\n- Item 1\n\n\u003e Quotes\n\n`Inline code`\n\n```\nCode fences\n```\n\n{% /sideBySide %}\n\n\\\nFor more information, check out the [Nodes docs](/docs/nodes).\n\n## Tags\n\nTags are the main syntactic extension that Markdoc adds on top of Markdown. Each tag is enclosed with `{%` and `%}`, and includes the tag name, [attributes](#attributes), and the content body.\n\nSimilar to HTML, you can nest Markdoc tags, and customize them with [attributes](#attributes).\n\n{% example %}\n\n```\n{% tag %}\nContent\n{% /tag %}\n```\n\n{% /example %}\n\n\\\nFor more information, check out the [Tags docs](/docs/tags).\n\n## Attributes\n\nPass attributes to nodes and tags to customize their behavior. You can pass values of type: `number`, `string`, `boolean`, JSON `array`, or JSON `object`, either directly or using [variables](#variables). \n\nWith tags, you can use an HTML-like syntax:\n\n{% example %}\n\n```\n{% city\n   index=0\n   name=\"San Francisco\"\n   deleted=false\n   coordinates=[1, 4, 9]\n   meta={id: \"id_123\"} \n   color=$color /%}\n```\n\n{% /example %}\n\n## Annotations\n\nBecause the HTML-like syntax doesn't work with nodes, we offer another option, called _annotations_: write the attributes after the tag or node you're passing them to, in a separate set of `{%` and `%}`.\n\n{% example %}\n\n```\n{% table %}\n\n- Function {% width=\"25%\" %}\n- Returns  {% colspan=2 %}\n- Example  {% align=\"right\" %}\n\n{% /table %}\n```\n\n{% /example %}\n\n\\\nFor more information, check out the [Attributes docs](/docs/attributes).\n## Variables\n\nMarkdoc variables let you customize your Markdoc documents at runtime. Variables all have a `$` prefix.\n\n{% example %}\n\n```\nHere I am rendering a custom {% $variable %}\n```\n\n{% /example %}\n\nVariables must contain JSON-serializable content, such as strings, booleans, numbers, arrays, and JSON objects.\\\nYou can access nested values using dot-notation, similar to JavaScript:\n\n{% example %}\n\n```\nHere's a deeply nested variable {% $markdoc.frontmatter.title %}\n```\n\n{% /example %}\n\nYou can use variables throughout your document, as content itself:\n\n{% example %}\n\n```\n© {% $currentYear %} Stripe\n```\n\n{% /example %}\n\n\\\nFor more information, check out the [Variables docs](/docs/variables).\n\n## Functions\n\nFunctions look and feel similar to JavaScript functions. They're callable from the body of the document, inside an annotation, or within tag attributes.\nFunction parameters are comma-separated. Trailing commas aren't supported in function calls.\n\n{% example %}\n\n```\n# {% titleCase($markdoc.frontmatter.title) %}\n\n{% if equals(1, 2) %}\nShow the password\n{% /if %}\n\n{% tag title=uppercase($key) /%}\n```\n\n{% /example %}\n\n\\\nFor more information, check out the [Functions docs](/docs/functions).\n\n## Comments\n\n{% callout type=\"warning\" %}\nNote: comment support currently requires passing `allowComments: true` to `Markdoc.Tokenizer`.  \nThis will be on by default in a future version of Markdoc.\n{% /callout%}\n\nMarkdoc supports [Markdown comment syntax](https://spec.commonmark.org/0.30/#example-624) adding comments to your documents without having the content show up in the renderable output.\n\n{% example %}\n\n```\n\u003c!-- comment goes here --\u003e\n```\n\n{% /example %}\n\n## Next steps\n\n- [Render Markdoc](/docs/render)\n- [Validate your content](/docs/validation)"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"the-markdoc-syntax"},"children":["The Markdoc syntax"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc syntax is a superset of Markdown, specifically the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://commonmark.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["CommonMark specification"]},". Markdoc adds a few extensions to the syntax, such as tags and annotations, which we describe below. These extensions enable Markdoc's powerful extensibility model."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["For a formal grammar of the Markdoc tag syntax, refer to the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/spec","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Markdoc syntax spec"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"nodes"},"children":["Nodes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Nodes are elements that Markdoc inherits from Markdown, which you can customize with ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#annotations","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["annotations"]},"."]},{"$$mdtype":"Tag","name":"Sidebyside","attributes":{},"children":[{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["# Headers\n\n**Bold**\n\n_Italic_\n\n[Links](/docs/nodes)\n\n![Images](/logo.svg)\n\nLists\n- Item 1\n- Item 1\n- Item 1\n\n\u003e Quotes\n\n`Inline code`\n\n```\nCode fences\n```\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"headers"},"children":["Headers"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"strong","attributes":{},"children":["Bold"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"em","attributes":{},"children":["Italic"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Links"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Lists"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["Item 1"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["Item 1"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["Item 1"]}]},{"$$mdtype":"Tag","name":"blockquote","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Quotes"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Inline code"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["Code fences\n"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"For more information, check out the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Nodes docs"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"tags"},"children":["Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Tags are the main syntactic extension that Markdoc adds on top of Markdown. Each tag is enclosed with ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{%"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["%}"]},", and includes the tag name, ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["attributes"]},", and the content body."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Similar to HTML, you can nest Markdoc tags, and customize them with ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["attributes"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% tag %}\nContent\n{% /tag %}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"For more information, check out the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Tags docs"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"attributes"},"children":["Attributes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Pass attributes to nodes and tags to customize their behavior. You can pass values of type: ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["number"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["string"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["boolean"]},", JSON ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["array"]},", or JSON ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["object"]},", either directly or using ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["variables"]},"."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["With tags, you can use an HTML-like syntax:"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% city\n   index=0\n   name=\"San Francisco\"\n   deleted=false\n   coordinates=[1, 4, 9]\n   meta={id: \"id_123\"} \n   color=$color /%}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"annotations"},"children":["Annotations"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Because the HTML-like syntax doesn't work with nodes, we offer another option, called ",{"$$mdtype":"Tag","name":"em","attributes":{},"children":["annotations"]},": write the attributes after the tag or node you're passing them to, in a separate set of ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{%"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["%}"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% table %}\n\n- Function {% width=\"25%\" %}\n- Returns  {% colspan=2 %}\n- Example  {% align=\"right\" %}\n\n{% /table %}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"For more information, check out the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Attributes docs"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"variables"},"children":["Variables"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc variables let you customize your Markdoc documents at runtime. Variables all have a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["$"]}," prefix."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["Here I am rendering a custom {% $variable %}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Variables must contain JSON-serializable content, such as strings, booleans, numbers, arrays, and JSON objects.",{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"You can access nested values using dot-notation, similar to JavaScript:"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["Here's a deeply nested variable {% $markdoc.frontmatter.title %}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can use variables throughout your document, as content itself:"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["© {% $currentYear %} Stripe\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"For more information, check out the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Variables docs"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"functions"},"children":["Functions"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Functions look and feel similar to JavaScript functions. They're callable from the body of the document, inside an annotation, or within tag attributes."," ","Function parameters are comma-separated. Trailing commas aren't supported in function calls."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["# {% titleCase($markdoc.frontmatter.title) %}\n\n{% if equals(1, 2) %}\nShow the password\n{% /if %}\n\n{% tag title=uppercase($key) /%}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"For more information, check out the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/functions","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Functions docs"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"comments"},"children":["Comments"]},{"$$mdtype":"Tag","name":"Callout","attributes":{"type":"warning"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Note: comment support currently requires passing ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["allowComments: true"]}," to ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Markdoc.Tokenizer"]},".",{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"This will be on by default in a future version of Markdoc."]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc supports ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://spec.commonmark.org/0.30/#example-624","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Markdown comment syntax"]}," adding comments to your documents without having the content show up in the renderable output."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["\u003c!-- comment goes here --\u003e\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Render Markdoc"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/validation","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Validate your content"]}]}]}]},"frontmatter":{"title":"The Markdoc syntax"},"file":{"path":"/docs/syntax.md"}}},"__N_SSG":true},"page":"/docs/syntax","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/validation.html ---

Markdoc | Validation.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.side-by-side.jsx-21d039f5c746a0fb{width:100%;padding:0;margin-top:1rem;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.column.jsx-21d039f5c746a0fb{overflow:auto;padding-top:var(--default-vertical-spacing)}.left.jsx-21d039f5c746a0fb{padding-right:3rem;border-right:1px solid var(--toc-border)}.right.jsx-21d039f5c746a0fb{padding-left:3rem}.side-by-side.jsx-21d039f5c746a0fb .heading{margin:0}@media screen and (max-width:1e3px){.side-by-side.jsx-21d039f5c746a0fb{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.column.jsx-21d039f5c746a0fb{overflow:initial}.left.jsx-21d039f5c746a0fb{padding:0;border:none}.right.jsx-21d039f5c746a0fb{padding-top:1rem;padding-left:0rem}}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsValidationSyntax validationMarkdoc supports syntax validation out of the box using the validate function.validate(AstNode, ?Config) => ValidateError[]
CopyCalling validate is an optional step that you can use to validate your abstract syntax tree (AST) before rendering. This is useful during testing, continuous integration, or in dev-tools like editor extensions.const doc = `# Heading`;

const ast = Markdoc.parse(doc);

const errors = Markdoc.validate(ast, config);

// Do something with the errors
CopyIf your document contains a syntax error, the output of validate looks like this:const doc = `
{% callout %}
Here!
`;

const ast = Markdoc.parse(doc);

const errors = Markdoc.validate(ast, config);
Copy// errors
[
  {
    type: 'tag',
    lines: [1, 2],
    location: {
      start: { line: 1 },
      end: { line: 2 }
    },
    error: {
      id: 'missing-closing',
      level: 'critical',
      message: "Node 'callout' is missing closing"
    }
  }
];
CopySchema validationYou can also extend Markdoc with custom validation rules, by adding a validate function to Node or Tag definitions, or to your custom attribute types.Validating contentUse Node or Tag validate functions to verify the contents are correct, particularly the children./** @type {import('@markdoc/markdoc').Config} */
const config = {
  tags: {
    provider: {
      render: 'Provider',
      // ...
      validate(node) {
        if (node.children.length !== 1) {
          return [
            {
              id: 'provider-children',
              level: 'critical',
              message: 'Providers must only have one child.'
            }
          ];
        }
        return [];
      }
    }
  }
};
CopyValidating attributesUse custom Attribute types to validate that the attributes passed to your tags and nodes are correct.export class ImageSrc {
  validate(value, config) {
    if (!value.startsWith('https://')) {
      return [
        {
          id: 'image-src',
          level: 'error',
          message: 'All image srcs should contain fully qualified URLs.'
        }
      ];
    }
    return [];
  }
}

/** @type {import('@markdoc/markdoc').Config} */
const config = {
  image: {
    render: 'img',
    attributes: {
      src: {
        type: ImageSrc,
        required: true
        // ...
      }
      // ...
    }
  }
};
CopyNext stepsRender content as HTML or ReactCheck out common examplesCMD + J / EscSyntax validationSchema validationValidating contentValidating attributesThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Validation\ndescription: Extend Markdoc to provide custom validation for your documents.\n---\n\n# {% $markdoc.frontmatter.title %}\n\n## Syntax validation\n\nMarkdoc supports syntax validation out of the box using the `validate` function.\n\n```ts\nvalidate(AstNode, ?Config) =\u003e ValidateError[]\n```\n\n\\\nCalling `validate` is an optional step that you can use to validate your abstract syntax tree (AST) before rendering. This is useful during testing, continuous integration, or in dev-tools like editor extensions.\n\n{% example %}\n\n```js\nconst doc = `# Heading`;\n\nconst ast = Markdoc.parse(doc);\n\nconst errors = Markdoc.validate(ast, config);\n\n// Do something with the errors\n```\n\n{% /example %}\n\nIf your document contains a syntax error, the output of `validate` looks like this:\n\n{% sideBySide %}\n\n```js\nconst doc = `{% $invalid_code %}`;\n\nconst ast = Markdoc.parse(doc);\n\nconst errors = Markdoc.validate(ast, config);\n```\n\n```js\n// errors\n[\n  {\n    type: 'tag',\n    lines: [1, 2],\n    location: {\n      start: { line: 1 },\n      end: { line: 2 }\n    },\n    error: {\n      id: 'missing-closing',\n      level: 'critical',\n      message: \"Node 'callout' is missing closing\"\n    }\n  }\n];\n```\n\n{% /sideBySide %}\n\n## Schema validation\n\nYou can also extend Markdoc with custom validation rules, by adding a `validate` function to [Node](/docs/nodes) or [Tag](/docs/tags) definitions, or to your [custom attribute types](/docs/attributes#create-a-custom-attribute).\n\n### Validating content\n\nUse `Node` or `Tag` `validate` functions to verify the contents are correct, particularly the `children`.\n\n{% example %}\n\n```js\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    provider: {\n      render: 'Provider',\n      // ...\n      validate(node) {\n        if (node.children.length !== 1) {\n          return [\n            {\n              id: 'provider-children',\n              level: 'critical',\n              message: 'Providers must only have one child.'\n            }\n          ];\n        }\n        return [];\n      }\n    }\n  }\n};\n```\n\n{% /example %}\n\n### Validating attributes\n\nUse [custom `Attribute` types](/docs/attributes#create-a-custom-attribute) to validate that the attributes passed to your tags and nodes are correct.\n\n{% example %}\n\n```js\nexport class ImageSrc {\n  validate(value, config) {\n    if (!value.startsWith('https://')) {\n      return [\n        {\n          id: 'image-src',\n          level: 'error',\n          message: 'All image srcs should contain fully qualified URLs.'\n        }\n      ];\n    }\n    return [];\n  }\n}\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  image: {\n    render: 'img',\n    attributes: {\n      src: {\n        type: ImageSrc,\n        required: true\n        // ...\n      }\n      // ...\n    }\n  }\n};\n```\n\n{% /example %}\n\n## Next steps\n\n- [Render content as HTML or React](/docs/render)\n- [Check out common examples](/docs/examples)\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"validation"},"children":["Validation"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"syntax-validation"},"children":["Syntax validation"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc supports syntax validation out of the box using the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}," function."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"ts"},"children":["validate(AstNode, ?Config) =\u003e ValidateError[]\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"Calling ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}," is an optional step that you can use to validate your abstract syntax tree (AST) before rendering. This is useful during testing, continuous integration, or in dev-tools like editor extensions."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["const doc = `# Heading`;\n\nconst ast = Markdoc.parse(doc);\n\nconst errors = Markdoc.validate(ast, config);\n\n// Do something with the errors\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If your document contains a syntax error, the output of ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}," looks like this:"]},{"$$mdtype":"Tag","name":"Sidebyside","attributes":{},"children":[{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["const doc = `",null,"`;\n\nconst ast = Markdoc.parse(doc);\n\nconst errors = Markdoc.validate(ast, config);\n"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// errors\n[\n  {\n    type: 'tag',\n    lines: [1, 2],\n    location: {\n      start: { line: 1 },\n      end: { line: 2 }\n    },\n    error: {\n      id: 'missing-closing',\n      level: 'critical',\n      message: \"Node 'callout' is missing closing\"\n    }\n  }\n];\n"]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"schema-validation"},"children":["Schema validation"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can also extend Markdoc with custom validation rules, by adding a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}," function to ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Node"]}," or ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Tag"]}," definitions, or to your ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/attributes#create-a-custom-attribute","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["custom attribute types"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"validating-content"},"children":["Validating content"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Use ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Node"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Tag"]}," ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}," functions to verify the contents are correct, particularly the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["children"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    provider: {\n      render: 'Provider',\n      // ...\n      validate(node) {\n        if (node.children.length !== 1) {\n          return [\n            {\n              id: 'provider-children',\n              level: 'critical',\n              message: 'Providers must only have one child.'\n            }\n          ];\n        }\n        return [];\n      }\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"validating-attributes"},"children":["Validating attributes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Use ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/attributes#create-a-custom-attribute","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["custom ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Attribute"]}," types"]}," to validate that the attributes passed to your tags and nodes are correct."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["export class ImageSrc {\n  validate(value, config) {\n    if (!value.startsWith('https://')) {\n      return [\n        {\n          id: 'image-src',\n          level: 'error',\n          message: 'All image srcs should contain fully qualified URLs.'\n        }\n      ];\n    }\n    return [];\n  }\n}\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  image: {\n    render: 'img',\n    attributes: {\n      src: {\n        type: ImageSrc,\n        required: true\n        // ...\n      }\n      // ...\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Render content as HTML or React"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/examples","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Check out common examples"]}]}]}]},"frontmatter":{"title":"Validation","description":"Extend Markdoc to provide custom validation for your documents."},"file":{"path":"/docs/validation.md"}}},"__N_SSG":true},"page":"/docs/validation","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/tags.html ---

Markdoc | Tags.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-905881538{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:#d97917}.icon.jsx-905881538 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.callout.jsx-f5942a5fa6301fb4{padding:.5rem 0 2rem}.content.jsx-f5942a5fa6301fb4{color:var(--dark);background:var(--code-background);border:1px solid var(--code-border);line-height:20px;padding:12px 20px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.icon.jsx-f5942a5fa6301fb4{padding-right:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.callout.jsx-f5942a5fa6301fb4 p:first-of-type{padding:0}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.icon.jsx-565953664{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:#8792a2}.icon.jsx-565953664 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.side-by-side.jsx-21d039f5c746a0fb{width:100%;padding:0;margin-top:1rem;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.column.jsx-21d039f5c746a0fb{overflow:auto;padding-top:var(--default-vertical-spacing)}.left.jsx-21d039f5c746a0fb{padding-right:3rem;border-right:1px solid var(--toc-border)}.right.jsx-21d039f5c746a0fb{padding-left:3rem}.side-by-side.jsx-21d039f5c746a0fb .heading{margin:0}@media screen and (max-width:1e3px){.side-by-side.jsx-21d039f5c746a0fb{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.column.jsx-21d039f5c746a0fb{overflow:initial}.left.jsx-21d039f5c746a0fb{padding:0;border:none}.right.jsx-21d039f5c746a0fb{padding-top:1rem;padding-left:0rem}}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsTagsTags are a syntactic extension of standard Markdown. You can use native Markdoc tags, like tables, conditionals, and partials, or create custom React components.Similar to React components and HTML elements, tags are composable, and you can customize them with attributes.{% if true %}

{% callout type="note" %}
Tags are composable!
{% /callout %}

{% else /%}

{% callout type="warning" %}
Tags aren't composable!
{% /callout %}

{% /if %}
CopyBuilt-in tagsMarkdoc comes out-of-the-box with four built-in tags: if, else, table, and partial.If/ElseDynamically render content when specific conditions are met using the {% if %} and {% else /%} tags. Markdoc uses conditionals with variables and functions.WarningUnlike JavaScript, Markdoc only considers undefined, null, and false to be falsey.Use the if tag to render content when a condition evaluates to true.This is shown no matter what.

{% if $myFunVar %}
Only appear if $myFunVar!
{% /if %}
CopyUse the else tag to render alternate content when the if condition isn't met. You can use multiple else statements, and the final else tag triggers when none of the other conditions are met.{% if $myFunVar %}
Only appear if $myFunVar!
{% else /%}
This appears if not $myFunVar!
{% /if %}

{% if $myFunVar %}
Only appear if $myFunVar!
{% else $otherFunVar /%}
This appears if not $myFunVar and $otherFunVar!
{% else /%}
This appears if not $myFunVar and not $otherFunVar
{% /if %}
CopyTableWhile Markdoc supports CommonMark tables, it also supports a list based syntax that allows for easy injection of rich content, like bulleted lists and code samples.Basic tableA basic Markdoc table uses list syntax with each row separated by three dashes ---.{% table %}
* Heading 1
* Heading 2
---
* Row 1 Cell 1
* Row 1 Cell 2
---
* Row 2 Cell 1
* Row 2 cell 2
{% /table %}
CopyTable with rich contentMarkdoc tables support rich text, including code samples and lists.{% table %}
* Foo
* Bar
* Baz
---
*
  ```
  puts "Some code here."
  ```
*
  {% list type="checkmark" %}
  * Bulleted list in table
  * Second item in bulleted list
  {% /list %}
* Text in a table
---
*
  A "loose" list with

  multiple line items
* Test 2
* Test 3
---
* Test 1
* A cell that spans two columns {% colspan=2 %}
{% /table %}
CopyTable without headings{% table %}
---
* foo
* bar
---
* foo
* bar
{% /table %}
CopySet column and row spanExplicitly set column and row span.{% table %}
---
* foo
* bar
---
* foo {% colspan=2 %}
{% /table %}
CopyText alignment{% table %}
* Column 1 {% align="center" %}
* Column 2
* Column 3 {% align="right" %}
---
* foo
* bar
* baz
---
* foo
* bar {% align="right" %}
* baz
---
* foo {% align="center" %}
* bar
* baz
{% /table %}
CopyTable caveatsMarkdoc uses the table tag to locate places to parse the Markdown list syntax as a table, but it uses the table node to render the actual table elements. To customize how the default table renders, you need to register a custom a table node.import { nodes } from '@markdoc/markdoc';

/** @type {import('@markdoc/markdoc').Config} */
const config = {
  nodes: {
    table: {
      ...nodes.table,
      render: 'Table' // your custom component goes here
    }
  }
};
CopyPartialMarkdoc uses partials to reuse content across docs. The content is stored in a separate markdown file, and it's referenced from the file attribute in the partial tag, which includes the corresponding piece of content.Here is an example of including the header.md file as a partial.{% partial file="header.md" /%}
CopyFor more information on partials, check out the full partials docs.Create a custom tagTo extend Markdoc with a custom tag, first, create a tag definition. In this example, you're creating a callout tag:// ./schema/Callout.markdoc.js

export const callout = {
  render: 'Callout',
  children: ['paragraph', 'tag', 'list'],
  attributes: {
    type: {
      type: String,
      default: 'note',
      matches: ['caution', 'check', 'note', 'warning'],
      errorLevel: 'critical'
    },
    title: {
      type: String
    }
  }
};
CopyThen, pass the tag definition to your config object:import { callout } from './schema/Callout.markdoc';
import * as components from './components';

/** @type {import('@markdoc/markdoc').Config} */
const config = {
  tags: {
    callout
  }
};

const doc = `
# My first custom tag
`;

const ast = Markdoc.parse(doc);
const content = Markdoc.transform(ast, config);

const children = Markdoc.renderers.react(content, React, { components });
CopyNext, pass your content to the Markdoc renderer. If you want to render a React component, specify which component should render this type of tag in the components mapping.import * as React from 'react';
import { Icon } from './Icon';

function Callout({ title, icon, children }) {
  return (
    <div className="callout">
      <div className="content">
        <Icon icon={icon} />
        <div className="copy">
          <span className="title">{title}</span>
          <span>{children}</span>
        </div>
      </div>
    </div>
  );
}

return Markdoc.renderers.react(content, React, {
  components: {
    // The key here is the same string as `tag` in the previous step
    Callout: Callout
  }
});
CopyNow you can use your custom tag in your Markdoc content.{% callout title="Hey you!" icon="note" %}
I have a message for you
{% /callout %}
CopyInformation CircleHey you!I have a message for youOptionsThese are the optional fields you can use to customize your Tag:OptionTypeDescription renderstringName of the output (for example, HTML tag, React component name) to renderchildrenstring[]Specifies which node types can be rendered as children of this tag. Used in schema validation.attributes{ [string]: SchemaAttribute }Specifies which values (and their types) can be passed to this tag.transform(Ast.Node, ?Options) =>
  | RenderableTreeNode
  | RenderableTreeNode[]
  | null
CopyCustomize the Markdoc transform function for this tag, returning the custom output you want to eventually render. This is called during the transform step.validate(Node, ?Options) => ValidationError[];
CopyExtend Markdoc validation. Used to validate that the content meets validation requirements. This is called during the validate stepselfClosingbooleanSpecifies whether a tag can contain children (false) or not (true). Used in schema validation.Next stepsCustomize tags with attributesCreate custom functionsCMD + J / EscBuilt-in tagsIf/ElseTablePartialCreate a custom tagOptionsThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Tags\ndescription: Use tags to extend Markdown. With tags you can use native Markdoc components or custom-built React components.\n---\n\n# {% $markdoc.frontmatter.title %}\n\nTags are a syntactic extension of standard Markdown. You can use native Markdoc tags, like [tables](#table), [conditionals](#if/else), and [partials](#partial), or create custom React components.\n\nSimilar to React components and HTML elements, tags are composable, and you can customize them with [attributes](/docs/attributes).\n\n{% example %}\n\n```md\n{% if true %}\n\n{% callout type=\"note\" %}\nTags are composable!\n{% /callout %}\n\n{% else /%}\n\n{% callout type=\"warning\" %}\nTags aren't composable!\n{% /callout %}\n\n{% /if %}\n```\n\nTags can be self-closing (similar to HTML). In this example, you'll see that the content body is removed, and that the tag is closed with a `/`.\n\n{% example %}\n\n```\n{% image width=40 /%}\n```\n\n{% /example %}\n\nIf your tag doesn't contain any new lines, then it's treated as an inline tag. Inline tags are automatically wrapped with a single `paragraph` [Node](/docs/nodes) (which renders a `\u003cp\u003e` element by default), to follow the [CommonMark paragraph spec](https://spec.commonmark.org/0.30/#paragraphs).\n\n{% example %}\n\n```\n{% code %}\n\n{% highlight %}Inline tag 1{% /highlight %}\n{% highlight %}Inline tag 2{% /highlight %}\n\n{% /code %}\n```\n\n{% /example %}\n\n\n{% /example %}\n\n\n## Built-in tags\n\nMarkdoc comes out-of-the-box with four built-in tags: `if`, `else`, `table`, and `partial`.\n\n### If/Else\n\nDynamically render content when specific conditions are met using the `{% if %}` and `{% else /%}` tags. Markdoc uses conditionals with [variables](/docs/syntax#variables) and [functions](/docs/functions).\n\n{% callout type=\"warning\" %}\nUnlike JavaScript, Markdoc only considers `undefined`, `null`, and `false` to be falsey.\n{% /callout %}\n\nUse the `if` tag to render content when a condition evaluates to `true`.\n\n{% example %}\n\n```\nThis is shown no matter what.\n\n{% if $myFunVar %}\nOnly appear if $myFunVar!\n{% /if %}\n```\n\n{% /example %}\n\nUse the `else` tag to render alternate content when the `if` condition isn't met. You can use multiple `else` statements, and the final `else` tag triggers when none of the other conditions are met.\n\n{% example %}\n\n```\n{% if $myFunVar %}\nOnly appear if $myFunVar!\n{% else /%}\nThis appears if not $myFunVar!\n{% /if %}\n\n{% if $myFunVar %}\nOnly appear if $myFunVar!\n{% else $otherFunVar /%}\nThis appears if not $myFunVar and $otherFunVar!\n{% else /%}\nThis appears if not $myFunVar and not $otherFunVar\n{% /if %}\n```\n\n{% /example %}\n\n### Table\n\nWhile Markdoc supports [CommonMark](https://commonmark.org/) tables, it also supports a list based syntax that allows for easy injection of rich content, like bulleted lists and code samples.\n\n#### Basic table\n\nA basic Markdoc table uses list syntax with each row separated by three dashes `---`.\n\n{% example %}\n\n```\n{% table %}\n* Heading 1\n* Heading 2\n---\n* Row 1 Cell 1\n* Row 1 Cell 2\n---\n* Row 2 Cell 1\n* Row 2 cell 2\n{% /table %}\n```\n\n{% /example %}\n\n#### Table with rich content\n\nMarkdoc tables support rich text, including code samples and lists.\n\n{% example %}\n\n````\n{% table %}\n* Foo\n* Bar\n* Baz\n---\n*\n  ```\n  puts \"Some code here.\"\n  ```\n*\n  {% list type=\"checkmark\" %}\n  * Bulleted list in table\n  * Second item in bulleted list\n  {% /list %}\n* Text in a table\n---\n*\n  A \"loose\" list with\n\n  multiple line items\n* Test 2\n* Test 3\n---\n* Test 1\n* A cell that spans two columns {% colspan=2 %}\n{% /table %}\n````\n\n{% /example %}\n\n#### Table without headings\n\n{% example %}\n\n```\n{% table %}\n---\n* foo\n* bar\n---\n* foo\n* bar\n{% /table %}\n```\n\n{% /example %}\n\n#### Set column and row span\n\nExplicitly set column and row span.\n\n{% example %}\n\n```\n{% table %}\n---\n* foo\n* bar\n---\n* foo {% colspan=2 %}\n{% /table %}\n```\n\n{% /example %}\n\n#### Text alignment\n\n{% example %}\n\n```\n{% table %}\n* Column 1 {% align=\"center\" %}\n* Column 2\n* Column 3 {% align=\"right\" %}\n---\n* foo\n* bar\n* baz\n---\n* foo\n* bar {% align=\"right\" %}\n* baz\n---\n* foo {% align=\"center\" %}\n* bar\n* baz\n{% /table %}\n```\n\n{% /example %}\n\n#### Table caveats\n\nMarkdoc uses the `table` tag to locate places to parse the Markdown list syntax as a table, but it uses the `table` [node](/docs/nodes) to render the actual table elements. To customize how the default `table` renders, you need to register a custom a table _node_.\n\n{% example %}\n\n```js\nimport { nodes } from '@markdoc/markdoc';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  nodes: {\n    table: {\n      ...nodes.table,\n      render: 'Table' // your custom component goes here\n    }\n  }\n};\n```\n\n{% /example %}\n\n### Partial\n\nMarkdoc uses partials to reuse content across docs. The content is stored in a separate markdown file, and it's referenced from the `file` attribute in the `partial` tag, which includes the corresponding piece of content.\n\nHere is an example of including the `header.md` file as a partial.\n{% example %}\n\n```\n{% partial file=\"header.md\" /%}\n```\n\n{% /example %}\n\nFor more information on partials, check out the full [partials docs](/docs/partials).\n\n\n## Create a custom tag\n\nTo extend Markdoc with a custom tag, first, create a tag definition. In this example, you're creating a `callout` tag:\n\n```js\n// ./schema/Callout.markdoc.js\n\nexport const callout = {\n  render: 'Callout',\n  children: ['paragraph', 'tag', 'list'],\n  attributes: {\n    type: {\n      type: String,\n      default: 'note',\n      matches: ['caution', 'check', 'note', 'warning'],\n      errorLevel: 'critical'\n    },\n    title: {\n      type: String\n    }\n  }\n};\n```\n\nThen, pass the tag definition to your [`config` object](/docs/config):\n\n```js\nimport { callout } from './schema/Callout.markdoc';\nimport * as components from './components';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    callout\n  }\n};\n\nconst doc = `\n# My first custom tag\n`;\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast, config);\n\nconst children = Markdoc.renderers.react(content, React, { components });\n```\n\nNext, pass your content to the Markdoc renderer. If you want to render a React component, specify which component should render this type of tag in the `components` mapping.\n\n```jsx\nimport * as React from 'react';\nimport { Icon } from './Icon';\n\nfunction Callout({ title, icon, children }) {\n  return (\n    \u003cdiv className=\"callout\"\u003e\n      \u003cdiv className=\"content\"\u003e\n        \u003cIcon icon={icon} /\u003e\n        \u003cdiv className=\"copy\"\u003e\n          \u003cspan className=\"title\"\u003e{title}\u003c/span\u003e\n          \u003cspan\u003e{children}\u003c/span\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n}\n\nreturn Markdoc.renderers.react(content, React, {\n  components: {\n    // The key here is the same string as `tag` in the previous step\n    Callout: Callout\n  }\n});\n```\n\nNow you can use your custom tag in your Markdoc content.\n\n{% sideBySide %}\n\n{% example %}\n\n```md\n{% callout title=\"Hey you!\" icon=\"note\" %}\nI have a message for you\n{% /callout %}\n```\n\n{% /example %}\n\n{% callout title=\"Hey you!\" type=\"note\" %}\nI have a message for you\n{% /callout %}\n\n{% /sideBySide %}\n\n## Options\n\nThese are the optional fields you can use to customize your `Tag`:\n\n{% table %}\n\n- Option\n- Type\n- Description {% width=\"40%\" %}\n\n---\n\n- `render`\n- `string`\n- Name of the output (for example, HTML tag, React component name) to render\n\n---\n\n- `children`\n- `string[]`\n- Specifies which node types can be rendered as children of this tag. Used in schema validation.\n\n---\n\n- `attributes`\n- `{ [string]: SchemaAttribute }`\n- Specifies which [values (and their types)](/docs/attributes) can be passed to this tag.\n\n---\n\n- `transform`\n- ```js\n  (Ast.Node, ?Options) =\u003e\n    | RenderableTreeNode\n    | RenderableTreeNode[]\n    | null\n  ```\n- Customize the Markdoc transform function for this tag, returning the custom output you want to eventually render. This is called during the [`transform` step](/docs/render#transform).\n\n---\n\n- `validate`\n- ```js\n  (Node, ?Options) =\u003e ValidationError[];\n  ```\n- Extend Markdoc validation. Used to validate that the content meets validation requirements. This is called during the [`validate` step](/docs/render#validate)\n\n---\n\n- `selfClosing`\n- `boolean`\n- Specifies whether a tag can contain children (`false`) or not (`true`). Used in schema validation.\n\n{% /table %}\n\n## Next steps\n\n- [Customize tags with attributes](/docs/attributes)\n- [Create custom functions](/docs/functions)\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"tags"},"children":["Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Tags are a syntactic extension of standard Markdown. You can use native Markdoc tags, like ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#table","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["tables"]},", ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#if/else","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["conditionals"]},", and ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#partial","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["partials"]},", or create custom React components."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Similar to React components and HTML elements, tags are composable, and you can customize them with ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["attributes"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["{% if true %}\n\n{% callout type=\"note\" %}\nTags are composable!\n{% /callout %}\n\n{% else /%}\n\n{% callout type=\"warning\" %}\nTags aren't composable!\n{% /callout %}\n\n{% /if %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"built-in-tags"},"children":["Built-in tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc comes out-of-the-box with four built-in tags: ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["if"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["else"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["table"]},", and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["partial"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"if/else"},"children":["If/Else"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Dynamically render content when specific conditions are met using the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{% if %}"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{% else /%}"]}," tags. Markdoc uses conditionals with ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/syntax#variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["variables"]}," and ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/functions","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["functions"]},"."]},{"$$mdtype":"Tag","name":"Callout","attributes":{"type":"warning"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Unlike JavaScript, Markdoc only considers ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["undefined"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["null"]},", and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["false"]}," to be falsey."]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Use the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["if"]}," tag to render content when a condition evaluates to ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["true"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["This is shown no matter what.\n\n{% if $myFunVar %}\nOnly appear if $myFunVar!\n{% /if %}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Use the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["else"]}," tag to render alternate content when the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["if"]}," condition isn't met. You can use multiple ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["else"]}," statements, and the final ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["else"]}," tag triggers when none of the other conditions are met."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% if $myFunVar %}\nOnly appear if $myFunVar!\n{% else /%}\nThis appears if not $myFunVar!\n{% /if %}\n\n{% if $myFunVar %}\nOnly appear if $myFunVar!\n{% else $otherFunVar /%}\nThis appears if not $myFunVar and $otherFunVar!\n{% else /%}\nThis appears if not $myFunVar and not $otherFunVar\n{% /if %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"table"},"children":["Table"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["While Markdoc supports ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://commonmark.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["CommonMark"]}," tables, it also supports a list based syntax that allows for easy injection of rich content, like bulleted lists and code samples."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"basic-table"},"children":["Basic table"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["A basic Markdoc table uses list syntax with each row separated by three dashes ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["---"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% table %}\n* Heading 1\n* Heading 2\n---\n* Row 1 Cell 1\n* Row 1 Cell 2\n---\n* Row 2 Cell 1\n* Row 2 cell 2\n{% /table %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"table-with-rich-content"},"children":["Table with rich content"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc tables support rich text, including code samples and lists."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% table %}\n* Foo\n* Bar\n* Baz\n---\n*\n  ```\n  puts \"Some code here.\"\n  ```\n*\n  {% list type=\"checkmark\" %}\n  * Bulleted list in table\n  * Second item in bulleted list\n  {% /list %}\n* Text in a table\n---\n*\n  A \"loose\" list with\n\n  multiple line items\n* Test 2\n* Test 3\n---\n* Test 1\n* A cell that spans two columns {% colspan=2 %}\n{% /table %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"table-without-headings"},"children":["Table without headings"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% table %}\n---\n* foo\n* bar\n---\n* foo\n* bar\n{% /table %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"set-column-and-row-span"},"children":["Set column and row span"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Explicitly set column and row span."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% table %}\n---\n* foo\n* bar\n---\n* foo {% colspan=2 %}\n{% /table %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"text-alignment"},"children":["Text alignment"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% table %}\n* Column 1 {% align=\"center\" %}\n* Column 2\n* Column 3 {% align=\"right\" %}\n---\n* foo\n* bar\n* baz\n---\n* foo\n* bar {% align=\"right\" %}\n* baz\n---\n* foo {% align=\"center\" %}\n* bar\n* baz\n{% /table %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"table-caveats"},"children":["Table caveats"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc uses the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["table"]}," tag to locate places to parse the Markdown list syntax as a table, but it uses the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["table"]}," ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["node"]}," to render the actual table elements. To customize how the default ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["table"]}," renders, you need to register a custom a table ",{"$$mdtype":"Tag","name":"em","attributes":{},"children":["node"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["import { nodes } from '@markdoc/markdoc';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  nodes: {\n    table: {\n      ...nodes.table,\n      render: 'Table' // your custom component goes here\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"partial"},"children":["Partial"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc uses partials to reuse content across docs. The content is stored in a separate markdown file, and it's referenced from the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["file"]}," attribute in the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["partial"]}," tag, which includes the corresponding piece of content."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Here is an example of including the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["header.md"]}," file as a partial."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% partial file=\"header.md\" /%}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["For more information on partials, check out the full ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/partials","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["partials docs"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"create-a-custom-tag"},"children":["Create a custom tag"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To extend Markdoc with a custom tag, first, create a tag definition. In this example, you're creating a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["callout"]}," tag:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// ./schema/Callout.markdoc.js\n\nexport const callout = {\n  render: 'Callout',\n  children: ['paragraph', 'tag', 'list'],\n  attributes: {\n    type: {\n      type: String,\n      default: 'note',\n      matches: ['caution', 'check', 'note', 'warning'],\n      errorLevel: 'critical'\n    },\n    title: {\n      type: String\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Then, pass the tag definition to your ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/config","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["config"]}," object"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["import { callout } from './schema/Callout.markdoc';\nimport * as components from './components';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    callout\n  }\n};\n\nconst doc = `\n# My first custom tag\n`;\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast, config);\n\nconst children = Markdoc.renderers.react(content, React, { components });\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Next, pass your content to the Markdoc renderer. If you want to render a React component, specify which component should render this type of tag in the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["components"]}," mapping."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"jsx"},"children":["import * as React from 'react';\nimport { Icon } from './Icon';\n\nfunction Callout({ title, icon, children }) {\n  return (\n    \u003cdiv className=\"callout\"\u003e\n      \u003cdiv className=\"content\"\u003e\n        \u003cIcon icon={icon} /\u003e\n        \u003cdiv className=\"copy\"\u003e\n          \u003cspan className=\"title\"\u003e{title}\u003c/span\u003e\n          \u003cspan\u003e{children}\u003c/span\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n}\n\nreturn Markdoc.renderers.react(content, React, {\n  components: {\n    // The key here is the same string as `tag` in the previous step\n    Callout: Callout\n  }\n});\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Now you can use your custom tag in your Markdoc content."]},{"$$mdtype":"Tag","name":"Sidebyside","attributes":{},"children":[{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["{% callout title=\"Hey you!\" icon=\"note\" %}\nI have a message for you\n{% /callout %}\n"]},{"$$mdtype":"Tag","name":"Callout","attributes":{"type":"note","title":"Hey you!"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["I have a message for you"]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"options"},"children":["Options"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["These are the optional fields you can use to customize your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Tag"]},":"]},{"$$mdtype":"Tag","name":"table","attributes":{},"children":[{"$$mdtype":"Tag","name":"thead","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Option"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Type"]},{"$$mdtype":"Tag","name":"th","attributes":{"width":"40%"},"children":["Description "]}]}]},{"$$mdtype":"Tag","name":"tbody","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["render"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["string"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Name of the output (for example, HTML tag, React component name) to render"]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["children"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["string[]"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Specifies which node types can be rendered as children of this tag. Used in schema validation."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["attributes"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{ [string]: SchemaAttribute }"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Specifies which ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["values (and their types)"]}," can be passed to this tag."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["(Ast.Node, ?Options) =\u003e\n  | RenderableTreeNode\n  | RenderableTreeNode[]\n  | null\n"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Customize the Markdoc transform function for this tag, returning the custom output you want to eventually render. This is called during the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render#transform","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]}," step"]},"."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["(Node, ?Options) =\u003e ValidationError[];\n"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Extend Markdoc validation. Used to validate that the content meets validation requirements. This is called during the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render#validate","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["validate"]}," step"]}]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["selfClosing"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["boolean"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Specifies whether a tag can contain children (",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["false"]},") or not (",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["true"]},"). Used in schema validation."]}]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Customize tags with attributes"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/functions","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Create custom functions"]}]}]}]},"frontmatter":{"title":"Tags","description":"Use tags to extend Markdown. With tags you can use native Markdoc components or custom-built React components."},"file":{"path":"/docs/tags.md"}}},"__N_SSG":true},"page":"/docs/tags","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/examples.html ---

Markdoc | Common examples.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.side-by-side.jsx-21d039f5c746a0fb{width:100%;padding:0;margin-top:1rem;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.column.jsx-21d039f5c746a0fb{overflow:auto;padding-top:var(--default-vertical-spacing)}.left.jsx-21d039f5c746a0fb{padding-right:3rem;border-right:1px solid var(--toc-border)}.right.jsx-21d039f5c746a0fb{padding-left:3rem}.side-by-side.jsx-21d039f5c746a0fb .heading{margin:0}@media screen and (max-width:1e3px){.side-by-side.jsx-21d039f5c746a0fb{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.column.jsx-21d039f5c746a0fb{overflow:initial}.left.jsx-21d039f5c746a0fb{padding:0;border:none}.right.jsx-21d039f5c746a0fb{padding-top:1rem;padding-left:0rem}}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsCommon examplesWith Markdoc, it's easy to add functionality you'd commonly associate with documentation sites. The examples below cover loops, syntax highlighting, tabs, and more.If you're looking for other sample code, check out our collection of example repos, or view the source code for this site.LoopsMarkdoc does not support writing loops directly in documents. If you need to loop through content, do so in a custom Node or Tag transform function or in a custom React component.import { Tag } from '@markdoc/markdoc';

export const group = {
  render: 'Group',
  attributes: {
    items: { type: Array }
  },
  transform(node, config) {
    const attributes = node.transformAttributes(config);
    const children = node.transformChildren(config);

    for (const item of attributes.items) {
      /* Do something with each item */
    }

    return new Tag('Group', attributes, children);
  }
};
Copy{% group items=[1, 2, 3] /%}
CopySyntax highlightingYou can hook up syntax highlighting for code blocks by creating a custom fence node. This example shows how to do so with Prism.// [Source example](https://github.com/markdoc/docs/blob/main/components/Code.js)

import 'prismjs';
import 'prismjs/themes/prism.css';

import Prism from 'react-prism';

export function Fence({ children, language }) {
  return (
    <Prism key={language} component="pre" className={`language-${language}`}>
      {children}
    </Prism>
  );
}

const fence = {
  render: 'Fence',
  attributes: {
    language: {
      type: String
    }
  }
};

const content = Markdoc.transform(ast, {
  nodes: {
    fence
  }
});

Markdoc.renderers.react(content, React, {
  components: {
    Fence
  }
});
CopySwitch statementsYou can create your own switch/case semantics with custom Markdoc tags.import { transformer } from '@markdoc/markdoc';

/** @type {import('@markdoc/markdoc').Config} */
const config = {
  tags: {
    switch: {
      attributes: { primary: { render: false } },
      transform(node, config) {
        const attributes = node.transformAttributes(config);

        const child = node.children.find(
          (child) => child.attributes.primary === attributes.primary
        );

        return child ? transformer.node(child, config) : [];
      }
    },
    case: {
      attributes: { primary: { render: false } }
    }
  }
};
Copywhich can then be used in your document:{% switch $item %}

{% case 1 %}
Case 1
{% /case %}

{% case 2 %}
Case 2
{% /case %}

{% /switch %}
CopyTable of contentsTo create a table of contents, first collect all headings from the page content:// [Source example](https://github.com/markdoc/docs/blob/bae62d06109e3e699778fe901c8015d41b1c7c9f/pages/_app.js#L58-L79)

function collectHeadings(node, sections = []) {
  if (node) {
    // Match all h1, h2, h3… tags
    if (node.name.match(/h\d/)) {
      const title = node.children[0];

      if (typeof title === 'string') {
        sections.push({
          ...node.attributes,
          title
        });
      }
    }

    if (node.children) {
      for (const child of node.children) {
        collectHeadings(child, sections);
      }
    }
  }

  return sections;
}

const content = Markdoc.transform(ast);
const headings = collectHeadings(content);
CopyThen, render the headings in a list:// [Source example](https://github.com/markdoc/docs/blob/main/components/Shell/TableOfContents.js)

function TableOfContents({ headings }) {
  const items = headings.filter((item) => [2, 3].includes(item.level));

  return (
    <nav>
      <ul>
        {items.map((item) => (
          <li key={item.title}>
            <a href={`#${item.id}`}>{item.title}</a>
          </li>
        ))}
      </ul>
    </nav>
  );
}
CopyFinally, add IDs to the headings using ID annotations# My header {% #my-id %}
CopyTabsFirst, create the Markdoc tagsimport { Tag } from '@markdoc/markdoc';

const tabs = {
  render: 'Tabs',
  attributes: {},
  transform(node, config) {
    const labels = node
      .transformChildren(config)
      .filter((child) => child && child.name === 'Tab')
      .map((tab) => (typeof tab === 'object' ? tab.attributes.label : null));

    return new Tag(this.render, { labels }, node.transformChildren(config));
  }
};

const tab = {
  render: 'Tab',
  attributes: {
    label: {
      type: String
    }
  }
};

/** @type {import('@markdoc/markdoc').Config} */
const config = {
  tags: {
    tabs,
    tab
  }
};
CopyThen, create a Tab and Tabs React component which map to the tab and tabs tag:// components/Tabs.js

import React from 'react';

export const TabContext = React.createContext();

export function Tabs({ labels, children }) {
  const [
    currentTab,
    setCurrentTab
  ] = React.useState(labels[0]);

  return (
    <TabContext.Provider value={currentTab}>
      <ul role="tablist">
        {labels.map((label) => (
          <li key={label}>
            <button
              role="tab"
              aria-selected={label === currentTab}
              onClick={() => setCurrentTab(label)}
            >
              {label}
            </button>
          </li>
        ))}
      </ul>
      {children}
    </TabContext.Provider>
  );
};
Copy// components/Tab.js

import React from 'react';
import { TabContext } from './Tabs';

export function Tab({ label, children }) {
  const currentTab = React.useContext(TabContext);

  if (label !== currentTab) {
    return null;
  }

  return children;
}
Copyand use the tags in your document.{% tabs %}

{% tab label="React" %}
React content goes here
{% /tab %}

{% tab label="HTML" %}
HTML content goes here
{% /tab %}

{% /tabs %}
CopyCMD + J / EscLoopsSyntax highlightingSwitch statementsTable of contentsTabsThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Common examples\ndescription:\n---\n\n# {% $markdoc.frontmatter.title %}\n\nWith Markdoc, it's easy to add functionality you'd commonly associate with documentation sites. The examples below cover loops, syntax highlighting, tabs, and more.\n\nIf you're looking for other sample code, check out our collection of [example repos](https://github.com/markdoc/docs/tree/main/examples), or view the [source code for this site](https://github.com/markdoc/docs).\n\n## Loops\n\nMarkdoc does not support writing loops directly in documents. If you need to loop through content, do so in a custom [Node](/docs/nodes) or [Tag](/docs/tags) `transform` function or in a custom [React component](/docs/render#react).\n\n```js\nimport { Tag } from '@markdoc/markdoc';\n\nexport const group = {\n  render: 'Group',\n  attributes: {\n    items: { type: Array }\n  },\n  transform(node, config) {\n    const attributes = node.transformAttributes(config);\n    const children = node.transformChildren(config);\n\n    for (const item of attributes.items) {\n      /* Do something with each item */\n    }\n\n    return new Tag('Group', attributes, children);\n  }\n};\n```\n\n{% example %}\n\n```md\n{% group items=[1, 2, 3] /%}\n```\n\n{% /example %}\n\n## Syntax highlighting\n\nYou can hook up syntax highlighting for code blocks by creating a custom `fence` [node](/docs/nodes). This example shows how to do so with [Prism](https://prismjs.com/).\n\n```js\n// [Source example](https://github.com/markdoc/docs/blob/main/components/Code.js)\n\nimport 'prismjs';\nimport 'prismjs/themes/prism.css';\n\nimport Prism from 'react-prism';\n\nexport function Fence({ children, language }) {\n  return (\n    \u003cPrism key={language} component=\"pre\" className={`language-${language}`}\u003e\n      {children}\n    \u003c/Prism\u003e\n  );\n}\n\nconst fence = {\n  render: 'Fence',\n  attributes: {\n    language: {\n      type: String\n    }\n  }\n};\n\nconst content = Markdoc.transform(ast, {\n  nodes: {\n    fence\n  }\n});\n\nMarkdoc.renderers.react(content, React, {\n  components: {\n    Fence\n  }\n});\n```\n\n## Switch statements\n\nYou can create your own `switch`/`case` semantics with custom Markdoc tags.\n\n```js\nimport { transformer } from '@markdoc/markdoc';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    switch: {\n      attributes: { primary: { render: false } },\n      transform(node, config) {\n        const attributes = node.transformAttributes(config);\n\n        const child = node.children.find(\n          (child) =\u003e child.attributes.primary === attributes.primary\n        );\n\n        return child ? transformer.node(child, config) : [];\n      }\n    },\n    case: {\n      attributes: { primary: { render: false } }\n    }\n  }\n};\n```\n\nwhich can then be used in your document:\n\n{% example %}\n\n```md\n{% switch $item %}\n\n{% case 1 %}\nCase 1\n{% /case %}\n\n{% case 2 %}\nCase 2\n{% /case %}\n\n{% /switch %}\n```\n\n{% /example %}\n\n## Table of contents\n\nTo create a table of contents, first collect all headings from the page content:\n\n```js\n// [Source example](https://github.com/markdoc/docs/blob/bae62d06109e3e699778fe901c8015d41b1c7c9f/pages/_app.js#L58-L79)\n\nfunction collectHeadings(node, sections = []) {\n  if (node) {\n    // Match all h1, h2, h3… tags\n    if (node.name.match(/h\\d/)) {\n      const title = node.children[0];\n\n      if (typeof title === 'string') {\n        sections.push({\n          ...node.attributes,\n          title\n        });\n      }\n    }\n\n    if (node.children) {\n      for (const child of node.children) {\n        collectHeadings(child, sections);\n      }\n    }\n  }\n\n  return sections;\n}\n\nconst content = Markdoc.transform(ast);\nconst headings = collectHeadings(content);\n```\n\nThen, render the headings in a list:\n\n```js\n// [Source example](https://github.com/markdoc/docs/blob/main/components/Shell/TableOfContents.js)\n\nfunction TableOfContents({ headings }) {\n  const items = headings.filter((item) =\u003e [2, 3].includes(item.level));\n\n  return (\n    \u003cnav\u003e\n      \u003cul\u003e\n        {items.map((item) =\u003e (\n          \u003cli key={item.title}\u003e\n            \u003ca href={`#${item.id}`}\u003e{item.title}\u003c/a\u003e\n          \u003c/li\u003e\n        ))}\n      \u003c/ul\u003e\n    \u003c/nav\u003e\n  );\n}\n```\n\nFinally, add IDs to the headings using ID [annotations](/docs/syntax#annotations)\n\n{% example %}\n\n```md\n# My header {% #my-id %}\n```\n\n{% /example %}\n\n## Tabs\n\nFirst, create the Markdoc tags\n\n```js\nimport { Tag } from '@markdoc/markdoc';\n\nconst tabs = {\n  render: 'Tabs',\n  attributes: {},\n  transform(node, config) {\n    const labels = node\n      .transformChildren(config)\n      .filter((child) =\u003e child \u0026\u0026 child.name === 'Tab')\n      .map((tab) =\u003e (typeof tab === 'object' ? tab.attributes.label : null));\n\n    return new Tag(this.render, { labels }, node.transformChildren(config));\n  }\n};\n\nconst tab = {\n  render: 'Tab',\n  attributes: {\n    label: {\n      type: String\n    }\n  }\n};\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    tabs,\n    tab\n  }\n};\n```\n\nThen, create a `Tab` and `Tabs` React component which map to the `tab` and `tabs` tag:\n\n{% sideBySide %}\n\n```js\n// components/Tabs.js\n\nimport React from 'react';\n\nexport const TabContext = React.createContext();\n\nexport function Tabs({ labels, children }) {\n  const [\n    currentTab,\n    setCurrentTab\n  ] = React.useState(labels[0]);\n\n  {% comment %}\n  prettier-ignore-start\n  {% /comment %}\n  return (\n    \u003cTabContext.Provider value={currentTab}\u003e\n      \u003cul role=\"tablist\"\u003e\n        {labels.map((label) =\u003e (\n          \u003cli key={label}\u003e\n            \u003cbutton\n              role=\"tab\"\n              aria-selected={label === currentTab}\n              onClick={() =\u003e setCurrentTab(label)}\n            \u003e\n              {label}\n            \u003c/button\u003e\n          \u003c/li\u003e\n        ))}\n      \u003c/ul\u003e\n      {children}\n    \u003c/TabContext.Provider\u003e\n  );\n  {% comment %}\n  prettier-ignore-end\n  {% /comment %}\n};\n```\n\n```js\n// components/Tab.js\n\nimport React from 'react';\nimport { TabContext } from './Tabs';\n\nexport function Tab({ label, children }) {\n  const currentTab = React.useContext(TabContext);\n\n  if (label !== currentTab) {\n    return null;\n  }\n\n  return children;\n}\n```\n\n{% /sideBySide %}\n\nand use the tags in your document.\n\n{% example %}\n\n```md\n{% tabs %}\n\n{% tab label=\"React\" %}\nReact content goes here\n{% /tab %}\n\n{% tab label=\"HTML\" %}\nHTML content goes here\n{% /tab %}\n\n{% /tabs %}\n```\n\n{% /example %}\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"common-examples"},"children":["Common examples"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["With Markdoc, it's easy to add functionality you'd commonly associate with documentation sites. The examples below cover loops, syntax highlighting, tabs, and more."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you're looking for other sample code, check out our collection of ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/docs/tree/main/examples","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["example repos"]},", or view the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/docs","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["source code for this site"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"loops"},"children":["Loops"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc does not support writing loops directly in documents. If you need to loop through content, do so in a custom ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Node"]}," or ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Tag"]}," ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["transform"]}," function or in a custom ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render#react","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["React component"]},"."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["import { Tag } from '@markdoc/markdoc';\n\nexport const group = {\n  render: 'Group',\n  attributes: {\n    items: { type: Array }\n  },\n  transform(node, config) {\n    const attributes = node.transformAttributes(config);\n    const children = node.transformChildren(config);\n\n    for (const item of attributes.items) {\n      /* Do something with each item */\n    }\n\n    return new Tag('Group', attributes, children);\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["{% group items=[1, 2, 3] /%}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"syntax-highlighting"},"children":["Syntax highlighting"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can hook up syntax highlighting for code blocks by creating a custom ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["fence"]}," ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["node"]},". This example shows how to do so with ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://prismjs.com/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Prism"]},"."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [Source example](https://github.com/markdoc/docs/blob/main/components/Code.js)\n\nimport 'prismjs';\nimport 'prismjs/themes/prism.css';\n\nimport Prism from 'react-prism';\n\nexport function Fence({ children, language }) {\n  return (\n    \u003cPrism key={language} component=\"pre\" className={`language-${language}`}\u003e\n      {children}\n    \u003c/Prism\u003e\n  );\n}\n\nconst fence = {\n  render: 'Fence',\n  attributes: {\n    language: {\n      type: String\n    }\n  }\n};\n\nconst content = Markdoc.transform(ast, {\n  nodes: {\n    fence\n  }\n});\n\nMarkdoc.renderers.react(content, React, {\n  components: {\n    Fence\n  }\n});\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"switch-statements"},"children":["Switch statements"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can create your own ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["switch"]},"/",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["case"]}," semantics with custom Markdoc tags."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["import { transformer } from '@markdoc/markdoc';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    switch: {\n      attributes: { primary: { render: false } },\n      transform(node, config) {\n        const attributes = node.transformAttributes(config);\n\n        const child = node.children.find(\n          (child) =\u003e child.attributes.primary === attributes.primary\n        );\n\n        return child ? transformer.node(child, config) : [];\n      }\n    },\n    case: {\n      attributes: { primary: { render: false } }\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["which can then be used in your document:"]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["{% switch $item %}\n\n{% case 1 %}\nCase 1\n{% /case %}\n\n{% case 2 %}\nCase 2\n{% /case %}\n\n{% /switch %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"table-of-contents"},"children":["Table of contents"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To create a table of contents, first collect all headings from the page content:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [Source example](https://github.com/markdoc/docs/blob/bae62d06109e3e699778fe901c8015d41b1c7c9f/pages/_app.js#L58-L79)\n\nfunction collectHeadings(node, sections = []) {\n  if (node) {\n    // Match all h1, h2, h3… tags\n    if (node.name.match(/h\\d/)) {\n      const title = node.children[0];\n\n      if (typeof title === 'string') {\n        sections.push({\n          ...node.attributes,\n          title\n        });\n      }\n    }\n\n    if (node.children) {\n      for (const child of node.children) {\n        collectHeadings(child, sections);\n      }\n    }\n  }\n\n  return sections;\n}\n\nconst content = Markdoc.transform(ast);\nconst headings = collectHeadings(content);\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Then, render the headings in a list:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [Source example](https://github.com/markdoc/docs/blob/main/components/Shell/TableOfContents.js)\n\nfunction TableOfContents({ headings }) {\n  const items = headings.filter((item) =\u003e [2, 3].includes(item.level));\n\n  return (\n    \u003cnav\u003e\n      \u003cul\u003e\n        {items.map((item) =\u003e (\n          \u003cli key={item.title}\u003e\n            \u003ca href={`#${item.id}`}\u003e{item.title}\u003c/a\u003e\n          \u003c/li\u003e\n        ))}\n      \u003c/ul\u003e\n    \u003c/nav\u003e\n  );\n}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Finally, add IDs to the headings using ID ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/syntax#annotations","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["annotations"]}]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["# My header {% #my-id %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"tabs"},"children":["Tabs"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["First, create the Markdoc tags"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["import { Tag } from '@markdoc/markdoc';\n\nconst tabs = {\n  render: 'Tabs',\n  attributes: {},\n  transform(node, config) {\n    const labels = node\n      .transformChildren(config)\n      .filter((child) =\u003e child \u0026\u0026 child.name === 'Tab')\n      .map((tab) =\u003e (typeof tab === 'object' ? tab.attributes.label : null));\n\n    return new Tag(this.render, { labels }, node.transformChildren(config));\n  }\n};\n\nconst tab = {\n  render: 'Tab',\n  attributes: {\n    label: {\n      type: String\n    }\n  }\n};\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    tabs,\n    tab\n  }\n};\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Then, create a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Tab"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Tabs"]}," React component which map to the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["tab"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["tabs"]}," tag:"]},{"$$mdtype":"Tag","name":"Sidebyside","attributes":{},"children":[{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// components/Tabs.js\n\nimport React from 'react';\n\nexport const TabContext = React.createContext();\n\nexport function Tabs({ labels, children }) {\n  const [\n    currentTab,\n    setCurrentTab\n  ] = React.useState(labels[0]);\n","\n  return (\n    \u003cTabContext.Provider value={currentTab}\u003e\n      \u003cul role=\"tablist\"\u003e\n        {labels.map((label) =\u003e (\n          \u003cli key={label}\u003e\n            \u003cbutton\n              role=\"tab\"\n              aria-selected={label === currentTab}\n              onClick={() =\u003e setCurrentTab(label)}\n            \u003e\n              {label}\n            \u003c/button\u003e\n          \u003c/li\u003e\n        ))}\n      \u003c/ul\u003e\n      {children}\n    \u003c/TabContext.Provider\u003e\n  );","\n};\n"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// components/Tab.js\n\nimport React from 'react';\nimport { TabContext } from './Tabs';\n\nexport function Tab({ label, children }) {\n  const currentTab = React.useContext(TabContext);\n\n  if (label !== currentTab) {\n    return null;\n  }\n\n  return children;\n}\n"]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["and use the tags in your document."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["{% tabs %}\n\n{% tab label=\"React\" %}\nReact content goes here\n{% /tab %}\n\n{% tab label=\"HTML\" %}\nHTML content goes here\n{% /tab %}\n\n{% /tabs %}\n"]}]},"frontmatter":{"title":"Common examples","description":null},"file":{"path":"/docs/examples/index.md"}}},"__N_SSG":true},"page":"/docs/examples","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/faq.html ---

Markdoc | Frequently asked questions.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.icon.jsx-905881538{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:#d97917}.icon.jsx-905881538 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.callout.jsx-f5942a5fa6301fb4{padding:.5rem 0 2rem}.content.jsx-f5942a5fa6301fb4{color:var(--dark);background:var(--code-background);border:1px solid var(--code-border);line-height:20px;padding:12px 20px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.icon.jsx-f5942a5fa6301fb4{padding-right:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.callout.jsx-f5942a5fa6301fb4 p:first-of-type{padding:0}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsFrequently asked questionsIs Markdoc compliant with the CommonMark specification?Markdoc's syntax is largely a superset of the CommonMark specification. Markdoc introduces its own syntactic extensions, which include tags, annotations, and variable interpolation. Markdoc also supports GitHub-flavored tables, though we encourage you to use Markdoc's own list-style tables instead.Setext headingsThe only CommonMark-specified feature that Markdoc doesn't support is the setext heading. This design decision is largely an internal preference of the Markdoc core team: in our view, the setext heading is redundant with the more commonly-used ATX heading, and introduces more ambiguity. If you want to use setext headings in Markdoc or you need to support the feature in order to ensure compatibility with existing content, you can still reconfigure Markdoc's tokenizer to re-enable the markdown-it lheading rule.IndentationIn CommonMark-compliant Markdown, any content that is indented by four spaces is treated as a code block. Unfortunately, this behavior makes it difficult to use arbitrary levels of indentation to improve the readability of documents with complex structure.When using nested tags in Markdoc, it can be helpful to indent the content inside of tags so that the level of depth is clear. To support arbitrary indentation, we have to disable the indent-based code blocks and modify several other markdown-it parsing rules that account for indent-based code blocks. Markdoc's tokenizer accepts an allowIndentation option that applies these changes:const example = `
{% foo %}
  {% bar %}
    This is content inside of nested tags
  {% /bar %}
{% /foo %}
`;

const tokenizer = new markdoc.Tokenizer({allowIndentation: true}));
const tokens = tokenizer.tokenize(example);
const ast = markdoc.parse(tokens);
CopyThe allowIndentation option is experimental and is not enabled by default. When the option is enabled, it is not possible to use indent-based code blocks. We strongly recommend using fenced code blocks instead of indent-based code blocks regardless of whether you intend to take advantage of the allowIndentation option.WarningMarkdoc content that incorporates arbitrary levels of indentation via the allowIndentation option may not be compatible with other CommonMark-compliant Markdown processing tools.Markdoc standardizationWe have drafted a specification that describes Markdoc's tag syntax. We welcome third-party implementors to adopt and contribute to the Markdoc tag specification. The tag syntax is the only part of Markdoc that we are formally specifying at this time, but we are seriously considering the possibility of drafting a specification for the JSON representation of Markdoc's Abstract Syntax Tree (AST) in order to facilitate interoperability between Markdoc tools.In the future, we may create a distinct dialect of Markdown that deviates further from the CommonMark specification, removing additional features like the angle-bracket block quote syntax that can be replaced by Markdoc tags. We think there's an opportunity to create a Markdown variant specifically for Markdoc that is less ambiguous, more prescriptive, and more conducive to rigorous specification. This would be available alongside the CommonMark-aligned syntax that we support today, giving users the option to choose whether they want a cleaner syntax or compatibility with existing Markdown tools and content.Why create Markdoc instead of using an alternative?Why not MDX?MDX is a Markdown variant that allows users to embed content written in JavaScript and React's JSX templating syntax. Like Markdoc, MDX makes it possible to incorporate React components into a piece of documentation.  The key difference is that MDX supports arbitrarily-complex JavaScript logic (think: docs as code) while Markdoc enforces a strict separation between code and content (think: docs as data).Markdoc uses a fully declarative approach to composition and flow control, where MDX relies on JavaScript and React. This means MDX affords users more power and flexibility, but at the cost of complexity–content can quickly become as complex as regular code, which can lead to maintainability complications or a more difficult authoring environment.One of the key motivations for creating Markdoc at Stripe was to create a format that is optimized for writing rather than programming so that we could overcome the challenges that resulted from mixing code and content in our legacy documentation platform. With Markdoc, contributors can iterate quickly without having to subject their edits to a code review and the standard of technical scrutiny that we would have to apply to a format that supports embedded JavaScript. Markdoc also helps us enforce stronger controls around presentation and page logic, avoiding situations in which one-off hacks and procedural content generation introduce bugs and unpredictable behavior.Markdoc's first-class, declarative tag syntax integrates seamlessly with Markdown content and can make it simpler to handle content transforms, static analysis, and validation in a unified, lightweight manner. In MDX, some of these tasks require operating on a more complicated JavaScript AST and accounting for the full spectrum of JavaScript language features. MDX also has a significantly larger runtime dependency footprint and relies on a JavaScript parser to handle the embedded logic.Why not AsciiDoc?AsciiDoc is a plain-text markup format that is designed specifically for technical writing, incorporating ideas from DocBook and other publishing technologies. AsciiDoc gets a lot of things right–extensibility, support for highly-structured content, parsing to an AST, and open governance.We are big fans of AsciiDoc–it was a major source of inspiration when we began designing Markdoc. In fact, our earliest efforts to modernize our content format at Stripe back in 2017 involved a proof-of-concept built on the Ruby-based AsciiDoctor library. There are several reasons why we ultimately moved to Markdown instead of proceeding with AsciiDoc as our efforts progressed.AsciiDoc is less ubiquitous than Markdown, which means it is less familiar to engineers and technical writers. AsciiDoc has a number of syntactic idiosyncrasies that create friction for adopters, making it a tough sell to users who already know and want Markdown. For example, AsciiDoc requires the use of multiple leading asterisks in order to express nested bulleted lists because the format is designed to not treat whitespace as significant. And in order to nest delimited content blocks, it relies on varying the length of the delimiter line–unintutive and error-prone syntax.AsciiDoc's extensibility model would have allowed us to repurpose some of the format's built-in patterns to do many of the same things we do in Markdoc, but at the cost of usability, because AsciiDoc ultimately wasn't designed with our requirements and use case in mind. Markdown paired with Markdoc's syntactic extensions result in an overall smaller surface area than AsciiDoc's feature set, which means less complexity and easier adoption.CMD + J / EscIs Markdoc compliant with the CommonMark specification?Setext headingsIndentationMarkdoc standardizationWhy create Markdoc instead of using an alternative?Why not MDX?Why not AsciiDoc?This site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Frequently asked questions\n---\n\n# {% $markdoc.frontmatter.title %}\n\n## Is Markdoc compliant with the CommonMark specification?\n\nMarkdoc's syntax is largely a superset of the [CommonMark specification](https://commonmark.org/). Markdoc introduces its own [syntactic extensions](/docs/syntax), which include [tags](/docs/tags), [annotations](/docs/syntax#annotations), and [variable interpolation](/docs/variables). Markdoc also supports [GitHub-flavored tables](https://github.github.com/gfm/#tables-extension-), though we encourage you to use Markdoc's own [list-style tables](/docs/tags#table) instead.\n\n### Setext headings\n\nThe only CommonMark-specified feature that Markdoc doesn't support is the [setext heading](https://spec.commonmark.org/0.30/#setext-headings). This design decision is largely an internal preference of the Markdoc core team: in our view, the setext heading is redundant with the more commonly-used [ATX heading](https://spec.commonmark.org/0.30/#atx-heading), and introduces more ambiguity. If you want to use setext headings in Markdoc or you need to support the feature in order to ensure compatibility with existing content, you can still reconfigure Markdoc's tokenizer to re-enable the [markdown-it](https://github.com/markdown-it/markdown-it) `lheading` rule.\n\n### Indentation\n\nIn CommonMark-compliant Markdown, any content that is indented by four spaces is treated as a [code block](https://spec.commonmark.org/0.30/#indented-code-blocks). Unfortunately, this behavior makes it difficult to use arbitrary levels of indentation to improve the readability of documents with complex structure.\n\nWhen using nested tags in Markdoc, it can be helpful to indent the content inside of tags so that the level of depth is clear. To support arbitrary indentation, we have to disable the indent-based code blocks and modify several other markdown-it parsing rules that account for indent-based code blocks. Markdoc's tokenizer accepts an `allowIndentation` option that applies these changes:\n\n{% example %}\n```js\nconst example = `\n{% foo %}\n  {% bar %}\n    This is content inside of nested tags\n  {% /bar %}\n{% /foo %}\n`;\n\nconst tokenizer = new markdoc.Tokenizer({allowIndentation: true}));\nconst tokens = tokenizer.tokenize(example);\nconst ast = markdoc.parse(tokens);\n```\n{% /example %}\n\nThe `allowIndentation` option is experimental and is not enabled by default. When the option is enabled, it is not possible to use indent-based code blocks. We strongly recommend using [fenced code blocks](https://spec.commonmark.org/0.30/#fenced-code-blocks) instead of indent-based code blocks regardless of whether you intend to take advantage of the `allowIndentation` option.\n\n{% callout type=\"warning\" %}\nMarkdoc content that incorporates arbitrary levels of indentation via the `allowIndentation` option may not be compatible with other CommonMark-compliant Markdown processing tools.\n{% /callout %}\n\n### Markdoc standardization\n\nWe have drafted a specification that describes Markdoc's tag syntax. We welcome third-party implementors to adopt and contribute to the Markdoc tag specification. The tag syntax is the only part of Markdoc that we are formally specifying at this time, but we are seriously considering the possibility of drafting a specification for the JSON representation of Markdoc's Abstract Syntax Tree (AST) in order to facilitate interoperability between Markdoc tools.\n\nIn the future, we may create a distinct dialect of Markdown that deviates further from the CommonMark specification, removing additional features like the angle-bracket [block quote](https://spec.commonmark.org/0.30/#block-quotes) syntax that can be replaced by Markdoc tags. We think there's an opportunity to create a Markdown variant specifically for Markdoc that is less ambiguous, more prescriptive, and more conducive to rigorous specification. This would be available alongside the CommonMark-aligned syntax that we support today, giving users the option to choose whether they want a cleaner syntax or compatibility with existing Markdown tools and content.\n\n## Why create Markdoc instead of using an alternative?\n\n### Why not MDX?\n\n[MDX](https://mdxjs.com/) is a Markdown variant that allows users to embed content written in JavaScript and React's JSX templating syntax. Like Markdoc, MDX makes it possible to incorporate React components into a piece of documentation.  The key difference is that MDX supports arbitrarily-complex JavaScript logic (think: docs as code) while Markdoc enforces a strict separation between code and content (think: docs as data).\n\nMarkdoc uses a fully declarative approach to composition and flow control, where MDX relies on JavaScript and React. This means MDX affords users more power and flexibility, but at the cost of complexity–content can quickly become as complex as regular code, which can lead to maintainability complications or a more difficult authoring environment.\n\nOne of the key motivations for creating Markdoc at Stripe was to create a format that is optimized for writing rather than programming so that we could overcome the challenges that resulted from mixing code and content in our legacy documentation platform. With Markdoc, contributors can iterate quickly without having to subject their edits to a code review and the standard of technical scrutiny that we would have to apply to a format that supports embedded JavaScript. Markdoc also helps us enforce stronger controls around presentation and page logic, avoiding situations in which one-off hacks and procedural content generation introduce bugs and unpredictable behavior. \n\nMarkdoc's first-class, declarative tag syntax integrates seamlessly with Markdown content and can make it simpler to handle content transforms, static analysis, and validation in a unified, lightweight manner. In MDX, some of these tasks require operating on a more complicated JavaScript AST and accounting for the full spectrum of JavaScript language features. MDX also has a significantly larger runtime dependency footprint and relies on a JavaScript parser to handle the embedded logic.\n\n### Why not AsciiDoc?\n\n[AsciiDoc](https://asciidoc.org/) is a plain-text markup format that is designed specifically for technical writing, incorporating ideas from DocBook and other publishing technologies. AsciiDoc gets a lot of things right–extensibility, support for highly-structured content, parsing to an AST, and open governance.\n\nWe are big fans of AsciiDoc–it was a major source of inspiration when we began designing Markdoc. In fact, our earliest efforts to modernize our content format at Stripe back in 2017 involved a proof-of-concept built on the Ruby-based [AsciiDoctor](https://asciidoctor.org/) library. There are several reasons why we ultimately moved to Markdown instead of proceeding with AsciiDoc as our efforts progressed.\n\nAsciiDoc is less ubiquitous than Markdown, which means it is less familiar to engineers and technical writers. AsciiDoc has a number of syntactic idiosyncrasies that create friction for adopters, making it a tough sell to users who already know and want Markdown. For example, AsciiDoc requires the use of [multiple leading asterisks](https://docs.asciidoctor.org/asciidoc/latest/lists/unordered/#nested-unordered-list) in order to express nested bulleted lists because the format is designed to not treat whitespace as significant. And in order to nest delimited content blocks, it relies on [varying the length](https://docs.asciidoctor.org/asciidoc/latest/blocks/delimited/#nesting) of the delimiter line–unintutive and error-prone syntax.\n\nAsciiDoc's extensibility model would have allowed us to repurpose some of the format's built-in patterns to do many of the same things we do in Markdoc, but at the cost of usability, because AsciiDoc ultimately wasn't designed with our requirements and use case in mind. Markdown paired with Markdoc's syntactic extensions result in an overall smaller surface area than AsciiDoc's feature set, which means less complexity and easier adoption.\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"frequently-asked-questions"},"children":["Frequently asked questions"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"is-markdoc-compliant-with-the-commonmark-specification"},"children":["Is Markdoc compliant with the CommonMark specification?"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc's syntax is largely a superset of the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://commonmark.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["CommonMark specification"]},". Markdoc introduces its own ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/syntax","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["syntactic extensions"]},", which include ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["tags"]},", ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/syntax#annotations","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["annotations"]},", and ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["variable interpolation"]},". Markdoc also supports ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.github.com/gfm/#tables-extension-","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["GitHub-flavored tables"]},", though we encourage you to use Markdoc's own ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags#table","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["list-style tables"]}," instead."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"setext-headings"},"children":["Setext headings"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The only CommonMark-specified feature that Markdoc doesn't support is the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://spec.commonmark.org/0.30/#setext-headings","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["setext heading"]},". This design decision is largely an internal preference of the Markdoc core team: in our view, the setext heading is redundant with the more commonly-used ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://spec.commonmark.org/0.30/#atx-heading","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["ATX heading"]},", and introduces more ambiguity. If you want to use setext headings in Markdoc or you need to support the feature in order to ensure compatibility with existing content, you can still reconfigure Markdoc's tokenizer to re-enable the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdown-it/markdown-it","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["markdown-it"]}," ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["lheading"]}," rule."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"indentation"},"children":["Indentation"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["In CommonMark-compliant Markdown, any content that is indented by four spaces is treated as a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://spec.commonmark.org/0.30/#indented-code-blocks","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["code block"]},". Unfortunately, this behavior makes it difficult to use arbitrary levels of indentation to improve the readability of documents with complex structure."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["When using nested tags in Markdoc, it can be helpful to indent the content inside of tags so that the level of depth is clear. To support arbitrary indentation, we have to disable the indent-based code blocks and modify several other markdown-it parsing rules that account for indent-based code blocks. Markdoc's tokenizer accepts an ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["allowIndentation"]}," option that applies these changes:"]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["const example = `\n{% foo %}\n  {% bar %}\n    This is content inside of nested tags\n  {% /bar %}\n{% /foo %}\n`;\n\nconst tokenizer = new markdoc.Tokenizer({allowIndentation: true}));\nconst tokens = tokenizer.tokenize(example);\nconst ast = markdoc.parse(tokens);\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["allowIndentation"]}," option is experimental and is not enabled by default. When the option is enabled, it is not possible to use indent-based code blocks. We strongly recommend using ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://spec.commonmark.org/0.30/#fenced-code-blocks","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["fenced code blocks"]}," instead of indent-based code blocks regardless of whether you intend to take advantage of the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["allowIndentation"]}," option."]},{"$$mdtype":"Tag","name":"Callout","attributes":{"type":"warning"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc content that incorporates arbitrary levels of indentation via the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["allowIndentation"]}," option may not be compatible with other CommonMark-compliant Markdown processing tools."]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"markdoc-standardization"},"children":["Markdoc standardization"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["We have drafted a specification that describes Markdoc's tag syntax. We welcome third-party implementors to adopt and contribute to the Markdoc tag specification. The tag syntax is the only part of Markdoc that we are formally specifying at this time, but we are seriously considering the possibility of drafting a specification for the JSON representation of Markdoc's Abstract Syntax Tree (AST) in order to facilitate interoperability between Markdoc tools."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["In the future, we may create a distinct dialect of Markdown that deviates further from the CommonMark specification, removing additional features like the angle-bracket ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://spec.commonmark.org/0.30/#block-quotes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["block quote"]}," syntax that can be replaced by Markdoc tags. We think there's an opportunity to create a Markdown variant specifically for Markdoc that is less ambiguous, more prescriptive, and more conducive to rigorous specification. This would be available alongside the CommonMark-aligned syntax that we support today, giving users the option to choose whether they want a cleaner syntax or compatibility with existing Markdown tools and content."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"why-create-markdoc-instead-of-using-an-alternative"},"children":["Why create Markdoc instead of using an alternative?"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"why-not-mdx"},"children":["Why not MDX?"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://mdxjs.com/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["MDX"]}," is a Markdown variant that allows users to embed content written in JavaScript and React's JSX templating syntax. Like Markdoc, MDX makes it possible to incorporate React components into a piece of documentation.  The key difference is that MDX supports arbitrarily-complex JavaScript logic (think: docs as code) while Markdoc enforces a strict separation between code and content (think: docs as data)."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc uses a fully declarative approach to composition and flow control, where MDX relies on JavaScript and React. This means MDX affords users more power and flexibility, but at the cost of complexity–content can quickly become as complex as regular code, which can lead to maintainability complications or a more difficult authoring environment."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["One of the key motivations for creating Markdoc at Stripe was to create a format that is optimized for writing rather than programming so that we could overcome the challenges that resulted from mixing code and content in our legacy documentation platform. With Markdoc, contributors can iterate quickly without having to subject their edits to a code review and the standard of technical scrutiny that we would have to apply to a format that supports embedded JavaScript. Markdoc also helps us enforce stronger controls around presentation and page logic, avoiding situations in which one-off hacks and procedural content generation introduce bugs and unpredictable behavior."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc's first-class, declarative tag syntax integrates seamlessly with Markdown content and can make it simpler to handle content transforms, static analysis, and validation in a unified, lightweight manner. In MDX, some of these tasks require operating on a more complicated JavaScript AST and accounting for the full spectrum of JavaScript language features. MDX also has a significantly larger runtime dependency footprint and relies on a JavaScript parser to handle the embedded logic."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"why-not-asciidoc"},"children":["Why not AsciiDoc?"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://asciidoc.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["AsciiDoc"]}," is a plain-text markup format that is designed specifically for technical writing, incorporating ideas from DocBook and other publishing technologies. AsciiDoc gets a lot of things right–extensibility, support for highly-structured content, parsing to an AST, and open governance."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["We are big fans of AsciiDoc–it was a major source of inspiration when we began designing Markdoc. In fact, our earliest efforts to modernize our content format at Stripe back in 2017 involved a proof-of-concept built on the Ruby-based ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://asciidoctor.org/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["AsciiDoctor"]}," library. There are several reasons why we ultimately moved to Markdown instead of proceeding with AsciiDoc as our efforts progressed."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["AsciiDoc is less ubiquitous than Markdown, which means it is less familiar to engineers and technical writers. AsciiDoc has a number of syntactic idiosyncrasies that create friction for adopters, making it a tough sell to users who already know and want Markdown. For example, AsciiDoc requires the use of ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://docs.asciidoctor.org/asciidoc/latest/lists/unordered/#nested-unordered-list","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["multiple leading asterisks"]}," in order to express nested bulleted lists because the format is designed to not treat whitespace as significant. And in order to nest delimited content blocks, it relies on ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://docs.asciidoctor.org/asciidoc/latest/blocks/delimited/#nesting","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["varying the length"]}," of the delimiter line–unintutive and error-prone syntax."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["AsciiDoc's extensibility model would have allowed us to repurpose some of the format's built-in patterns to do many of the same things we do in Markdoc, but at the cost of usability, because AsciiDoc ultimately wasn't designed with our requirements and use case in mind. Markdown paired with Markdoc's syntactic extensions result in an overall smaller surface area than AsciiDoc's feature set, which means less complexity and easier adoption."]}]},"frontmatter":{"title":"Frequently asked questions"},"file":{"path":"/docs/faq.md"}}},"__N_SSG":true},"page":"/docs/faq","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/frontmatter.html ---

Markdoc | Frontmatter.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.side-by-side.jsx-21d039f5c746a0fb{width:100%;padding:0;margin-top:1rem;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.column.jsx-21d039f5c746a0fb{overflow:auto;padding-top:var(--default-vertical-spacing)}.left.jsx-21d039f5c746a0fb{padding-right:3rem;border-right:1px solid var(--toc-border)}.right.jsx-21d039f5c746a0fb{padding-left:3rem}.side-by-side.jsx-21d039f5c746a0fb .heading{margin:0}@media screen and (max-width:1e3px){.side-by-side.jsx-21d039f5c746a0fb{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.column.jsx-21d039f5c746a0fb{overflow:initial}.left.jsx-21d039f5c746a0fb{padding:0;border:none}.right.jsx-21d039f5c746a0fb{padding-top:1rem;padding-left:0rem}}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsFrontmatterUse frontmatter to apply page-level metadata to Markdoc documents, like title and description. Markdoc doesn't have an opinion about how you format your frontmatter, you can use YAML, TOML, JSON, GraphQL—pretty much any data format you want.ExamplesWhile not a comprehensive list, the examples below give you an idea of how you can structure frontmatter in various formats.YAML---
title: Authoring in Markdoc
description: Quickly author amazing content with Markdoc syntax, a superset of Markdown.
date: 2022-04-01
---
CopyTOML---
title       = "Authoring in Markdoc"
description = "Quickly author amazing content with Markdoc syntax, a superset of Markdown."
date        = "2022-04-01"
---
CopyJSON---
{
  "title": "Authoring in Markdown",
  "description": "Quickly author amazing content with Markdoc syntax, a superset of Markdown.",
  "date": "2022-04-01"
}
---
CopyGraphQL---
{
  page {
    title
    description
    date
  }
}
---
CopyAccess frontmatter valuesTo access frontmatter content in your document, you have to pass the values to Markdoc as variables.Parse the documentParse your document to access the frontmatter content:const doc = `
---
title: My title
---

# {% $frontmatter.title %} 
`;

const ast = Markdoc.parse(doc);
CopyParse the frontmatterParse the frontmatter attribute using your preferred format and pass it in the variables field of your config object.import yaml from 'js-yaml'; // or 'toml', etc.

const frontmatter = ast.attributes.frontmatter
  ? yaml.load(ast.attributes.frontmatter)
  : {};

/** @type {import('@markdoc/markdoc').Config} */
const config = {
  variables: {
    frontmatter
  }
};
CopyUse frontmatter valuesAfter passing the parsed frontmatter to variables, you can access the values using $frontmatter:# {% $frontmatter.title %}
CopyFrontmatterCMD + J / EscExamplesYAMLTOMLJSONGraphQLAccess frontmatter valuesParse the documentParse the frontmatterUse frontmatter valuesThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Frontmatter\ndescription:\n---\n\n# {% $markdoc.frontmatter.title %}\n\nUse frontmatter to apply page-level metadata to Markdoc documents, like `title` and `description`. Markdoc doesn't have an opinion about how you format your frontmatter, you can use YAML, TOML, JSON, GraphQL—pretty much any data format you want.\n\n## Examples\n\nWhile not a comprehensive list, the examples below give you an idea of how you can structure frontmatter in various formats.\n\n### YAML\n\n```yaml\n---\ntitle: Authoring in Markdoc\ndescription: Quickly author amazing content with Markdoc syntax, a superset of Markdown.\ndate: 2022-04-01\n---\n```\n\n### TOML\n\n```toml\n---\ntitle       = \"Authoring in Markdoc\"\ndescription = \"Quickly author amazing content with Markdoc syntax, a superset of Markdown.\"\ndate        = \"2022-04-01\"\n---\n```\n\n### JSON\n\n```json\n---\n{\n  \"title\": \"Authoring in Markdown\",\n  \"description\": \"Quickly author amazing content with Markdoc syntax, a superset of Markdown.\",\n  \"date\": \"2022-04-01\"\n}\n---\n```\n\n### GraphQL\n\n```graphql\n---\n{\n  page {\n    title\n    description\n    date\n  }\n}\n---\n```\n\n## Access frontmatter values\n\nTo access frontmatter content in your document, you have to pass the values to Markdoc as [variables](/docs/variables).\n\n### Parse the document\n\nParse your document to access the frontmatter content:\n\n{% example %}\n\n```js\nconst doc = `\n---\ntitle: My title\n---\n\n# {% $frontmatter.title %} \n`;\n\nconst ast = Markdoc.parse(doc);\n```\n\n{% /example %}\n\n### Parse the frontmatter\n\nParse the frontmatter attribute using your preferred format and pass it in the `variables` field of your [`config` object](/docs/config).\n\n```js\nimport yaml from 'js-yaml'; // or 'toml', etc.\n\nconst frontmatter = ast.attributes.frontmatter\n  ? yaml.load(ast.attributes.frontmatter)\n  : {};\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  variables: {\n    frontmatter\n  }\n};\n```\n\n### Use frontmatter values\n\nAfter passing the parsed frontmatter to `variables`, you can access the values using `$frontmatter`:\n\n{% sideBySide %}\n\n{% example %}\n\n```md\n# {% $frontmatter.title %}\n```\n\n{% /example %}\n\n# {% $markdoc.frontmatter.title %}\n\n{% /sideBySide %}\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"frontmatter"},"children":["Frontmatter"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Use frontmatter to apply page-level metadata to Markdoc documents, like ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["title"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["description"]},". Markdoc doesn't have an opinion about how you format your frontmatter, you can use YAML, TOML, JSON, GraphQL—pretty much any data format you want."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"examples"},"children":["Examples"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["While not a comprehensive list, the examples below give you an idea of how you can structure frontmatter in various formats."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"yaml"},"children":["YAML"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"yaml"},"children":["---\ntitle: Authoring in Markdoc\ndescription: Quickly author amazing content with Markdoc syntax, a superset of Markdown.\ndate: 2022-04-01\n---\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"toml"},"children":["TOML"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"toml"},"children":["---\ntitle       = \"Authoring in Markdoc\"\ndescription = \"Quickly author amazing content with Markdoc syntax, a superset of Markdown.\"\ndate        = \"2022-04-01\"\n---\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"json"},"children":["JSON"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"json"},"children":["---\n{\n  \"title\": \"Authoring in Markdown\",\n  \"description\": \"Quickly author amazing content with Markdoc syntax, a superset of Markdown.\",\n  \"date\": \"2022-04-01\"\n}\n---\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"graphql"},"children":["GraphQL"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"graphql"},"children":["---\n{\n  page {\n    title\n    description\n    date\n  }\n}\n---\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"access-frontmatter-values"},"children":["Access frontmatter values"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To access frontmatter content in your document, you have to pass the values to Markdoc as ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["variables"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"parse-the-document"},"children":["Parse the document"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Parse your document to access the frontmatter content:"]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["const doc = `\n---\ntitle: My title\n---\n\n# {% $frontmatter.title %} \n`;\n\nconst ast = Markdoc.parse(doc);\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"parse-the-frontmatter"},"children":["Parse the frontmatter"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Parse the frontmatter attribute using your preferred format and pass it in the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["variables"]}," field of your ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/config","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["config"]}," object"]},"."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["import yaml from 'js-yaml'; // or 'toml', etc.\n\nconst frontmatter = ast.attributes.frontmatter\n  ? yaml.load(ast.attributes.frontmatter)\n  : {};\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  variables: {\n    frontmatter\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"use-frontmatter-values"},"children":["Use frontmatter values"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["After passing the parsed frontmatter to ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["variables"]},", you can access the values using ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["$frontmatter"]},":"]},{"$$mdtype":"Tag","name":"Sidebyside","attributes":{},"children":[{"$$mdtype":"Tag","name":"Example","attributes":{"language":"md"},"children":["# {% $frontmatter.title %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"frontmatter"},"children":["Frontmatter"]}]}]},"frontmatter":{"title":"Frontmatter","description":null},"file":{"path":"/docs/frontmatter.md"}}},"__N_SSG":true},"page":"/docs/frontmatter","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/attributes.html ---

Markdoc | Attributes.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsAttributesAttributes let you pass data to Markdoc tags, similar to HTML attributes or React props.You can pass values of type: number, string, boolean, JSON array, or JSON object, either directly or using variables. With a tag, you can use HTML-like syntax.{% city
   index=0
   name="San Francisco"
   deleted=false
   coordinates=[1, 4, 9]
   meta={id: "id_123"}
   color=$color /%}
CopyTo pass attributes to a node, you can't use the HTML-like syntax. Instead, use annotation syntax. Put the attributes after the node, in their own set of {% and %}.{% table %}

- Function {% width="25%" %}
- Returns  {% colspan=2 %}
- Example  {% align=$side %}

{% /table %}
Copy(Annotation syntax also works with tags. But it's required with nodes.)Strings within attributes must be double-quoted. If you want to include a literal double-quote in a string you can escape it with using \".{% data delimiter="\"" /%}
CopyAttribute shorthandIn either syntax, you can use .my-class-name and #my-id as shorthand for class=my-class-name and id=my-id.# Examples {% #examples %}

{% table .striped #exampletable %}
- One 
- Two
- Three
{% /table %}
CopyDefining attributesMarkdoc lets you configure custom attribute types for each tag. Assigning a type to an attribute limits which values an attribute can pass to a tag and, as a result, which values create errors during validation.The following example defines an attribute for a Callout tag. By default, the attribute is set to note and validated against the matches array.{
  render: 'Callout',
  children: ['paragraph', 'tag', 'list'],
  attributes: {
    type: {
      type: String,
      default: 'note',
      required: true,
      matches: ['caution', 'check', 'note', 'warning'],
      errorLevel: 'critical',
    },
  }
};
CopyOptionTypeDescriptiontypeString or "String"Boolean or "Boolean"Number or "Number"Object or "Object"Array or "Array"A Custom attribute you createSpecifies the data type of the attribute.defaultThe value must be the same data type defined for the attribute and, if applicable, appear in matches.Specifies the default behavior of the attribute if no value is provided.requiredbooleanSpecifies whether a value must be passed to the attribute. If no value is provided, the system throws an error.matchesA regular expression, array of strings, or function that takes an option and returns strings.Specifies a string pattern to match against an attribute value.errorLeveldebuginfowarningerrorcriticalSpecifies how Markdoc reports a validation error. Errors are ordered in ascending severity.Create a custom attributeWith Markdoc you can create custom attributes, and use them within tags. In this example, you're creating a DateTime attribute that makes sure a valid string is provided.// ./attribute-types/DateTime.js

export class DateTime {
  validate(value, config) {
    if (typeof value !== 'string' || isNaN(Date.parse(value)))
      return [
        {
          id: 'invalid-datetime-type',
          level: 'critical',
          message: 'Must be a string with a valid date format'
        }
      ];

    return [];
  }

  transform(value, config) {
    return Date.parse(value);
  }
}
CopyThen, pass the custom attribute to your tag definition in your config object.import { DateTime } from './attribute-types/DateTime';

/** @type {import('@markdoc/markdoc').Config} */
const config = {
  tags: {
    'tag-name': {
      render: 'YourComponent',
      attributes: {
        created: {
          type: DateTime,
          required: true
        }
      }
    }
  }
};
CopyNext stepsPass variables to attributesCMD + J / EscAttribute shorthandDefining attributesCreate a custom attributeThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Attributes\ndescription: Attributes are used to pass data to tags in Markdoc.\n---\n\n# {% $markdoc.frontmatter.title %}\n\n\nAttributes let you pass data to Markdoc tags, similar to [HTML attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes) or [React props](https://reactjs.org/docs/components-and-props.html).\n\nYou can pass values of type: `number`, `string`, `boolean`, JSON `array`, or JSON `object`, either directly or using [variables](/docs/variables). With a tag, you can use HTML-like syntax.\n\n{% example %}\n\n```\n{% city\n   index=0\n   name=\"San Francisco\"\n   deleted=false\n   coordinates=[1, 4, 9]\n   meta={id: \"id_123\"}\n   color=$color /%}\n```\n\n{% /example %}\n\nTo pass attributes to a node, you can't use the HTML-like syntax. Instead, use _annotation_ syntax. Put the attributes after the node, in their own set of `{%` and `%}`.\n\n{% example %}\n\n```\n{% table %}\n\n- Function {% width=\"25%\" %}\n- Returns  {% colspan=2 %}\n- Example  {% align=$side %}\n\n{% /table %}\n```\n\n{% /example %}\n\n(Annotation syntax also works with tags. But it's required with nodes.)\n\nStrings within attributes must be double-quoted. If you want to include a literal double-quote in a string you can escape it with using \\\\\".\n\n{% example %}\n\n``` {% process=false %}\n{% data delimiter=\"\\\"\" /%}\n```\n\n{% /example %}\n\n\n## Attribute shorthand \n\n\nIn either syntax, you can use `.my-class-name` and `#my-id` as shorthand for `class=my-class-name` and `id=my-id`.\n\n{% example %}\n\n``` {% process=false %}\n# Examples {% #examples %}\n\n{% table .striped #exampletable %}\n- One \n- Two\n- Three\n{% /table %}\n```\n\n{% /example %}\n\n\n## Defining attributes\n\nMarkdoc lets you configure custom attribute types for each [tag](/docs/tags). Assigning a type to an attribute limits which values an attribute can pass to a tag and, as a result, which values create errors during [validation](/docs/validation).\n\nThe following example defines an attribute for a `Callout` tag. By default, the attribute is set to `note` and validated against the `matches` array.\n\n```js\n{\n  render: 'Callout',\n  children: ['paragraph', 'tag', 'list'],\n  attributes: {\n    type: {\n      type: String,\n      default: 'note',\n      required: true,\n      matches: ['caution', 'check', 'note', 'warning'],\n      errorLevel: 'critical',\n    },\n  }\n};\n```\n\n{% table %}\n\n- Option\n- Type\n- Description\n\n---\n\n- `type`\n- - `String` or `\"String\"`\n  - `Boolean` or `\"Boolean\"`\n  - `Number` or `\"Number\"`\n  - `Object` or `\"Object\"`\n  - `Array` or `\"Array\"`\n  - A [Custom attribute](#create-a-custom-attribute) you create\n- Specifies the data type of the attribute.\n\n---\n\n- `default`\n- The value must be the same data type defined for the attribute and, if applicable, appear in `matches`.\n- Specifies the default behavior of the attribute if no value is provided.\n\n---\n\n- `required`\n- `boolean`\n- Specifies whether a value must be passed to the attribute. If no value is provided, the system throws an error.\n\n---\n\n- `matches`\n- A regular expression, array of strings, or function that takes an option and returns strings.\n- Specifies a string pattern to match against an attribute value.\n\n---\n\n- `errorLevel`\n- - `debug`\n  - `info`\n  - `warning`\n  - `error`\n  - `critical`\n- Specifies how Markdoc reports a validation error. Errors are ordered in ascending severity.\n\n{% /table %}\n\n## Create a custom attribute\n\nWith Markdoc you can create custom attributes, and use them within tags. In this example, you're creating a `DateTime` attribute that makes sure a valid string is provided.\n\n```js\n// ./attribute-types/DateTime.js\n\nexport class DateTime {\n  validate(value, config) {\n    if (typeof value !== 'string' || isNaN(Date.parse(value)))\n      return [\n        {\n          id: 'invalid-datetime-type',\n          level: 'critical',\n          message: 'Must be a string with a valid date format'\n        }\n      ];\n\n    return [];\n  }\n\n  transform(value, config) {\n    return Date.parse(value);\n  }\n}\n```\n\nThen, pass the custom attribute to your tag definition in your [`config` object](/docs/config).\n\n```js\nimport { DateTime } from './attribute-types/DateTime';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    'tag-name': {\n      render: 'YourComponent',\n      attributes: {\n        created: {\n          type: DateTime,\n          required: true\n        }\n      }\n    }\n  }\n};\n```\n\n## Next steps\n\n- [Pass variables to attributes](/docs/variables)"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"attributes"},"children":["Attributes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Attributes let you pass data to Markdoc tags, similar to ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["HTML attributes"]}," or ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://reactjs.org/docs/components-and-props.html","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["React props"]},"."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can pass values of type: ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["number"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["string"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["boolean"]},", JSON ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["array"]},", or JSON ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["object"]},", either directly or using ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["variables"]},". With a tag, you can use HTML-like syntax."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% city\n   index=0\n   name=\"San Francisco\"\n   deleted=false\n   coordinates=[1, 4, 9]\n   meta={id: \"id_123\"}\n   color=$color /%}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To pass attributes to a node, you can't use the HTML-like syntax. Instead, use ",{"$$mdtype":"Tag","name":"em","attributes":{},"children":["annotation"]}," syntax. Put the attributes after the node, in their own set of ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["{%"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["%}"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% table %}\n\n- Function {% width=\"25%\" %}\n- Returns  {% colspan=2 %}\n- Example  {% align=$side %}\n\n{% /table %}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["(Annotation syntax also works with tags. But it's required with nodes.)"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Strings within attributes must be double-quoted. If you want to include a literal double-quote in a string you can escape it with using \\\"."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% data delimiter=\"\\\"\" /%}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"attribute-shorthand"},"children":["Attribute shorthand"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["In either syntax, you can use ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":[".my-class-name"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["#my-id"]}," as shorthand for ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["class=my-class-name"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["id=my-id"]},"."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["# Examples {% #examples %}\n\n{% table .striped #exampletable %}\n- One \n- Two\n- Three\n{% /table %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"defining-attributes"},"children":["Defining attributes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc lets you configure custom attribute types for each ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["tag"]},". Assigning a type to an attribute limits which values an attribute can pass to a tag and, as a result, which values create errors during ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/validation","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["validation"]},"."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The following example defines an attribute for a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Callout"]}," tag. By default, the attribute is set to ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["note"]}," and validated against the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["matches"]}," array."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["{\n  render: 'Callout',\n  children: ['paragraph', 'tag', 'list'],\n  attributes: {\n    type: {\n      type: String,\n      default: 'note',\n      required: true,\n      matches: ['caution', 'check', 'note', 'warning'],\n      errorLevel: 'critical',\n    },\n  }\n};\n"]},{"$$mdtype":"Tag","name":"table","attributes":{},"children":[{"$$mdtype":"Tag","name":"thead","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Option"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Type"]},{"$$mdtype":"Tag","name":"th","attributes":{},"children":["Description"]}]}]},{"$$mdtype":"Tag","name":"tbody","attributes":{},"children":[{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["type"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["String"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["\"String\""]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Boolean"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["\"Boolean\""]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Number"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["\"Number\""]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Object"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["\"Object\""]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Array"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["\"Array\""]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["A ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#create-a-custom-attribute","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Custom attribute"]}," you create"]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Specifies the data type of the attribute."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["default"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["The value must be the same data type defined for the attribute and, if applicable, appear in ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["matches"]},"."]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Specifies the default behavior of the attribute if no value is provided."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["required"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["boolean"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Specifies whether a value must be passed to the attribute. If no value is provided, the system throws an error."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["matches"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["A regular expression, array of strings, or function that takes an option and returns strings."]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Specifies a string pattern to match against an attribute value."]}]},{"$$mdtype":"Tag","name":"tr","attributes":{},"children":[{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["errorLevel"]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":[{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["debug"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["info"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["warning"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["error"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["critical"]}]}]}]},{"$$mdtype":"Tag","name":"td","attributes":{},"children":["Specifies how Markdoc reports a validation error. Errors are ordered in ascending severity."]}]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"create-a-custom-attribute"},"children":["Create a custom attribute"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["With Markdoc you can create custom attributes, and use them within tags. In this example, you're creating a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["DateTime"]}," attribute that makes sure a valid string is provided."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// ./attribute-types/DateTime.js\n\nexport class DateTime {\n  validate(value, config) {\n    if (typeof value !== 'string' || isNaN(Date.parse(value)))\n      return [\n        {\n          id: 'invalid-datetime-type',\n          level: 'critical',\n          message: 'Must be a string with a valid date format'\n        }\n      ];\n\n    return [];\n  }\n\n  transform(value, config) {\n    return Date.parse(value);\n  }\n}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Then, pass the custom attribute to your tag definition in your ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/config","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["config"]}," object"]},"."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["import { DateTime } from './attribute-types/DateTime';\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  tags: {\n    'tag-name': {\n      render: 'YourComponent',\n      attributes: {\n        created: {\n          type: DateTime,\n          required: true\n        }\n      }\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Pass variables to attributes"]}]}]}]},"frontmatter":{"title":"Attributes","description":"Attributes are used to pass data to tags in Markdoc."},"file":{"path":"/docs/attributes.md"}}},"__N_SSG":true},"page":"/docs/attributes","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/variables.html ---

Markdoc | Variables.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.side-by-side.jsx-21d039f5c746a0fb{width:100%;padding:0;margin-top:1rem;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.column.jsx-21d039f5c746a0fb{overflow:auto;padding-top:var(--default-vertical-spacing)}.left.jsx-21d039f5c746a0fb{padding-right:3rem;border-right:1px solid var(--toc-border)}.right.jsx-21d039f5c746a0fb{padding-left:3rem}.side-by-side.jsx-21d039f5c746a0fb .heading{margin:0}@media screen and (max-width:1e3px){.side-by-side.jsx-21d039f5c746a0fb{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.column.jsx-21d039f5c746a0fb{overflow:initial}.left.jsx-21d039f5c746a0fb{padding:0;border:none}.right.jsx-21d039f5c746a0fb{padding-top:1rem;padding-left:0rem}}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsVariablesVariables let you customize your Markdoc documents at runtime.Here I am rendering a custom {% $variable %}
CopyAs server-side data changes, you can present it in real time by re-rendering the page. Each re-render uses the variable's latest value.(Some templating languages let variables change during rendering, letting you use them in things like for loops. Markdoc doesn't do this, but it does offer alternative ways to do the same job.)Global variablesYou can pass variables in several ways. The simplest is through the variables field on your config object.const doc = `
{% if $flags.my_feature_flag %}
Username: {% $user.name %}
{% /if %}
`;

/** @type {import('@markdoc/markdoc').Config} */
const config = {
  variables: {
    flags: {
      my_feature_flag: true
    },
    user: {
      name: 'Dr. Mark'
    }
  }
};

const ast = Markdoc.parse(doc);
const content = Markdoc.transform(ast, config);
CopyVariables in partialsYou can also pass variables to a partial. To do this, set the variables attribute:{% partial variables={sdk: "Ruby", version: 3} file="header.md" /%}
CopyAccess the value within your partial file the same way you would a regular variable:SDK: {% $sdk %}
Version: {% $version %}
CopyAlternativesVariables are immutable during page rendering. This keeps rendering behavior consistent and fast. But it means there are some tasks that you should use an alternative for:To do calculations without side effects, use custom or built-in Markdoc functions.To update a value during rendering, use a custom Markdoc transform function. For instance, run a for loop or accumulate entries for a table of contents.CaveatsMarkdoc doesn't support passing variables to certain nodes, such as the href of a link Node. Instead, pass your variable to the href attribute of a custom link Tag.Incorrect[Link]({% $variable %})
CopyCorrect{% link href=$variable %}Link{% /link %}
CopyNext stepsValidate your contentRender as HTML or ReactCMD + J / EscGlobal variablesVariables in partialsAlternativesCaveatsThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Variables\ndescription: Variables let you transform and customize your document at runtime.\n---\n\n# {% $markdoc.frontmatter.title %}\n\nVariables let you customize your Markdoc documents at runtime.\n\n{% example %}\n\n```\nHere I am rendering a custom {% $variable %}\n```\n\n{% /example %}\n\nAs server-side data changes, you can present it in real time by re-rendering the page. Each re-render uses the variable's latest value.\n\n(Some templating languages let variables change _during_ rendering, letting you use them in things like for loops. Markdoc doesn't do this, but it does offer [alternative ways](#alternatives) to do the same job.)\n\n## Global variables\n\nYou can pass variables in several ways. The simplest is through the `variables` field on your [config](/docs/config) object.\n\n\n{% example %}\n\n```js\nconst doc = `\n{% if $flags.my_feature_flag %}\nUsername: {% $user.name %}\n{% /if %}\n`;\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  variables: {\n    flags: {\n      my_feature_flag: true\n    },\n    user: {\n      name: 'Dr. Mark'\n    }\n  }\n};\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast, config);\n```\n\n{% /example %}\n\n## Variables in partials\n\nYou can also pass variables to a [partial](/docs/tags#partial). To do this, set the `variables` attribute:\n\n{% example %}\n\n```\n{% partial variables={sdk: \"Ruby\", version: 3} file=\"header.md\" /%}\n```\n\n{% /example %}\n\nAccess the value within your partial file the same way you would a regular variable:\n\n{% example %}\n\n```\nSDK: {% $sdk %}\nVersion: {% $version %}\n```\n\n{% /example %}\n\n## Alternatives\n\nVariables are immutable during page rendering. This keeps rendering behavior consistent and fast. But it means there are some tasks that you should use an alternative for:\n\n* To do calculations without side effects, use [custom or built-in Markdoc functions](/docs/functions).\n* To update a value during rendering, use a custom Markdoc transform function. For instance, [run a for loop](/docs/examples#loops) or [accumulate entries for a table of contents](/docs/examples#table-of-contents).\n\n\n\n## Caveats\n\nMarkdoc doesn't support passing variables to certain [nodes](/docs/nodes), such as the `href` of a `link` Node. Instead, pass your variable to the `href` [attribute](/docs/attributes) of a custom `link` [Tag](/docs/tags).\n\n{% sideBySide %}\n\n{% item %}\n\n#### Incorrect\n\n{% example %}\n\n```\n[Link]({% $variable %})\n```\n\n{% /example %}\n\n{% /item %}\n\n{% item %}\n\n#### Correct\n\n{% example %}\n\n```\n{% link href=$variable %}Link{% /link %}\n```\n\n{% /example %}\n\n{% /item %}\n\n{% /sideBySide %}\n\n## Next steps\n\n- [Validate your content](/docs/validation)\n- [Render as HTML or React](/docs/render)\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"variables"},"children":["Variables"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Variables let you customize your Markdoc documents at runtime."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["Here I am rendering a custom {% $variable %}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["As server-side data changes, you can present it in real time by re-rendering the page. Each re-render uses the variable's latest value."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["(Some templating languages let variables change ",{"$$mdtype":"Tag","name":"em","attributes":{},"children":["during"]}," rendering, letting you use them in things like for loops. Markdoc doesn't do this, but it does offer ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"#alternatives","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["alternative ways"]}," to do the same job.)"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"global-variables"},"children":["Global variables"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can pass variables in several ways. The simplest is through the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["variables"]}," field on your ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/config","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["config"]}," object."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["const doc = `\n{% if $flags.my_feature_flag %}\nUsername: {% $user.name %}\n{% /if %}\n`;\n\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  variables: {\n    flags: {\n      my_feature_flag: true\n    },\n    user: {\n      name: 'Dr. Mark'\n    }\n  }\n};\n\nconst ast = Markdoc.parse(doc);\nconst content = Markdoc.transform(ast, config);\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"variables-in-partials"},"children":["Variables in partials"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can also pass variables to a ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags#partial","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["partial"]},". To do this, set the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["variables"]}," attribute:"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% partial variables={sdk: \"Ruby\", version: 3} file=\"header.md\" /%}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Access the value within your partial file the same way you would a regular variable:"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["SDK: {% $sdk %}\nVersion: {% $version %}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"alternatives"},"children":["Alternatives"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Variables are immutable during page rendering. This keeps rendering behavior consistent and fast. But it means there are some tasks that you should use an alternative for:"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["To do calculations without side effects, use ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/functions","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["custom or built-in Markdoc functions"]},"."]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["To update a value during rendering, use a custom Markdoc transform function. For instance, ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/examples#loops","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["run a for loop"]}," or ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/examples#table-of-contents","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["accumulate entries for a table of contents"]},"."]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"caveats"},"children":["Caveats"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc doesn't support passing variables to certain ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["nodes"]},", such as the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["href"]}," of a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["link"]}," Node. Instead, pass your variable to the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["href"]}," ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["attribute"]}," of a custom ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["link"]}," ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Tag"]},"."]},{"$$mdtype":"Tag","name":"Sidebyside","attributes":{},"children":[{"$$mdtype":"Tag","name":"Item","attributes":{},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"incorrect"},"children":["Incorrect"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["[Link]({% $variable %})\n"]}]},{"$$mdtype":"Tag","name":"Item","attributes":{},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"correct"},"children":["Correct"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% link href=$variable %}Link{% /link %}\n"]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"next-steps"},"children":["Next steps"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/validation","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Validate your content"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Render as HTML or React"]}]}]}]},"frontmatter":{"title":"Variables","description":"Variables let you transform and customize your document at runtime."},"file":{"path":"/docs/variables.md"}}},"__N_SSG":true},"page":"/docs/variables","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/partials.html ---

Markdoc | Partials.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsPartialsMarkdoc uses partials to reuse content across documents. A separate Markdoc file stores the content, and it's referenced from within the partial tag.Here's an example of including the header.md file as a partial.{% partial file="header.md" /%}
CopyRegistering partialsYou define partials by creating a mapping from the file name to an abstract syntax tree (AST) node in your config object. The default partial tag looks at this config to include the right content./** @type {import('@markdoc/markdoc').Config} */
const config = {
  partials: {
    'header.md': Markdoc.parse(`# My header`)
  }
};

const doc = `
{% partial file="header.md" /%}
`;

const ast = Markdoc.parse(doc);

const content = Markdoc.transform(ast, config);
CopyIf you want the partial tag to behave differently, you can override it in Config.tags.Passing variablesPartials are like any other tags, so you can pass variables as attributes to them such as:{% partial file="header.md" variables={name: "My header name"} /%}
Copyand access the variables as you would in a regular Markdoc document:{% $name %}
CopyCMD + J / EscThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Partials\ndescription:\n---\n\n# {% $markdoc.frontmatter.title %}\n\nMarkdoc uses partials to reuse content across documents. A separate Markdoc file stores the content, and it's referenced from within the partial tag.\n\nHere's an example of including the `header.md` file as a partial.\n{% example %}\n\n```\n{% partial file=\"header.md\" /%}\n```\n\n{% /example %}\n\n#### Registering partials\n\nYou define partials by creating a mapping from the file name to an abstract syntax tree (AST) node in your [`config` object](/docs/config). The default `partial` [tag](/docs/tags) looks at this config to include the right content.\n\n{% example %}\n\n```js\n/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  partials: {\n    'header.md': Markdoc.parse(`# My header`)\n  }\n};\n\nconst doc = `\n{% partial file=\"header.md\" /%}\n`;\n\nconst ast = Markdoc.parse(doc);\n\nconst content = Markdoc.transform(ast, config);\n```\n\n{% /example %}\n\nIf you want the `partial` tag to behave differently, you can override it in `Config.tags`.\n\n#### Passing variables\n\nPartials are like any other tags, so you can pass [variables](/docs/variables) as [attributes](/docs/attributes) to them such as:\n\n{% example %}\n\n```\n{% partial file=\"header.md\" variables={name: \"My header name\"} /%}\n```\n\n{% /example %}\n\nand access the variables as you would in a regular Markdoc document:\n\n{% example %}\n\n```\n{% $name %}\n```\n\n{% /example %}\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"partials"},"children":["Partials"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc uses partials to reuse content across documents. A separate Markdoc file stores the content, and it's referenced from within the partial tag."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Here's an example of including the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["header.md"]}," file as a partial."]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% partial file=\"header.md\" /%}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"registering-partials"},"children":["Registering partials"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You define partials by creating a mapping from the file name to an abstract syntax tree (AST) node in your ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/config","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["config"]}," object"]},". The default ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["partial"]}," ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/tags","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["tag"]}," looks at this config to include the right content."]},{"$$mdtype":"Tag","name":"Example","attributes":{"language":"js"},"children":["/** @type {import('@markdoc/markdoc').Config} */\nconst config = {\n  partials: {\n    'header.md': Markdoc.parse(`# My header`)\n  }\n};\n\nconst doc = `\n{% partial file=\"header.md\" /%}\n`;\n\nconst ast = Markdoc.parse(doc);\n\nconst content = Markdoc.transform(ast, config);\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you want the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["partial"]}," tag to behave differently, you can override it in ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Config.tags"]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":"passing-variables"},"children":["Passing variables"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Partials are like any other tags, so you can pass ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/variables","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["variables"]}," as ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/attributes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["attributes"]}," to them such as:"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% partial file=\"header.md\" variables={name: \"My header name\"} /%}\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["and access the variables as you would in a regular Markdoc document:"]},{"$$mdtype":"Tag","name":"Example","attributes":{},"children":["{% $name %}\n"]}]},"frontmatter":{"title":"Partials","description":null},"file":{"path":"/docs/partials.md"}}},"__N_SSG":true},"page":"/docs/partials","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/examples/html.html ---

Markdoc | Using Markdoc with HTML and Web Components.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsUsing Markdoc with HTML and Web ComponentsMarkdoc supports rendering Markdoc syntax into HTML with the HTML renderer.To get started with the HTML renderer, check out this example repo for how to use Markdoc with express and Web Components. You can use the HTML renderer without Web Components to transform and render HTML, but we recommend using Web Components as a way to organize and encapsulate functionality for custom Markdoc components.SetupThis guide assumes that you have an Express app installed. If you're starting from scratch, follow these instructions to install Express and create an app.Set up a Markdoc schema.schema/
├── Callout.markdoc.js
└── heading.markdoc.js
Copy// [schema/Callout.markdoc.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/schema/Callout.markdoc.js)

module.exports = {
  render: 'markdoc-callout',
  children: ['paragraph'],
  attributes: {
    type: {
      type: String,
      default: 'note',
      matches: ['check', 'error', 'note', 'warning']
    }
  }
};
Copy// [schema/heading.markdoc.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/schema/heading.markdoc.js)

const { nodes } = require('@markdoc/markdoc');

function generateID(children, attributes) {
  if (attributes.id && typeof attributes.id === 'string') {
    return attributes.id;
  }
  return children
    .filter((child) => typeof child === 'string')
    .join(' ')
    .replace(/[?]/g, '')
    .replace(/\s+/g, '-')
    .toLowerCase();
}

module.exports = {
  ...nodes.heading,
  transform(node, config) {
    const base = nodes.heading.transform(node, config);
    base.attributes.id = generateID(base.children, base.attributes);
    return base;
  }
};
CopyDefine a component for any custom tag. Since heading is a core Markdown node, Markdoc already knows how to render it using the CommonMark spec. Callout needs a component since it's a custom tag. We used lit in our example to define a Web Component for the markdoc-callout element.// [src/Callout.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/src/Callout.js)

import { html, css, LitElement } from 'lit';

export class MarkdocCallout extends LitElement {
  static styles = css`
    .note {
      background-color: #8792a2;
    }
    .caution {
      background-color: #d97917;
    }
    .check {
      background-color: #000000;
    }
    .warning {
      background-color: #ed5f74;
    }
  `;

  static properties = {
    type: { type: String }
  };

  constructor() {
    super();
    this.type = 'note';
  }

  render() {
    return html`<p class="${this.type}"><slot></slot></p>`;
  }
}
CopyParse your Markdoc documents on the server to create a map of your routes and Markdoc content. We call this a "content manifest" which is used during a request to return the right Markdoc content for the route.// [...](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/createContentManifest.js#L19-L20)
const rawText = fs.readFileSync(file, 'utf-8');
const ast = Markdoc.parse(rawText);
CopyCall Markdoc.transform on the server with a config of your custom tags, nodes, and any variables you want your Markdoc content to access. Then, use the HTML Markdoc renderer (Markdoc.renderers.html) to render the transformed content into the HTML to display to your user.// [server.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/server.js#L47)

const express = require('express');

const app = express();

const callout = require('./schema/callout.markdoc');
const heading = require('./schema/heading.markdoc');

// [...](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/server.js#L8-L14)

app.get('/markdoc', (req, res) => {
  const ast = contentManifest[req.query.path];

  const config = {
    tags: {
      callout
    },
    nodes: {
      heading
    },
    variables: {}
  };

  const content = Markdoc.transform(ast, config);
  const rendered = Markdoc.renderers.html(content) || '';
  const html = TEMPLATE.replace(/{{ CONTENT }}/, rendered);
  return res.send(html);
});

app.listen(4242, () => {
  console.log(`Example app listening on port ${4242}`);
});
CopyMake sure to include any bundled scripts (in this case main.js) with your custom components on the client. This example uses a simple HTML template to inject the Markdoc content, but you can use other templating engines (for example: Pug, Handlebars, and so on) to manage this content injection for you.<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="Web site created using Markdoc" />
    <title>Markdoc: Create HTML Example</title>
  </head>
  <body>
    {{ CONTENT }}
    <script src="./main.js"></script>
  </body>
</html>
CopyStart the demo app.npm run build
Copyandnpm run start
CopyCMD + J / EscThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Using Markdoc with HTML and Web Components\n---\n\n# {% $markdoc.frontmatter.title %}\n\nMarkdoc supports [rendering Markdoc syntax into HTML](/docs/render#html) with the HTML renderer.\n\nTo get started with the HTML renderer, check out [this example repo](https://github.com/markdoc/docs/tree/main/examples/html-nodejs) for how to use Markdoc with [`express`](https://expressjs.com/) and [Web Components](https://developer.mozilla.org/en-US/docs/Web/Web_Components). You can use the HTML renderer without Web Components to transform and render HTML, but we recommend using Web Components as a way to organize and encapsulate functionality for custom Markdoc components.\n\n## Setup\n\nThis guide assumes that you have an `Express` app installed. If you're starting from scratch, follow [these instructions to install Express](https://expressjs.com/en/starter/installing.html) and create an app.\n\n1. Set up a Markdoc schema.\n\n   ```shell\n   schema/\n   ├── Callout.markdoc.js\n   └── heading.markdoc.js\n   ```\n\n   ```js\n   // [schema/Callout.markdoc.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/schema/Callout.markdoc.js)\n\n   module.exports = {\n     render: 'markdoc-callout',\n     children: ['paragraph'],\n     attributes: {\n       type: {\n         type: String,\n         default: 'note',\n         matches: ['check', 'error', 'note', 'warning']\n       }\n     }\n   };\n   ```\n\n   ```js\n   // [schema/heading.markdoc.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/schema/heading.markdoc.js)\n\n   const { nodes } = require('@markdoc/markdoc');\n\n   function generateID(children, attributes) {\n     if (attributes.id \u0026\u0026 typeof attributes.id === 'string') {\n       return attributes.id;\n     }\n     return children\n       .filter((child) =\u003e typeof child === 'string')\n       .join(' ')\n       .replace(/[?]/g, '')\n       .replace(/\\s+/g, '-')\n       .toLowerCase();\n   }\n\n   module.exports = {\n     ...nodes.heading,\n     transform(node, config) {\n       const base = nodes.heading.transform(node, config);\n       base.attributes.id = generateID(base.children, base.attributes);\n       return base;\n     }\n   };\n   ```\n\n2. Define a component for any custom tag. Since `heading` is a core Markdown [node](/docs/nodes), Markdoc already knows how to render it using the CommonMark spec. `Callout` needs a component since it's a custom tag. We used [`lit`](https://lit.dev/docs/) in our example to define a Web Component for the `markdoc-callout` element.\n\n   ```js\n   // [src/Callout.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/src/Callout.js)\n\n   import { html, css, LitElement } from 'lit';\n\n   export class MarkdocCallout extends LitElement {\n     static styles = css`\n       .note {\n         background-color: #8792a2;\n       }\n       .caution {\n         background-color: #d97917;\n       }\n       .check {\n         background-color: #000000;\n       }\n       .warning {\n         background-color: #ed5f74;\n       }\n     `;\n\n     static properties = {\n       type: { type: String }\n     };\n\n     constructor() {\n       super();\n       this.type = 'note';\n     }\n\n     render() {\n       return html`\u003cp class=\"${this.type}\"\u003e\u003cslot\u003e\u003c/slot\u003e\u003c/p\u003e`;\n     }\n   }\n   ```\n\n3. Parse your Markdoc documents on the server to create a map of your routes and Markdoc content. We call this a \"content manifest\" which is used during a request to return the right Markdoc content for the route.\n\n   ```js\n   // [...](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/createContentManifest.js#L19-L20)\n   const rawText = fs.readFileSync(file, 'utf-8');\n   const ast = Markdoc.parse(rawText);\n   ```\n\n4. Call `Markdoc.transform` on the server with a config of your custom tags, nodes, and any variables you want your Markdoc content to access. Then, use the HTML Markdoc renderer (`Markdoc.renderers.html`) to render the transformed content into the HTML to display to your user.\n\n   ```js\n   // [server.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/server.js#L47)\n\n   const express = require('express');\n\n   const app = express();\n\n   const callout = require('./schema/callout.markdoc');\n   const heading = require('./schema/heading.markdoc');\n\n   // [...](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/server.js#L8-L14)\n\n   app.get('/markdoc', (req, res) =\u003e {\n     const ast = contentManifest[req.query.path];\n\n     const config = {\n       tags: {\n         callout\n       },\n       nodes: {\n         heading\n       },\n       variables: {}\n     };\n\n     const content = Markdoc.transform(ast, config);\n     const rendered = Markdoc.renderers.html(content) || '';\n     const html = TEMPLATE.replace(/{{ CONTENT }}/, rendered);\n     return res.send(html);\n   });\n\n   app.listen(4242, () =\u003e {\n     console.log(`Example app listening on port ${4242}`);\n   });\n   ```\n\n5. Make sure to include any bundled scripts (in this case `main.js`) with your custom components on the client. This example uses a simple HTML template to inject the Markdoc content, but you can use other templating engines (for example: Pug, Handlebars, and so on) to manage this content injection for you.\n\n   ```html\n   \u003c!DOCTYPE html\u003e\n   \u003chtml lang=\"en\"\u003e\n     \u003chead\u003e\n       \u003cmeta charset=\"utf-8\" /\u003e\n       \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /\u003e\n       \u003cmeta name=\"description\" content=\"Web site created using Markdoc\" /\u003e\n       \u003ctitle\u003eMarkdoc: Create HTML Example\u003c/title\u003e\n     \u003c/head\u003e\n     \u003cbody\u003e\n       {{ CONTENT }}\n       \u003cscript src=\"./main.js\"\u003e\u003c/script\u003e\n     \u003c/body\u003e\n   \u003c/html\u003e\n   ```\n\n6. Start the demo app.\n   ```shell\n   npm run build\n   ```\n   and\n   ```shell\n   npm run start\n   ```\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"using-markdoc-with-html-and-web-components"},"children":["Using Markdoc with HTML and Web Components"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc supports ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render#html","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["rendering Markdoc syntax into HTML"]}," with the HTML renderer."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To get started with the HTML renderer, check out ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/docs/tree/main/examples/html-nodejs","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["this example repo"]}," for how to use Markdoc with ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://expressjs.com/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["express"]}]}," and ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://developer.mozilla.org/en-US/docs/Web/Web_Components","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["Web Components"]},". You can use the HTML renderer without Web Components to transform and render HTML, but we recommend using Web Components as a way to organize and encapsulate functionality for custom Markdoc components."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"setup"},"children":["Setup"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This guide assumes that you have an ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Express"]}," app installed. If you're starting from scratch, follow ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://expressjs.com/en/starter/installing.html","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["these instructions to install Express"]}," and create an app."]},{"$$mdtype":"Tag","name":"ol","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Set up a Markdoc schema."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"shell"},"children":["schema/\n├── Callout.markdoc.js\n└── heading.markdoc.js\n"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [schema/Callout.markdoc.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/schema/Callout.markdoc.js)\n\nmodule.exports = {\n  render: 'markdoc-callout',\n  children: ['paragraph'],\n  attributes: {\n    type: {\n      type: String,\n      default: 'note',\n      matches: ['check', 'error', 'note', 'warning']\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [schema/heading.markdoc.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/schema/heading.markdoc.js)\n\nconst { nodes } = require('@markdoc/markdoc');\n\nfunction generateID(children, attributes) {\n  if (attributes.id \u0026\u0026 typeof attributes.id === 'string') {\n    return attributes.id;\n  }\n  return children\n    .filter((child) =\u003e typeof child === 'string')\n    .join(' ')\n    .replace(/[?]/g, '')\n    .replace(/\\s+/g, '-')\n    .toLowerCase();\n}\n\nmodule.exports = {\n  ...nodes.heading,\n  transform(node, config) {\n    const base = nodes.heading.transform(node, config);\n    base.attributes.id = generateID(base.children, base.attributes);\n    return base;\n  }\n};\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Define a component for any custom tag. Since ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["heading"]}," is a core Markdown ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/nodes","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["node"]},", Markdoc already knows how to render it using the CommonMark spec. ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Callout"]}," needs a component since it's a custom tag. We used ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://lit.dev/docs/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["lit"]}]}," in our example to define a Web Component for the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["markdoc-callout"]}," element."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [src/Callout.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/src/Callout.js)\n\nimport { html, css, LitElement } from 'lit';\n\nexport class MarkdocCallout extends LitElement {\n  static styles = css`\n    .note {\n      background-color: #8792a2;\n    }\n    .caution {\n      background-color: #d97917;\n    }\n    .check {\n      background-color: #000000;\n    }\n    .warning {\n      background-color: #ed5f74;\n    }\n  `;\n\n  static properties = {\n    type: { type: String }\n  };\n\n  constructor() {\n    super();\n    this.type = 'note';\n  }\n\n  render() {\n    return html`\u003cp class=\"${this.type}\"\u003e\u003cslot\u003e\u003c/slot\u003e\u003c/p\u003e`;\n  }\n}\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Parse your Markdoc documents on the server to create a map of your routes and Markdoc content. We call this a \"content manifest\" which is used during a request to return the right Markdoc content for the route."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [...](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/createContentManifest.js#L19-L20)\nconst rawText = fs.readFileSync(file, 'utf-8');\nconst ast = Markdoc.parse(rawText);\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Call ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Markdoc.transform"]}," on the server with a config of your custom tags, nodes, and any variables you want your Markdoc content to access. Then, use the HTML Markdoc renderer (",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Markdoc.renderers.html"]},") to render the transformed content into the HTML to display to your user."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [server.js](https://github.com/markdoc/docs/blob/main/examples/html-nodejs/server.js#L47)\n\nconst express = require('express');\n\nconst app = express();\n\nconst callout = require('./schema/callout.markdoc');\nconst heading = require('./schema/heading.markdoc');\n\n// [...](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/server.js#L8-L14)\n\napp.get('/markdoc', (req, res) =\u003e {\n  const ast = contentManifest[req.query.path];\n\n  const config = {\n    tags: {\n      callout\n    },\n    nodes: {\n      heading\n    },\n    variables: {}\n  };\n\n  const content = Markdoc.transform(ast, config);\n  const rendered = Markdoc.renderers.html(content) || '';\n  const html = TEMPLATE.replace(/{{ CONTENT }}/, rendered);\n  return res.send(html);\n});\n\napp.listen(4242, () =\u003e {\n  console.log(`Example app listening on port ${4242}`);\n});\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Make sure to include any bundled scripts (in this case ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["main.js"]},") with your custom components on the client. This example uses a simple HTML template to inject the Markdoc content, but you can use other templating engines (for example: Pug, Handlebars, and so on) to manage this content injection for you."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"html"},"children":["\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"utf-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /\u003e\n    \u003cmeta name=\"description\" content=\"Web site created using Markdoc\" /\u003e\n    \u003ctitle\u003eMarkdoc: Create HTML Example\u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    {{ CONTENT }}\n    \u003cscript src=\"./main.js\"\u003e\u003c/script\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Start the demo app."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"shell"},"children":["npm run build\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["and"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"shell"},"children":["npm run start\n"]}]}]}]},"frontmatter":{"title":"Using Markdoc with HTML and Web Components"},"file":{"path":"/docs/examples/html.md"}}},"__N_SSG":true},"page":"/docs/examples/html","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}

--- docs/examples/react.html ---

Markdoc | Using Markdoc with React.nav-bar.jsx-756af7f39ec730b3{top:0;position:fixed;z-index:100;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;background:var(--light)}nav.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;width:100%;margin:0 auto;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid var(--dark);padding:1rem 2rem 1.1rem;font-size:15px;font-family:var(--sans)}nav.jsx-756af7f39ec730b3 a{text-decoration:none}nav.jsx-756af7f39ec730b3 .DocSearch-Button{background:var(--code-background);height:32px;-webkit-border-radius:32px;-moz-border-radius:32px;border-radius:32px}nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#e8eef3}.dark nav.jsx-756af7f39ec730b3 .DocSearch-Button:hover{background:#424248}nav.jsx-756af7f39ec730b3 .DocSearch-Search-Icon{color:var(--dark);width:16px}nav.jsx-756af7f39ec730b3 .DocSearch-Button-Placeholder,nav.jsx-756af7f39ec730b3 .DocSearch-Button-Keys{display:none}section.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.3rem;padding:0}button.jsx-756af7f39ec730b3{display:none;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:48px;height:32px;background:var(--gray-light);-webkit-border-radius:30px;-moz-border-radius:30px;border-radius:30px}.top-row.jsx-756af7f39ec730b3{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}@media screen and (max-width:600px){.nav-bar.jsx-756af7f39ec730b3{border-bottom:1px solid var(--dark)}nav.jsx-756af7f39ec730b3{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;border-bottom:none}section.jsx-756af7f39ec730b3{display:none;font-size:15px}section.active.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}button.jsx-756af7f39ec730b3{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}}nav.jsx-de18637d5a56e970{position:-webkit-sticky;position:sticky;top:var(--nav-height);height:-webkit-calc(100vh - var(--nav-height));height:-moz-calc(100vh - var(--nav-height));height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;overflow-y:auto;padding:2rem 0 2rem 2rem}h3.jsx-de18637d5a56e970{font-weight:500;margin:.5rem 0 0;padding-bottom:.5rem}ul.jsx-de18637d5a56e970{margin:0;padding:0}li.jsx-de18637d5a56e970{list-style-type:none;margin:0 0 .7rem .7rem;font-size:14px;font-weight:400}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970{text-decoration:none}li.jsx-de18637d5a56e970 a.jsx-de18637d5a56e970:hover,li.active.jsx-de18637d5a56e970>a.jsx-de18637d5a56e970{text-decoration:underline}@media screen and (max-width:600px){nav.jsx-de18637d5a56e970{display:none}}a.jsx-bb9a15bc0967b3eb{text-decoration:none}a.jsx-bb9a15bc0967b3eb:hover{opacity:1}div.jsx-bb9a15bc0967b3eb{position:absolute;top:-webkit-calc(-1*(var(--nav-height) + 44px));top:-moz-calc(-1*(var(--nav-height) + 44px));top:calc(-1*(var(--nav-height) + 44px))}a.jsx-2a84f6446eab3a17{text-decoration:none}a.jsx-2a84f6446eab3a17:hover{opacity:1}a.jsx-2a84f6446eab3a17 .heading::after{opacity:0;color:var(--toc-border);content:"  #";-webkit-transition:opacity 250ms ease;-moz-transition:opacity 250ms ease;-o-transition:opacity 250ms ease;transition:opacity 250ms ease}a.jsx-2a84f6446eab3a17 .heading:hover::after{opacity:1}.icon.jsx-2354840689{display:inline-block;position:relative;font-size:inherit;width:1em;height:1em;min-width:16px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;color:inherit}.icon.jsx-2354840689 svg{z-index:10;position:relative;display:block;fill:currentcolor;stroke:currentcolor;width:100%;height:100%}.code.jsx-67509972{position:relative}.code.jsx-67509972 button.jsx-67509972{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:13px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.code.jsx-2145972688{position:relative}.code.jsx-2145972688 button.jsx-2145972688{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;position:absolute;color:inherit;background:var(--code-background);top:17px;right:11px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border:none;font-size:15px}.container.jsx-3820918484{position:fixed;top:0;left:100vw;z-index:999;width:100vw;height:100vh;-webkit-transition:-webkit-transform 300ms ease;-moz-transition:-moz-transform 300ms ease;-o-transition:-o-transform 300ms ease;transition:-webkit-transform 300ms ease;transition:-moz-transform 300ms ease;transition:-o-transform 300ms ease;transition:transform 300ms ease;-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.click-away.jsx-3820918484{width:45%;height:100%}section.jsx-3820918484{width:55%;height:100%;border-left:1px solid rgba(255,255,255,.22)}section.jsx-3820918484 .CodeMirror,section.jsx-3820918484 .react-codemirror2,kbd.jsx-3820918484{color:white;background:var(--contrast-dark)}button.jsx-3820918484{position:absolute;top:.8rem;right:1rem}kbd.jsx-3820918484{color:var(--white)}@media screen and (max-width:1e3px){section.jsx-3820918484{display:none}.live-edit{display:none}}nav.jsx-9113e17d885b6a77{position:-webkit-sticky;position:sticky;top:-webkit-calc(2.5rem + var(--nav-height));top:-moz-calc(2.5rem + var(--nav-height));top:calc(2.5rem + var(--nav-height));max-height:-webkit-calc(100vh - var(--nav-height));max-height:-moz-calc(100vh - var(--nav-height));max-height:calc(100vh - var(--nav-height));-webkit-box-flex:0;-webkit-flex:0 0 240px;-moz-box-flex:0;-ms-flex:0 0 240px;flex:0 0 240px;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;margin-bottom:1rem;padding:.25rem 0 0;border-left:1px solid var(--toc-border)}ul.jsx-9113e17d885b6a77{margin:0;padding:0}li.jsx-9113e17d885b6a77{list-style-type:none;margin:0 0 1rem 1.5rem;font-size:14px;font-weight:400}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:none}li.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77:hover,li.active.jsx-9113e17d885b6a77 a.jsx-9113e17d885b6a77{text-decoration:underline}li.padded.jsx-9113e17d885b6a77{padding-left:1rem}@media screen and (max-width:1e3px){nav.jsx-9113e17d885b6a77{display:none}}.disclaimer.jsx-bbed09f4a18e595f{color:rgba(24,24,27,.5);padding-left:2rem;font-size:15px;font-weight:400;line-height:27px}.disclaimer.jsx-bbed09f4a18e595f button.jsx-bbed09f4a18e595f{display:inline-block;padding:0;color:inherit;text-decoration:underline;font-weight:regular}body.dark .disclaimer.jsx-bbed09f4a18e595f{color:var(--white)}@media screen and (max-width:1e3px){.disclaimer.jsx-bbed09f4a18e595f{display:none}}button.jsx-a916debf5e95c656{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:8px;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:120px;font-size:15px;line-height:27px;font-weight:400;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;white-space:nowrap}.dark.jsx-a916debf5e95c656{background:var(--contrast-dark);color:var(--white)}.light.jsx-a916debf5e95c656{background:var(--gray-light);color:var(--black)}button.jsx-a916debf5e95c656:active svg{-webkit-animation:rotate 150ms linear forwards;-moz-animation:rotate 150ms linear forwards;-o-animation:rotate 150ms linear forwards;animation:rotate 150ms linear forwards}button.jsx-a916debf5e95c656 .sun{-webkit-animation:sun 400ms ease both;-moz-animation:sun 400ms ease both;-o-animation:sun 400ms ease both;animation:sun 400ms ease both}button.jsx-a916debf5e95c656 .moon{-webkit-animation:moon 400ms ease both;-moz-animation:moon 400ms ease both;-o-animation:moon 400ms ease both;animation:moon 400ms ease both}button.jsx-a916debf5e95c656 circle.ray{-webkit-transform-origin:center;-moz-transform-origin:center;-ms-transform-origin:center;-o-transform-origin:center;transform-origin:center;-webkit-animation:rays 400ms ease both;-moz-animation:rays 400ms ease both;-o-animation:rays 400ms ease both;animation:rays 400ms ease both}@-webkit-keyframes rotate{from{-webkit-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-moz-keyframes rotate{from{-moz-transform:initial;transform:initial}to{-moz-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-o-keyframes rotate{from{-o-transform:initial;transform:initial}to{-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@keyframes rotate{from{-webkit-transform:initial;-moz-transform:initial;-o-transform:initial;transform:initial}to{-webkit-transform:scale(.95)rotate(20deg);-moz-transform:scale(.95)rotate(20deg);-o-transform:scale(.95)rotate(20deg);transform:scale(.95)rotate(20deg)}}@-webkit-keyframes sun{from{-webkit-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);transform:scale(1)}}@-moz-keyframes sun{from{-moz-transform:scale(1.5);transform:scale(1.5)}to{-moz-transform:scale(1);transform:scale(1)}}@-o-keyframes sun{from{-o-transform:scale(1.5);transform:scale(1.5)}to{-o-transform:scale(1);transform:scale(1)}}@keyframes sun{from{-webkit-transform:scale(1.5);-moz-transform:scale(1.5);-o-transform:scale(1.5);transform:scale(1.5)}to{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-webkit-keyframes rays{from{-webkit-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-moz-keyframes rays{from{-moz-transform:rotate(45deg);transform:rotate(45deg)}to{-moz-transform:rotate(0deg);transform:rotate(0deg)}}@-o-keyframes rays{from{-o-transform:rotate(45deg);transform:rotate(45deg)}to{-o-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes rays{from{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}to{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-moz-keyframes moon{from{-moz-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-moz-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@-o-keyframes moon{from{-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@keyframes moon{from{-webkit-transform:scale(.6)rotate(90deg);-moz-transform:scale(.6)rotate(90deg);-o-transform:scale(.6)rotate(90deg);transform:scale(.6)rotate(90deg)}to{-webkit-transform:scale(1)rotate(0deg);-moz-transform:scale(1)rotate(0deg);-o-transform:scale(1)rotate(0deg);transform:scale(1)rotate(0deg)}}@media screen and (max-width:600px){button.jsx-a916debf5e95c656{width:130px}}.gap{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1.5rem}footer.jsx-fedc8df44ce807b5{position:relative;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;z-index:100;width:100%;color:var(--dark);padding:1rem 0}footer.desktop.jsx-fedc8df44ce807b5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}footer.mobile.jsx-fedc8df44ce807b5{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.right.jsx-fedc8df44ce807b5{margin-left:auto}@media screen and (max-width:600px){footer.mobile.jsx-fedc8df44ce807b5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex}footer.desktop.jsx-fedc8df44ce807b5{display:none}}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Regular.otf")format("opentype")}@font-face{font-family:"GT America Mono";font-style:normal;font-weight:500;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/GT-America-Mono-Medium.otf")format("opentype")}@font-face{font-family:"Tiempos";font-style:normal;src:url("https://b.stripecdn.com/markdoc-srv/assets/fonts/tiempos-headline-light.woff2");font-display:block}.page{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-top:var(--nav-height);min-height:100vh;max-width:100vw}.dark .page{border-bottom-color:var(--black-light)}.skip-nav{border:0;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;text-decoration:none}.skip-nav:focus{padding:1rem;position:fixed;top:10px;left:10px;background:var(--light);z-index:1000;width:auto;height:auto;clip:auto}main{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;min-width:0}main article{padding: 2rem 1.5rem 3rem;
          }.footer-bar{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;padding:0;border-top:1px solid var(--gray-medium)}.footer-bar footer{margin:0 auto;max-width:calc(100% - 4rem)}.page--landing .footer-bar{background:var(--gray-light)}.dark .page--landing .footer-bar{background:var(--black)}.page--landing .footer-bar .theme-toggle button.light{background:var(--white)}.page--landing .section hr{border:none;margin:6.5rem 0;height:2px;background-image:-webkit-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-moz-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:-o-linear-gradient(left,var(--dark)33%,rgba(255,255,255,0)0%);background-image:linear-gradient(to right,var(--dark)33%,rgba(255,255,255,0)0%);background-position:bottom;-webkit-background-size:6px 2px;-moz-background-size:6px 2px;-o-background-size:6px 2px;background-size:6px 2px;background-repeat:repeat-x}.page--landing .nav-bar nav{border-bottom:none}.page--landing .hero{border-top:1px solid var(--dark);margin:0 auto;max-width:var(--landing-page-max-width)}.page--landing p{letter-spacing:.3px}.page--landing .get-started p,.page--landing blockquote p,.page--landing table td p{font-size:var(--font-size-4);line-height:var(--line-height-4);font-weight:400}.page--landing blockquote{max-width:520px}.page--landing .hero{padding:4rem 0 6rem}.page--landing .get-started{background:var(--theme);padding:115px 0 120px}.page--landing .get-started .left ::-moz-selection{background:#ffe279!important}.page--landing .get-started .left ::selection{background:#ffe279!important}.page--landing .try{padding-top:0;padding-bottom:65px}.page--landing .try span.cm-keyword,.page--landing .try span.cm-tag,.page--landing .try span.cm-string{color:inherit}.page--landing .try span.cm-link,.page--landing .try span.cm-url{color:var(--yellow)}.page--landing .value-props{padding-top:0px}.page--landing .by-stripe{padding-top:110px}.page--landing .sandbox{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.page--landing .sandbox .preview p{letter-spacing:initial}.dark .page--landing .get-started{background:var(--black-medium)}.page--landing .get-started section .primary{padding:1rem 0 0}.page--landing .get-started section .side-by-side .left{padding-bottom:1rem}.page--landing pre[class*="language-"]{border:none;background:var(--black)!important;padding:25px}.page--landing .code:first-of-type pre[class*="language-"]{padding:20px 25px}.page--landing .nav-bar nav{max-width:var(--landing-page-max-width);padding:1rem 0 1.1rem}.page--landing .side-by-side{margin:0}.page--landing .side-by-side .column{border-right:none;padding-top:0px;overflow:initial}.page--landing .code button{display:none}.page--landing table{margin:0;table-layout:fixed}.page--landing table tr{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:56px}.page--landing table td{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;-webkit-box-flex:1;-webkit-flex:1 0 0;-moz-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;border-width:0px;gap:4px}.page--landing table h3{font-size:28px;line-height:38px;margin:0;letter-spacing:0}@media screen and (max-width:1e3px){.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:52px}.page--landing table td{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:36px}.page--landing table h3{font-size:24px;line-height:33px}.page--landing .hero{padding:3rem 0 5.3rem}.page--landing .get-started{padding:65px 0 85px}.page--landing .try{padding:0}.page--landing .try section{max-width:unset}.page--landing .value-props{padding-top:4.5rem}.page--landing .by-stripe{padding-top:5.3125rem}}@media screen and (max-width:600px){.page--landing .section hr{margin:3rem 0}.page--landing table tr{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.page--landing table td{display:block;gap:8px}.page--landing .hero{padding:2rem 0 0;border-top:none}.page--landing .get-started{padding:60px 0 60px}.page--landing .value-props{padding-top:0}.page--landing .by-stripe{padding-top:3.75rem}.footer-bar{padding:2.5rem 0}}Skip to contentDocsGitHubCommunityTwitterTrySearchGet startedWhat is Markdoc?InstallationFAQTry it outCore conceptsSyntax and schemaNodesTagsAttributesVariablesFunctionsRenderingConfig objectsValidationIntegration guidesCommon examplesUsing with HTMLUsing with Next.jsUsing with ReactAdvanced conceptsFrontmatterPartialsUsing Markdoc with ReactMarkdoc supports rendering Markdoc syntax with React out-of-the-box.To get started with React, check out this example repo for how to use Markdoc with create-react-app and express.SetupFollow these steps to build a Markdoc app with create-react-app and express.Follow the create-react-app getting started steps to create your initial appSet up a Markdoc schemaschema/
├── Callout.markdoc.js
└── heading.markdoc.js
Copy// [schema/Callout.markdoc.js](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/schema/Callout.markdoc.js#L1-L18)

module.exports = {
  render: 'Callout',
  children: ['paragraph', 'tag', 'list'],
  attributes: {
    type: {
      type: String,
      default: 'note',
      matches: ['check', 'error', 'note', 'warning']
    }
  }
};
Copy// [schema/heading.markdoc.js](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/schema/heading.markdoc.js#L1-L22)

const { nodes } = require('@markdoc/markdoc');

function generateID(children, attributes) {
  if (attributes.id && typeof attributes.id === 'string') {
    return attributes.id;
  }
  return children
    .filter((child) => typeof child === 'string')
    .join(' ')
    .replace(/[?]/g, '')
    .replace(/\s+/g, '-')
    .toLowerCase();
}

module.exports = {
  ...nodes.heading,
  transform(node, config) {
    const base = nodes.heading.transform(node, config);
    base.attributes.id = generateID(base.children, base.attributes);
    return base;
  }
};
CopyParse your Markdoc documents on the server// [...](https://github.com/markdoc/docs/blob/main/examples/react-nodejs/createContentManifest.js#L13)
const rawText = fs.readFileSync(file, 'utf-8');
const ast = Markdoc.parse(rawText);
CopyCall Markdoc.transform on the server// [server.js](https://github.com/markdoc/docs/blob/main/examples/react-nodejs/server.js)

const express = require('express');

const app = express();

const callout = require('./schema/callout.markdoc');
const heading = require('./schema/heading.markdoc');

// [...](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/server.js#L8-L14)

app.get('/markdoc', (req, res) => {
  const ast = contentManifest[req.query.path];

  const config = {
    tags: {
      callout
    },
    nodes: {
      heading
    },
    variables: {}
  };

  const content = Markdoc.transform(ast, config);

  return res.json(content);
});

app.listen(4242, () => {
  console.log(`Example app listening on port ${4242}`);
});
CopyCall Markdoc.renderers.react on the client// src/App.js

import React from 'react';
import Markdoc from '@markdoc/markdoc';

import { Callout } from './Callout';

export default function App() {
  const [content, setContent] = React.useState(null);

  React.useEffect(() => {
    (async () => {
      const response = await fetch(
        `/markdoc?` +
          new URLSearchParams({ path: window.location.pathname }),
        { headers: { Accept: 'application/json' } }
      );

      if (response.status === 404) {
        setContent('404');
        return;
      }

      const content = await response.json();
      setContent(content);
    })();
  }, []);

  if (content === '404') {
    return <p>Page not found.</p>;
  }

  if (!content) {
    return <p>Loading...</p>;
  }

  const components = {
    Callout
  };

  return Markdoc.renderers.react(content, React, { components });
}
CopyStart up the client and servernpm run start:client
Copyandnpm run start:server
CopyOr, clone this starter repo and follow the directions in the README.CMD + J / EscThis site was built using MarkdocLight modeLight modeThis site was built using Markdoc{"props":{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"Document","attributes":{"source":"---\ntitle: Using Markdoc with React\n---\n\n# {% $markdoc.frontmatter.title %}\n\nMarkdoc supports [rendering Markdoc syntax with React](/docs/render#react) out-of-the-box.\n\nTo get started with React, check out [this example repo](https://github.com/markdoc/docs/tree/main/examples/react-nodejs) for how to use Markdoc with [`create-react-app`](https://create-react-app.dev/) and [`express`](https://expressjs.com/).\n\n## Setup\n\nFollow these steps to build a Markdoc app with [`create-react-app`](https://create-react-app.dev/) and [`express`](https://expressjs.com/).\n\n1. Follow the [`create-react-app` getting started steps](https://create-react-app.dev/docs/getting-started) to create your initial app\n2. Set up a Markdoc schema\n\n   ```shell\n   schema/\n   ├── Callout.markdoc.js\n   └── heading.markdoc.js\n   ```\n\n   ```js\n   // [schema/Callout.markdoc.js](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/schema/Callout.markdoc.js#L1-L18)\n\n   module.exports = {\n     render: 'Callout',\n     children: ['paragraph', 'tag', 'list'],\n     attributes: {\n       type: {\n         type: String,\n         default: 'note',\n         matches: ['check', 'error', 'note', 'warning']\n       }\n     }\n   };\n   ```\n\n   ```js\n   // [schema/heading.markdoc.js](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/schema/heading.markdoc.js#L1-L22)\n\n   const { nodes } = require('@markdoc/markdoc');\n\n   function generateID(children, attributes) {\n     if (attributes.id \u0026\u0026 typeof attributes.id === 'string') {\n       return attributes.id;\n     }\n     return children\n       .filter((child) =\u003e typeof child === 'string')\n       .join(' ')\n       .replace(/[?]/g, '')\n       .replace(/\\s+/g, '-')\n       .toLowerCase();\n   }\n\n   module.exports = {\n     ...nodes.heading,\n     transform(node, config) {\n       const base = nodes.heading.transform(node, config);\n       base.attributes.id = generateID(base.children, base.attributes);\n       return base;\n     }\n   };\n   ```\n\n3. Parse your Markdoc documents on the server\n\n   ```js\n   // [...](https://github.com/markdoc/docs/blob/main/examples/react-nodejs/createContentManifest.js#L13)\n   const rawText = fs.readFileSync(file, 'utf-8');\n   const ast = Markdoc.parse(rawText);\n   ```\n\n4. Call `Markdoc.transform` on the server\n\n   ```js\n   // [server.js](https://github.com/markdoc/docs/blob/main/examples/react-nodejs/server.js)\n\n   const express = require('express');\n\n   const app = express();\n\n   const callout = require('./schema/callout.markdoc');\n   const heading = require('./schema/heading.markdoc');\n\n   // [...](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/server.js#L8-L14)\n\n   app.get('/markdoc', (req, res) =\u003e {\n     const ast = contentManifest[req.query.path];\n\n     const config = {\n       tags: {\n         callout\n       },\n       nodes: {\n         heading\n       },\n       variables: {}\n     };\n\n     const content = Markdoc.transform(ast, config);\n\n     return res.json(content);\n   });\n\n   app.listen(4242, () =\u003e {\n     console.log(`Example app listening on port ${4242}`);\n   });\n   ```\n\n5. Call `Markdoc.renderers.react` on the client\n\n   ```js\n   // src/App.js\n\n   import React from 'react';\n   import Markdoc from '@markdoc/markdoc';\n\n   import { Callout } from './Callout';\n\n   export default function App() {\n     const [content, setContent] = React.useState(null);\n\n     React.useEffect(() =\u003e {\n       (async () =\u003e {\n         const response = await fetch(\n           `/markdoc?` +\n             new URLSearchParams({ path: window.location.pathname }),\n           { headers: { Accept: 'application/json' } }\n         );\n\n         if (response.status === 404) {\n           setContent('404');\n           return;\n         }\n\n         const content = await response.json();\n         setContent(content);\n       })();\n     }, []);\n\n     if (content === '404') {\n       return \u003cp\u003ePage not found.\u003c/p\u003e;\n     }\n\n     if (!content) {\n       return \u003cp\u003eLoading...\u003c/p\u003e;\n     }\n\n     const components = {\n       Callout\n     };\n\n     return Markdoc.renderers.react(content, React, { components });\n   }\n   ```\n\n6. Start up the client and server\n   ```shell\n   npm run start:client\n   ```\n   and\n   ```shell\n   npm run start:server\n   ```\n\n\\\nOr, clone [this starter repo](https://github.com/markdoc/docs/tree/main/examples/react-nodejs) and follow the directions in the [README](https://github.com/markdoc/docs/tree/main/examples/react-nodejs/README.md).\n"},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"using-markdoc-with-react"},"children":["Using Markdoc with React"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Markdoc supports ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"/docs/render#react","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["rendering Markdoc syntax with React"]}," out-of-the-box."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To get started with React, check out ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/docs/tree/main/examples/react-nodejs","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["this example repo"]}," for how to use Markdoc with ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://create-react-app.dev/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["create-react-app"]}]}," and ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://expressjs.com/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["express"]}]},"."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"setup"},"children":["Setup"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Follow these steps to build a Markdoc app with ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://create-react-app.dev/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["create-react-app"]}]}," and ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://expressjs.com/","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["express"]}]},"."]},{"$$mdtype":"Tag","name":"ol","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Follow the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://create-react-app.dev/docs/getting-started","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["create-react-app"]}," getting started steps"]}," to create your initial app"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Set up a Markdoc schema"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"shell"},"children":["schema/\n├── Callout.markdoc.js\n└── heading.markdoc.js\n"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [schema/Callout.markdoc.js](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/schema/Callout.markdoc.js#L1-L18)\n\nmodule.exports = {\n  render: 'Callout',\n  children: ['paragraph', 'tag', 'list'],\n  attributes: {\n    type: {\n      type: String,\n      default: 'note',\n      matches: ['check', 'error', 'note', 'warning']\n    }\n  }\n};\n"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [schema/heading.markdoc.js](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/schema/heading.markdoc.js#L1-L22)\n\nconst { nodes } = require('@markdoc/markdoc');\n\nfunction generateID(children, attributes) {\n  if (attributes.id \u0026\u0026 typeof attributes.id === 'string') {\n    return attributes.id;\n  }\n  return children\n    .filter((child) =\u003e typeof child === 'string')\n    .join(' ')\n    .replace(/[?]/g, '')\n    .replace(/\\s+/g, '-')\n    .toLowerCase();\n}\n\nmodule.exports = {\n  ...nodes.heading,\n  transform(node, config) {\n    const base = nodes.heading.transform(node, config);\n    base.attributes.id = generateID(base.children, base.attributes);\n    return base;\n  }\n};\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Parse your Markdoc documents on the server"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [...](https://github.com/markdoc/docs/blob/main/examples/react-nodejs/createContentManifest.js#L13)\nconst rawText = fs.readFileSync(file, 'utf-8');\nconst ast = Markdoc.parse(rawText);\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Call ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Markdoc.transform"]}," on the server"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// [server.js](https://github.com/markdoc/docs/blob/main/examples/react-nodejs/server.js)\n\nconst express = require('express');\n\nconst app = express();\n\nconst callout = require('./schema/callout.markdoc');\nconst heading = require('./schema/heading.markdoc');\n\n// [...](https://github.com/markdoc/docs/blob/dcba1a62be92097e3fd50c21e05fd6d2ea709312/examples/react-nodejs/server.js#L8-L14)\n\napp.get('/markdoc', (req, res) =\u003e {\n  const ast = contentManifest[req.query.path];\n\n  const config = {\n    tags: {\n      callout\n    },\n    nodes: {\n      heading\n    },\n    variables: {}\n  };\n\n  const content = Markdoc.transform(ast, config);\n\n  return res.json(content);\n});\n\napp.listen(4242, () =\u003e {\n  console.log(`Example app listening on port ${4242}`);\n});\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Call ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Markdoc.renderers.react"]}," on the client"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"js"},"children":["// src/App.js\n\nimport React from 'react';\nimport Markdoc from '@markdoc/markdoc';\n\nimport { Callout } from './Callout';\n\nexport default function App() {\n  const [content, setContent] = React.useState(null);\n\n  React.useEffect(() =\u003e {\n    (async () =\u003e {\n      const response = await fetch(\n        `/markdoc?` +\n          new URLSearchParams({ path: window.location.pathname }),\n        { headers: { Accept: 'application/json' } }\n      );\n\n      if (response.status === 404) {\n        setContent('404');\n        return;\n      }\n\n      const content = await response.json();\n      setContent(content);\n    })();\n  }, []);\n\n  if (content === '404') {\n    return \u003cp\u003ePage not found.\u003c/p\u003e;\n  }\n\n  if (!content) {\n    return \u003cp\u003eLoading...\u003c/p\u003e;\n  }\n\n  const components = {\n    Callout\n  };\n\n  return Markdoc.renderers.react(content, React, { components });\n}\n"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Start up the client and server"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"shell"},"children":["npm run start:client\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["and"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"shell"},"children":["npm run start:server\n"]}]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"br","attributes":{},"children":[]},"Or, clone ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/docs/tree/main/examples/react-nodejs","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["this starter repo"]}," and follow the directions in the ",{"$$mdtype":"Tag","name":"Link","attributes":{"href":"https://github.com/markdoc/docs/tree/main/examples/react-nodejs/README.md","passHref":false,"replace":false,"scroll":true,"shallow":true},"children":["README"]},"."]}]},"frontmatter":{"title":"Using Markdoc with React"},"file":{"path":"/docs/examples/react.md"}}},"__N_SSG":true},"page":"/docs/examples/react","query":{},"buildId":"-hXEBjpCT4LtI-SntBxsx","isFallback":false,"gsp":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}