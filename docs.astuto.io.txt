

--- index.html ---






Introduction | Astuto Documentationfunction maybeInsertBanner(){window.__DOCUSAURUS_INSERT_BASEURL_BANNER&&insertBanner()}function insertBanner(){var n=document.getElementById("docusaurus-base-url-issue-banner-container");if(n){n.innerHTML='\n<div id="docusaurus-base-url-issue-banner" style="border: thick solid red; background-color: rgb(255, 230, 179); margin: 20px; padding: 20px; font-size: 20px;">\n   <p style="font-weight: bold; font-size: 30px;">Your Docusaurus site did not load properly.</p>\n   <p>A very common reason is a wrong site <a href="https://docusaurus.io/docs/docusaurus.config.js/#baseurl" style="font-weight: bold;">baseUrl configuration</a>.</p>\n   <p>Current configured baseUrl = <span style="font-weight: bold; color: red;">/</span>  (default value)</p>\n   <p>We suggest trying baseUrl = <span id="docusaurus-base-url-issue-banner-suggestion-container" style="font-weight: bold; color: green;"></span></p>\n</div>\n';var e=document.getElementById("docusaurus-base-url-issue-banner-suggestion-container"),s=window.location.pathname,r="/"===s.substr(-1)?s:s+"/";e.innerHTML=r}}window.__DOCUSAURUS_INSERT_BASEURL_BANNER=!0,document.addEventListener("DOMContentLoaded",maybeInsertBanner)




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()
Skip to main contentAstuto DocumentationIntroductionDeploy with DockerSMTP ConfigurationOAuth ConfigurationCustom Domain ConfigurationAppearance CustomizationIntroductionIntroductionWelcome to the Astuto documentation. What are you looking for?Deploy AstutoSMTP configurationConfigure custom OAuth providersCustomize Astuto appearanceConfigure a custom domainEdit this pageNextDeploy with DockerUseful pagesDeploy with DockerOAuth Configuration BasicsCommon OAuth ProvidersCustom Domain ConfigurationCommunityGitHubDiscordCrowdinProduct HuntAboutAstuto Home PageCopyright © 2024 Astuto





--- custom-domain.html ---






Custom Domain Configuration | Astuto Documentation




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()
Skip to main contentAstuto DocumentationIntroductionDeploy with DockerSMTP ConfigurationOAuth ConfigurationCustom Domain ConfigurationAppearance CustomizationCustom Domain ConfigurationCustom Domain ConfigurationYou can configure a custom domain (e.g. feedback.yoursite.com) to access Astuto instead of the default subdomain.astuto.io.Follow these instructions in order:In your domain management website, add a DNS record of type CNAME pointing to cname.astuto.io. Note: point exactly to cname.astuto.io, not yoursubdomain.astuto.io!In Astuto site settings, go to "General" and fill the "Custom domain" field with the chosen host name (e.g. feedback.yoursite.com). Note: just write the host name, without https or slashes.Click "Save". Wait a few moments and you should be able to access Astuto from feedback.yoursite.com.Follow the instructions in orderYou must first add the DNS CNAME record, and only then add the custom domain to Astuto. Doing the other way around won't work!Edit this pagePreviousCommon OAuth ProvidersNextAppearance CustomizationUseful pagesDeploy with DockerOAuth Configuration BasicsCommon OAuth ProvidersCustom Domain ConfigurationCommunityGitHubDiscordCrowdinProduct HuntAboutAstuto Home PageCopyright © 2024 Astuto





--- appearance-customization.html ---






Appearance Customization | Astuto Documentation




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()
Skip to main contentAstuto DocumentationIntroductionDeploy with DockerSMTP ConfigurationOAuth ConfigurationCustom Domain ConfigurationAppearance CustomizationAppearance CustomizationOn this pageAppearance CustomizationUnder "Site settings > Appearance" you can override CSS variables and define your own custom CSS styles.cautionNote that Astuto HTML classes and ids can change without notice, so try to keep CSS selectors simple and do not overuse this feature.CSS variables​There are two main colors that can be customized through variables: primary-color and background-color. These variables are here to stay, so it is safe to override them. Just type the following CSS code in the editor, adjusting colors to your preferences::root {  --primary-color: rgb(0, 0, 0);  --background-color: rgb(255, 255, 255);}Edit this pagePreviousCustom Domain ConfigurationCSS variablesUseful pagesDeploy with DockerOAuth Configuration BasicsCommon OAuth ProvidersCustom Domain ConfigurationCommunityGitHubDiscordCrowdinProduct HuntAboutAstuto Home PageCopyright © 2024 Astuto





--- smtp-configuration.html ---






SMTP Configuration | Astuto Documentation




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()
Skip to main contentAstuto DocumentationIntroductionDeploy with DockerSMTP ConfigurationOAuth ConfigurationCustom Domain ConfigurationAppearance CustomizationSMTP ConfigurationOn this pageSMTP ConfigurationThis page provides information on configuring Astuto to work with a SMTP server. Some simple examples will be shown alongside possible problems that might arise. In the end, a full list of available environment variables for SMTP configuration is provided.Get insightful logs about email deliveryDuring initial SMTP configuration, you may find it useful to set the environment variables EMAIL_RAISE_DELIVERY_ERRORS and RAILS_LOG_TO_STDOUT both to true. This will make Astuto print useful logs regarding email delivery. After testing that your configuration works, you can remove these environment variables or set them to false.Examples​SMTP server (with authentication)​Set the following environment variables:EMAIL_DELIVERY_METHOD=smtpEMAIL_SMTP_HOST=your.smtp.hostEMAIL_SMTP_PORT=25EMAIL_SMTP_USER=your_smtp_userEMAIL_SMTP_PASS=your_smtp_passTry login over plainIf you get an error with the above configuration, it may be that your SMTP server doesn't support the plain authentication method (which is used by default by Astuto). Try to set the additional environment variable EMAIL_SMTP_AUTH to login.SMTP server (without authentication, not recommended)​If you plan on using a SMTP server without any authentication, then set the following environment variables (note: don't define EMAIL_SMTP_USER and EMAIL_SMTP_PASS at all):EMAIL_DELIVERY_METHOD=smtpEMAIL_SMTP_HOST=your.smtp.hostEMAIL_SMTP_PORT=25SMTP environment variables​The following table contains all the available environment variables you can set to configure SMTP. All these environment variable must be set on the web Docker service only.Environment variableDescriptionEMAIL_DELIVERY_METHODSee hereEMAIL_SMTP_HOSTSee hereEMAIL_SMTP_PORTSee hereEMAIL_SMTP_USERSee hereEMAIL_SMTP_PASSSee hereEMAIL_RAISE_DELIVERY_ERRORSWhether to log information about email delivery. Useful for debugging purposes (optional, defaults to: false)EMAIL_SMTP_AUTHSMTP server authentication type (optional, defaults to: plain, available values: plain, login)EMAIL_MAIL_FROMSet default MAIL_FROM email (optional, defaults to: noreply@astuto.io)EMAIL_MAIL_REPLY_TOSet default REPLY_TO email (optional, defaults to: noreply@astuto.io)EMAIL_SMTP_HELO_DOMAINHELO domain (optional)EMAIL_SMTP_STARTTLS_AUTODetects if STARTTLS is enabled in your SMTP server and starts to use it (optional, default: true)EMAIL_SMTP_TLSEnables the SMTP connection to use SMTP/TLS (optional)EMAIL_SMTP_OPENSSL_VERIFY_MODESee here for more informationEdit this pagePreviousDeploy with DockerNextOAuth ConfigurationExamplesSMTP server (with authentication)SMTP server (without authentication, not recommended)SMTP environment variablesUseful pagesDeploy with DockerOAuth Configuration BasicsCommon OAuth ProvidersCustom Domain ConfigurationCommunityGitHubDiscordCrowdinProduct HuntAboutAstuto Home PageCopyright © 2024 Astuto





--- oauth/common-oauth-providers.html ---






Common OAuth Providers | Astuto Documentation




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()
Skip to main contentAstuto DocumentationIntroductionDeploy with DockerSMTP ConfigurationOAuth ConfigurationOAuth Configuration BasicsOAuth Configuration AdvancedCommon OAuth ProvidersCustom Domain ConfigurationAppearance CustomizationOAuth ConfigurationCommon OAuth ProvidersOn this pageCommon OAuth ProvidersThis page contains tutorials for configuring some common OAuth providers.Want to skip OAuth providers configuration?Try Astuto paid plan, which comes with Google, Facebook and GitHub already configured! You get a 7-day free trial without entering any payment method, then you pay as little as 15 €/month with annual subscription. Learn more or start your 7-day trial now.Google​Navigate to https://console.developers.google.com and create a new projectUsing the left sidebar, navigate to "API and services" and then to "Credentials"Click "Create Credentials" and then click "OAuth client ID"Choose "Web application" as "Application type", type the name of your application and click "Create"Take note of the "Client ID" and "Client secret" shownOn Astuto, navigate to "Site Settings > Authentication" and click "New"Fill the form with the following values and click "Save":Name: GoogleClient ID: the Client ID you took note ofClient Secret: the Client Secret you took note ofAuthorize URL: https://accounts.google.com/o/oauth2/v2/authToken URL: https://accounts.google.com/o/oauth2/tokenScope: https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profileProfile URL: https://www.googleapis.com/oauth2/v2/userinfoJSON path to user email: emailJSON path to user name: nameOn Astuto, navigate to "Site Settings > Authentication" and click "Copy URL" next to the Google OAuthOn Cloud Console, edit the newly created OAuth ClientUnder "Authorised redirect URIs", click "Add URI", paste the copied URL and click "Save"On Astuto, test the newly configured providerFacebook​Navigate to https://developers.facebook.com/apps/creation/, create a new project and follow the instructionsThen, from your project dashboard, in the lower left corner, click "App settings" and then "Basic"Take note of the "App ID" and "App secret"On Astuto, navigate to "Site Settings > Authentication" and click "New"Fill the form with the following values and click "Save":Name: FacebookClient ID: the App ID you took note ofClient Secret: the App Secret you took note ofAuthorize URL: https://www.facebook.com/v19.0/dialog/oauthToken URL: https://graph.facebook.com/v19.0/oauth/access_tokenScope: emailProfile URL: https://graph.facebook.com/v19.0/me?fields=email,nameJSON path to user email: emailJSON path to user name: nameOn Astuto, navigate to "Site Settings > Authentication" and click "Copy URL" next to the Facebook OAuthThen, from your Facebook project dashboard, in the left sidebar, click "Use cases" and, on the right of "Authentication and account creation", click the "Customize" buttonAdd "email" under "Permissions" if not already activatedClick "Go to settings" buttonIn "Valid OAuth Redirect URIs" paste the copied URL and click "Save changes"On Astuto, test the newly configured providerDiscord​Navigate to https://discord.com/developers/applications and click "New Application"Type the name of your application (e.g. "Astuto"), accept the terms of service and click "Create"Using the left sidebar, navigate to "OAuth2 > General"Take note of the "Application ID" shownClick "Reset Secret" and take note of the "Client Secret" shownOn Astuto, navigate to "Site Settings > Authentication" and click "New"Fill the form with the following values and click "Save":Name: DiscordClient ID: the Application ID you took note ofClient Secret: the Client Secret you took note ofAuthorize URL: https://discord.com/oauth2/authorizeToken URL: https://discord.com/api/oauth2/tokenScope: email identifyProfile URL: https://discord.com/api/users/@meJSON path to user email: emailJSON path to user name: usernameOn Astuto, navigate to "Site Settings > Authentication" and click "Copy URL" next to the Discord OAuthOn Discord, navigate again to "OAuth2 > General"Click "Add Redirect", paste the copied URL and click "Save"On Astuto, test the newly configured providerGitHub​This is an advanced configurationIf you don't understand what's going on in the following configuration, you may want to take a look at the advanced OAuth configuration instructions.Navigate to https://github.com/settings/developers and click "New OAuth App"Type the name of your application (e.g. "Astuto")Type your homepage URLSince we do not have a callback URL yet, enter the homepage URL again. We will edit it later.Click "Register application"Click "Generate client secret", then take note of "Client ID" and "Client secret"On Astuto, navigate to "Site Settings > Authentication" and click "New"Fill the form with the following values and click "Save":Name: GitHubClient ID: the Client ID you took note ofClient Secret: the Client Secret you took note ofAuthorize URL: https://github.com/login/oauth/authorizeToken URL: https://github.com/login/oauth/access_tokenScope: userProfile URL: https://api.github.com/user/emails;https://api.github.com/userJSON path to user email: profile0[0].emailJSON path to user name: profile1.nameOn Astuto, navigate to "Site Settings > Authentication" and click "Copy URL" next to the GitHub OAuthOn GitHub, on the OAuth page, scroll all the way down. Paste the copied URL to "Authorization callback URL"Click "Update application"On Astuto, test the newly configured providerEdit this pagePreviousOAuth Configuration AdvancedNextCustom Domain ConfigurationGoogleFacebookDiscordGitHubUseful pagesDeploy with DockerOAuth Configuration BasicsCommon OAuth ProvidersCustom Domain ConfigurationCommunityGitHubDiscordCrowdinProduct HuntAboutAstuto Home PageCopyright © 2024 Astuto





--- category/oauth-configuration.html ---






OAuth Configuration | Astuto Documentation




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()
Skip to main contentAstuto DocumentationIntroductionDeploy with DockerSMTP ConfigurationOAuth ConfigurationOAuth Configuration BasicsOAuth Configuration AdvancedCommon OAuth ProvidersCustom Domain ConfigurationAppearance CustomizationOAuth ConfigurationOAuth ConfigurationLearn how to configure your custom OAuth providers.📄️ OAuth Configuration BasicsThis page offers an overview of the available settings for configuring custom OAuth providers. If you're completely new to OAuth, we suggest reading this Digital Ocean tutorial first. If you're trying to configure a specific OAuth provider, check whether it's available in our list of guides for common OAuth providers.📄️ OAuth Configuration AdvancedThis page explains some advanced techniques for configuring OAuth providers.📄️ Common OAuth ProvidersThis page contains tutorials for configuring some common OAuth providers.PreviousSMTP ConfigurationNextOAuth Configuration BasicsUseful pagesDeploy with DockerOAuth Configuration BasicsCommon OAuth ProvidersCustom Domain ConfigurationCommunityGitHubDiscordCrowdinProduct HuntAboutAstuto Home PageCopyright © 2024 Astuto





--- deploy-docker.html ---






Deploy with Docker | Astuto Documentation




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()
Skip to main contentAstuto DocumentationIntroductionDeploy with DockerSMTP ConfigurationOAuth ConfigurationCustom Domain ConfigurationAppearance CustomizationDeploy with DockerOn this pageDeploy with DockerWant to avoid deployment and maintenance?Try Astuto paid plan! You get a 7-day free trial without entering any payment method, then you pay as little as 15 €/month with annual subscription. Learn more or start your 7-day trial now.0. Requirements​DockerDocker Compose1. Create a Docker Compose file​Create an empty folder and, inside that folder, create a file named docker-compose.yml with the following content:docker-compose.ymlservices:  db:    image: postgres:14.5    environment: &db-env      POSTGRES_USER: yourpostgresusername      POSTGRES_PASSWORD: yourpostgrespassword    volumes:      - dbdata:/var/lib/postgresql/data  web:    image: riggraz/astuto:latest    environment:      <<: *db-env      BASE_URL: http://yourwebsite.com      SECRET_KEY_BASE: yoursecretkeybase    ports:      - "3000:3000"    depends_on:      - db    volumes:  dbdata:2. Edit environment variables​In docker-compose.yml, set the following environment variables to suit your needs:Environment variableServiceDescriptionPOSTGRES_USERdbUsername for the Postgres databasePOSTGRES_PASSWORDdbPassword for the Postgres databaseBASE_URLwebThe base URL from where the website will be servedSECRET_KEY_BASEwebA secure 64 characters secret (you can generate one from this site)EMAIL_DELIVERY_METHODwebPossible values: "smtp". If you don't want to configure an email delivery method, don't define this variable.EMAIL_SMTP_HOSTwebHostname of your SMTP serverEMAIL_SMTP_PORTwebPort of your SMTP server (optional, defaults to: 25)EMAIL_SMTP_USERwebUsername for your SMTP server (optional, don't define this variable if your SMTP server doesn't require authentication)EMAIL_SMTP_PASSwebPassword for your SMTP server (optional, don't define this variable if your SMTP server doesn't require authentication)other SMTP variables...A full list of environment variables for email configuration and other helpful tips can be found at this linkRAILS_LOG_TO_STDOUTwebWhether to log to stdout or not. Useful for debugging purposes. (optional, defaults to false in production)3. Run​Run the following command:docker compose pull && docker compose upYou should now have a running instance of Astuto on port 3000. A default user account has been created with credentials email: admin@example.com, password: password.Permission denied on LinuxIf you are on Linux and you encounter permission denied errors when running Docker commands, try to run them as administrator.Edit this pagePreviousIntroductionNextSMTP Configuration0. Requirements1. Create a Docker Compose file2. Edit environment variables3. RunUseful pagesDeploy with DockerOAuth Configuration BasicsCommon OAuth ProvidersCustom Domain ConfigurationCommunityGitHubDiscordCrowdinProduct HuntAboutAstuto Home PageCopyright © 2024 Astuto





--- oauth/oauth-configuration-basics.html ---






OAuth Configuration Basics | Astuto Documentation




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()
Skip to main contentAstuto DocumentationIntroductionDeploy with DockerSMTP ConfigurationOAuth ConfigurationOAuth Configuration BasicsOAuth Configuration AdvancedCommon OAuth ProvidersCustom Domain ConfigurationAppearance CustomizationOAuth ConfigurationOAuth Configuration BasicsOn this pageOAuth Configuration BasicsThis page offers an overview of the available settings for configuring custom OAuth providers. If you're completely new to OAuth, we suggest reading this Digital Ocean tutorial first. If you're trying to configure a specific OAuth provider, check whether it's available in our list of guides for common OAuth providers.OAuth Configuration​You can create a new OAuth provider from "Site Settings > Authentication > New".You need to fill the following fields:Name: the name of the OAuth providerLogo (optional): URL to the logo of the OAuth providerClient ID: the client ID issued by the OAuth provider upon registering your applicationClient secret: the client secret issued by the OAuth provider upon registering your applicationAuthorize URL: URL to the OAuth provider authentication pageToken URL: URL to the OAuth provider endpoint for retrieving the access tokenScopes: space-separated list of the data you're requesting to the OAuth provider. In order for Astuto to work, you need to provide at least the email scope, whereas the name scope is optional but recommended.Profile URL: URL to the OAuth provider endpoint from which to retrieve profile informationJSON path to user email: the path needed to extract the email from the JSON returned by the OAuth providerJSON path to user name (optional): the path needed to extract the name from the JSON returned by the OAuth providerHow To Configure JSON Paths​Suppose the OAuth provider returns this JSON structure:{  "user_profile": {    "full_name": "Name Surname",    "age": 28,    "emails": [      "email1@test.com",      "email2@test.com"    ]  }}The fields JSON path to user email and JSON path to user name explains to Astuto how to get the email and the name respectively.In the example above, we should set JSON path to user email to user_profile.emails[0] in order to retrieve email1@test.com, and JSON path to user name to user_profile.full_name in order to retrieve Name Surname.Test Your OAuth Configuration​Before enabling your custom OAuth provider, be sure to test it to check if it works as expected. In order to test a OAuth provider, click the "Test" button from the "Site Settings > Authentication" page.If your configuration is correct, the provider's login page will appear. Insert your credentials and log in to the OAuth provider. A summary page of the OAuth configuration will appear, showing the JSON returned by the OAuth provider and whether the email and name fields were correctly retrieved.The following is an example of a correctly configured OAuth provider with Discord:If both the email and the name are successfully found, then the OAuth is configured correctly.Email is requiredIf the email cannot be retrieved, then the OAuth provider cannot be used to log in and its configuration must be fixed.Name is optionalIf the email is successfully found but the name is not, then the OAuth can be used to log in but users will have the name "Anonymous User".After you've tested that your OAuth configuration works as expected, remember to enable it from "Site Settings > Authentication".Edit this pagePreviousOAuth ConfigurationNextOAuth Configuration AdvancedOAuth ConfigurationHow To Configure JSON PathsTest Your OAuth ConfigurationUseful pagesDeploy with DockerOAuth Configuration BasicsCommon OAuth ProvidersCustom Domain ConfigurationCommunityGitHubDiscordCrowdinProduct HuntAboutAstuto Home PageCopyright © 2024 Astuto





--- oauth/oauth-configuration-advanced.html ---






OAuth Configuration Advanced | Astuto Documentation




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()
Skip to main contentAstuto DocumentationIntroductionDeploy with DockerSMTP ConfigurationOAuth ConfigurationOAuth Configuration BasicsOAuth Configuration AdvancedCommon OAuth ProvidersCustom Domain ConfigurationAppearance CustomizationOAuth ConfigurationOAuth Configuration AdvancedOn this pageOAuth Configuration AdvancedThis page explains some advanced techniques for configuring OAuth providers.Requesting user data from multiple endpoints​Occasionally, some OAuth providers (e.g. GitHub) may return the user email from an endpoint and the username from a different endpoint.In these particular cases, you can specify multiple Profile URLS: just separate them with a semicolon (;). Astuto will make a request to each of these endpoints and return a single JSON object with keys profile0 (for the first profile URL provided), profile1 (for the second profile URL provided), and so on. Each of this profile contains the response from the respective profile URL.For example, if you configure GitHub as written in the documentation, you will get back the following JSON object:{  "profile0": [    {      "email": "riccardo.graziosi97@gmail.com",      "primary": true,      "verified": true,      "visibility": "private"    }  ],  "profile1": {    "login": "riggraz",    "name": "Riccardo Graziosi",    "company": null,    "blog": "https://riggraz.dev/",    ...}Then, you can use the JSON path to user email and username to get the data you need!Edit this pagePreviousOAuth Configuration BasicsNextCommon OAuth ProvidersRequesting user data from multiple endpointsUseful pagesDeploy with DockerOAuth Configuration BasicsCommon OAuth ProvidersCustom Domain ConfigurationCommunityGitHubDiscordCrowdinProduct HuntAboutAstuto Home PageCopyright © 2024 Astuto



